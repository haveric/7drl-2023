{"version":3,"file":"app.56568f8a5d1b7ec5448b.js","mappings":"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","sources":["webpack://7drl-2023/./src/styles/style.css","webpack://7drl-2023/./node_modules/css-loader/dist/runtime/api.js","webpack://7drl-2023/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://7drl-2023/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://7drl-2023/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://7drl-2023/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://7drl-2023/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://7drl-2023/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://7drl-2023/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://7drl-2023/./src/styles/style.css?ff94","webpack://7drl-2023/./src/js/actions/_Action.js","webpack://7drl-2023/./src/js/actions/NoAction.js","webpack://7drl-2023/./src/js/actions/UnableToPerformAction.js","webpack://7drl-2023/./src/js/message/SubMessage.js","webpack://7drl-2023/./src/js/message/Message.js","webpack://7drl-2023/./src/js/ui/_UIElement.js","webpack://7drl-2023/./src/js/ui/MessageConsole.js","webpack://7drl-2023/./src/js/message/MessageManager.js","webpack://7drl-2023/./src/js/ui/ViewInfo.js","webpack://7drl-2023/./src/js/sprite/Texture.js","webpack://7drl-2023/./src/js/sprite/TextureManager.js","webpack://7drl-2023/./src/js/sprite/Sprite.js","webpack://7drl-2023/./src/js/sprite/SpriteManager.js","webpack://7drl-2023/./src/js/util/ArrayUtil.js","webpack://7drl-2023/./src/js/components/_Component.js","webpack://7drl-2023/./src/js/components/_arg/Arg.js","webpack://7drl-2023/./src/js/components/Fov.js","webpack://7drl-2023/./src/js/map/fov/_BaseFov.js","webpack://7drl-2023/./src/js/map/fov/FovSlope.js","webpack://7drl-2023/./src/js/map/fov/AdamMilazzoFov.js","webpack://7drl-2023/./src/js/util/Extend.js","webpack://7drl-2023/./src/js/components/ai/_AI.js","webpack://7drl-2023/./src/js/components/ai/AIDead.js","webpack://7drl-2023/./src/js/ui/HeroInfo.js","webpack://7drl-2023/./src/js/components/Position.js","webpack://7drl-2023/./src/js/util/MathUtil.js","webpack://7drl-2023/./src/js/actions/actionWithDirection/_ActionWithDirection.js","webpack://7drl-2023/./src/js/actions/actionWithDirection/MeleeAction.js","webpack://7drl-2023/./src/js/actions/actionWithDirection/MovementAction.js","webpack://7drl-2023/./src/js/actions/WaitAction.js","webpack://7drl-2023/./src/js/actions/WanderAction.js","webpack://7drl-2023/./src/js/pathfinding/BinaryHeap.js","webpack://7drl-2023/./src/js/pathfinding/AStar.js","webpack://7drl-2023/./src/js/pathfinding/GridNode.js","webpack://7drl-2023/./src/js/pathfinding/Graph.js","webpack://7drl-2023/./src/js/actions/actionWithDirection/CleanAction.js","webpack://7drl-2023/./src/js/actions/actionWithDirection/InteractAtAction.js","webpack://7drl-2023/./src/js/actions/actionWithDirection/BumpAction.js","webpack://7drl-2023/./src/js/actions/InteractAction.js","webpack://7drl-2023/./src/js/components/ai/AIHero.js","webpack://7drl-2023/./src/js/components/ai/AIMeleeChase.js","webpack://7drl-2023/./src/js/components/interactable/_Interactable.js","webpack://7drl-2023/./src/js/event/_EventHandler.js","webpack://7drl-2023/./src/js/controls/Key.js","webpack://7drl-2023/./src/js/controls/Controls.js","webpack://7drl-2023/./src/js/event/askUserEventHandler/_AskUserEventHandler.js","webpack://7drl-2023/./src/js/ui/TradeList.js","webpack://7drl-2023/./src/js/event/askUserEventHandler/tradeListEventHandler/_TradeListEventHandler.js","webpack://7drl-2023/./src/js/event/askUserEventHandler/tradeListEventHandler/LootableEventHandler.js","webpack://7drl-2023/./src/js/ui/Inventory.js","webpack://7drl-2023/./src/js/components/_arg/ArgEntityLoader.js","webpack://7drl-2023/./src/js/components/interactable/LootableInteractable.js","webpack://7drl-2023/./src/js/ui/SelectList.js","webpack://7drl-2023/./src/js/event/askUserEventHandler/selectListEventHandler/_SelectListEventHandler.js","webpack://7drl-2023/./src/js/event/askUserEventHandler/selectListEventHandler/StairsSelectEventHandler.js","webpack://7drl-2023/./src/js/components/interactable/StairsInteractable.js","webpack://7drl-2023/./src/js/components/interactable/TrapDoorInteractable.js","webpack://7drl-2023/./src/js/components/_arg/ArgSingularBool.js","webpack://7drl-2023/./src/js/components/BlocksFov.js","webpack://7drl-2023/./src/js/components/BlocksMovement.js","webpack://7drl-2023/./src/js/components/Cleanable.js","webpack://7drl-2023/./src/js/components/_arg/ArgSimpleArray.js","webpack://7drl-2023/./src/js/components/Faction.js","webpack://7drl-2023/./src/js/ui/PlayerInfo.js","webpack://7drl-2023/./src/js/components/Fighter.js","webpack://7drl-2023/./src/js/components/Inventory.js","webpack://7drl-2023/./src/js/actions/itemAction/ItemAction.js","webpack://7drl-2023/./src/js/components/consumable/_Consumable.js","webpack://7drl-2023/./src/js/components/consumable/HealingConsumable.js","webpack://7drl-2023/./src/js/components/ComponentLoader.js","webpack://7drl-2023/./src/js/ui/Details.js","webpack://7drl-2023/./src/js/SceneState.js","webpack://7drl-2023/./src/js/entity/_Entity.js","webpack://7drl-2023/./src/js/entity/Actor.js","webpack://7drl-2023/./src/js/entity/Tile.js","webpack://7drl-2023/./src/js/entity/Item.js","webpack://7drl-2023/./src/js/entity/EntityLoader.js","webpack://7drl-2023/./src/js/map/tile/GameMap.js","webpack://7drl-2023/./src/js/map/tile/room/_Room.js","webpack://7drl-2023/./src/js/map/mapGeneration/ChanceLoader.js","webpack://7drl-2023/./src/js/map/tile/room/RectangularRoom.js","webpack://7drl-2023/./src/js/map/tile/BasicDungeon.js","webpack://7drl-2023/./src/js/map/tile/Shop.js","webpack://7drl-2023/./src/js/map/MapLoader.js","webpack://7drl-2023/./src/js/Engine.js","webpack://7drl-2023/./src/js/event/DefaultPlayerEventHandler.js","webpack://7drl-2023/./src/js/map/tile/Tutorial.js","webpack://7drl-2023/./src/index.js","webpack://7drl-2023/./src/json/entities/ eager \\.json$"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"* {\\n    box-sizing: border-box;\\n}\\n\\nbody {\\n    margin: 0 auto;\\n    overflow: hidden;\\n    width: 100vw;\\n    height: 100vh;\\n    font-size: 1.2vh;\\n}\\n\\n.ui {\\n    display: block;\\n    z-index: -1000 !important;\\n    opacity: 0;\\n    pointer-events: none;\\n}\\n\\n.ui.active {\\n    z-index: 0 !important;\\n    opacity: 1;\\n    pointer-events: all;\\n}\\n\\n\\n.details {\\n    padding: 10px 15px;\\n    font-size: 2vh;\\n    display: block;\\n    width: 20%;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    background-color: #ddd;\\n}\\n\\n.details__header {\\n    margin-top: 20px;\\n}\\n\\n.details__line {\\n    display: block;\\n}\\n\\n.player-info {\\n    height: calc(20vh - 10px);\\n    border-bottom: 1px solid #000;\\n}\\n\\n.view-info {\\n    height: 30vh;\\n    border-bottom: 1px solid #000;\\n}\\n\\n.message-console {\\n    position: relative;\\n    height: calc(50vh - 10px);\\n}\\n\\n.messages__wrap {\\n    position: absolute;\\n    opacity: 1;\\n    padding: 15px 5px 5px;\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n.messages {\\n    display:flex;\\n    flex-direction:column-reverse;\\n    height: 100%;\\n    overflow-y: scroll;\\n}\\n\\n\\n.messages__inn {\\n\\n}\\n\\n.message {\\n    font-size: 1.66vh;\\n}\\n\\n.message__text {\\n\\n}\\n\\n.message__bold {\\n    font-weight: bold;\\n}\\n\\n.message__italics {\\n    font-style: italic;\\n}\\n\\n.message__amount {\\n    margin-left: 1em;\\n}\\n\\n\\n.player-health,\\n.hero-health {\\n    position: relative;\\n    width: 100%;\\n    height: 2vh;\\n    background-color: #000;\\n}\\n\\n.player-health__fg,\\n.hero-health__fg {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    bottom: 0;\\n    background-color: #8B0000;\\n}\\n\\n.player-health__text,\\n.hero-health__text {\\n    display: table;\\n    position: absolute;\\n    left: 0;\\n    right: 0;\\n    font-size: 1.8vh;\\n    color: #fff;\\n    margin: 0 auto;\\n}\\n\\n.player-stat,\\n.hero-stat {\\n    display: inline-block;\\n    float: left;\\n    width: 50%;\\n}\\n\\n.hero-info {\\n    display: inline-block;\\n    position: absolute;\\n    left: 25.5%;\\n    width: 24.5%;\\n    padding: 15px;\\n    font-size: 2vh;\\n}\\n\\n.hero-status__message {\\n    font-size: 2.5vh;\\n}\\n\\n.inventory {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    width: 30%;\\n    height: 80%;\\n    transform: translateX(100%);\\n    transition: transform 1s ease;\\n    background: #fff;\\n    padding: 15px;\\n}\\n\\n.inventory.active {\\n    transform: translateX(0);\\n}\\n\\n.inventory__equipment {\\n    width: 100%;\\n    height: 55%;\\n    display: grid;\\n    grid-template-columns: repeat(3, minmax(0, 1fr));\\n    grid-template-rows: repeat(4, minmax(0, 1fr));\\n    background-color: #333;\\n    grid-gap: 0.2vw;\\n    padding: 1vh 7.5vh\\n}\\n\\n.inventory__storage-wrap {\\n    width: 100%;\\n    height: 40%;\\n    background-color: #333;\\n    position: relative;\\n    overflow-y: auto;\\n}\\n\\n.inventory__storage {\\n    width: 100%;\\n    display: grid;\\n    grid-template-columns: repeat(10, minmax(0, 1fr));\\n    grid-gap: 0.2vw;\\n    padding: 0.2vw;\\n}\\n\\n.inventory__storage-title {\\n    grid-column: span 10;\\n    padding: 5px;\\n    background-color: #ccc;\\n    font-size: 1.8vh;\\n}\\n\\n.slot {\\n    background-color: gray;\\n    text-align: center;\\n    border-radius: 5px;\\n    position: relative;\\n    font-family: helvetica, serif;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.inventory__equipment-slot .item {\\n    font-size: 7.5vh;\\n}\\n\\n.inventory__equipment-slot:before {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    width: 100%;\\n    height: 100%;\\n    font-size: 7.5vh;\\n    opacity: 0.15;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.inventory__equipment-slot.has-item:before {\\n    display: none;\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"0\\\"]:before {\\n    content: \\\"⌈\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"1\\\"]:before {\\n    content: \\\"∩\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"2\\\"]:before {\\n    content: \\\"ᴕ\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"3\\\"]:before {\\n    content: \\\"†\\\";\\n    transform: rotate(180deg);\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"4\\\"]:before {\\n    content: \\\"☗\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"5\\\"]:before {\\n    content: \\\"●\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"6\\\"]:before,\\n.inventory__equipment-slot[data-index=\\\"8\\\"]:before {\\n    content: \\\"○\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"7\\\"]:before {\\n    content: \\\"-\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"9\\\"]:before {\\n    content: \\\"ひ\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"10\\\"]:before {\\n    content: \\\"◫\\\";\\n}\\n.inventory__equipment-slot[data-index=\\\"11\\\"]:before {\\n    content: \\\"″\\\";\\n}\\n\\n.inventory__storage-slot {\\n    height: 5.3vh;\\n}\\n\\n.slot.has-item:hover {\\n    cursor: pointer;\\n    background-color: #999;\\n}\\n\\n.slot.disabled {\\n    background-color: #845b5b;\\n}\\n\\n.slot.dragging .item {\\n    display: none;\\n}\\n\\n.select-list,\\n.trade-list {\\n    background-color: #ccc;\\n    border-radius: 5px;\\n    padding: 15px;\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    font-size: 1.5vh;\\n}\\n\\n.select-list__title,\\n.trade-list__title {\\n    margin: 0;\\n    padding-bottom: 5px;\\n    border-bottom: 1px solid #666;\\n    font-size: 2.5vh;\\n}\\n\\n.select-list__option::marker,\\n.trade-list__option::marker {\\n    color: #000;\\n}\\n.select-list__option.active,\\n.trade-list__option.active{\\n    background-color: #1E90FF;\\n    color: #fff;\\n}\\n\\n.trade-list__option {\\n    border: 1px dashed #666;\\n    padding: 5px 10px;\\n}\\n\\n.trade-list__left {\\n    width: 50%;\\n    float: left;\\n    border-right: 1px solid #000;\\n}\\n\\n.trade-list__right {\\n    width: 50%;\\n    float: left;\\n\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/style.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"* {\\n    box-sizing: border-box;\\n}\\n\\nbody {\\n    margin: 0 auto;\\n    overflow: hidden;\\n    width: 100vw;\\n    height: 100vh;\\n    font-size: 1.2vh;\\n}\\n\\n.ui {\\n    display: block;\\n    z-index: -1000 !important;\\n    opacity: 0;\\n    pointer-events: none;\\n}\\n\\n.ui.active {\\n    z-index: 0 !important;\\n    opacity: 1;\\n    pointer-events: all;\\n}\\n\\n\\n.details {\\n    padding: 10px 15px;\\n    font-size: 2vh;\\n    display: block;\\n    width: 20%;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    background-color: #ddd;\\n}\\n\\n.details__header {\\n    margin-top: 20px;\\n}\\n\\n.details__line {\\n    display: block;\\n}\\n\\n.player-info {\\n    height: calc(20vh - 10px);\\n    border-bottom: 1px solid #000;\\n}\\n\\n.view-info {\\n    height: 30vh;\\n    border-bottom: 1px solid #000;\\n}\\n\\n.message-console {\\n    position: relative;\\n    height: calc(50vh - 10px);\\n}\\n\\n.messages__wrap {\\n    position: absolute;\\n    opacity: 1;\\n    padding: 15px 5px 5px;\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n.messages {\\n    display:flex;\\n    flex-direction:column-reverse;\\n    height: 100%;\\n    overflow-y: scroll;\\n}\\n\\n\\n.messages__inn {\\n\\n}\\n\\n.message {\\n    font-size: 1.66vh;\\n}\\n\\n.message__text {\\n\\n}\\n\\n.message__bold {\\n    font-weight: bold;\\n}\\n\\n.message__italics {\\n    font-style: italic;\\n}\\n\\n.message__amount {\\n    margin-left: 1em;\\n}\\n\\n\\n.player-health,\\n.hero-health {\\n    position: relative;\\n    width: 100%;\\n    height: 2vh;\\n    background-color: #000;\\n}\\n\\n.player-health__fg,\\n.hero-health__fg {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    bottom: 0;\\n    background-color: #8B0000;\\n}\\n\\n.player-health__text,\\n.hero-health__text {\\n    display: table;\\n    position: absolute;\\n    left: 0;\\n    right: 0;\\n    font-size: 1.8vh;\\n    color: #fff;\\n    margin: 0 auto;\\n}\\n\\n.player-stat,\\n.hero-stat {\\n    display: inline-block;\\n    float: left;\\n    width: 50%;\\n}\\n\\n.hero-info {\\n    display: inline-block;\\n    position: absolute;\\n    left: 25.5%;\\n    width: 24.5%;\\n    padding: 15px;\\n    font-size: 2vh;\\n}\\n\\n.hero-status__message {\\n    font-size: 2.5vh;\\n}\\n\\n.inventory {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    width: 30%;\\n    height: 80%;\\n    transform: translateX(100%);\\n    transition: transform 1s ease;\\n    background: #fff;\\n    padding: 15px;\\n}\\n\\n.inventory.active {\\n    transform: translateX(0);\\n}\\n\\n.inventory__equipment {\\n    width: 100%;\\n    height: 55%;\\n    display: grid;\\n    grid-template-columns: repeat(3, minmax(0, 1fr));\\n    grid-template-rows: repeat(4, minmax(0, 1fr));\\n    background-color: #333;\\n    grid-gap: 0.2vw;\\n    padding: 1vh 7.5vh\\n}\\n\\n.inventory__storage-wrap {\\n    width: 100%;\\n    height: 40%;\\n    background-color: #333;\\n    position: relative;\\n    overflow-y: auto;\\n}\\n\\n.inventory__storage {\\n    width: 100%;\\n    display: grid;\\n    grid-template-columns: repeat(10, minmax(0, 1fr));\\n    grid-gap: 0.2vw;\\n    padding: 0.2vw;\\n}\\n\\n.inventory__storage-title {\\n    grid-column: span 10;\\n    padding: 5px;\\n    background-color: #ccc;\\n    font-size: 1.8vh;\\n}\\n\\n.slot {\\n    background-color: gray;\\n    text-align: center;\\n    border-radius: 5px;\\n    position: relative;\\n    font-family: helvetica, serif;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.inventory__equipment-slot .item {\\n    font-size: 7.5vh;\\n}\\n\\n.inventory__equipment-slot:before {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    width: 100%;\\n    height: 100%;\\n    font-size: 7.5vh;\\n    opacity: 0.15;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.inventory__equipment-slot.has-item:before {\\n    display: none;\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"0\\\"]:before {\\n    content: \\\"⌈\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"1\\\"]:before {\\n    content: \\\"∩\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"2\\\"]:before {\\n    content: \\\"ᴕ\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"3\\\"]:before {\\n    content: \\\"†\\\";\\n    transform: rotate(180deg);\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"4\\\"]:before {\\n    content: \\\"☗\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"5\\\"]:before {\\n    content: \\\"●\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"6\\\"]:before,\\n.inventory__equipment-slot[data-index=\\\"8\\\"]:before {\\n    content: \\\"○\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"7\\\"]:before {\\n    content: \\\"-\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"9\\\"]:before {\\n    content: \\\"ひ\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"10\\\"]:before {\\n    content: \\\"◫\\\";\\n}\\n.inventory__equipment-slot[data-index=\\\"11\\\"]:before {\\n    content: \\\"″\\\";\\n}\\n\\n.inventory__storage-slot {\\n    height: 5.3vh;\\n}\\n\\n.slot.has-item:hover {\\n    cursor: pointer;\\n    background-color: #999;\\n}\\n\\n.slot.disabled {\\n    background-color: #845b5b;\\n}\\n\\n.slot.dragging .item {\\n    display: none;\\n}\\n\\n.select-list,\\n.trade-list {\\n    background-color: #ccc;\\n    border-radius: 5px;\\n    padding: 15px;\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    font-size: 1.5vh;\\n}\\n\\n.select-list__title,\\n.trade-list__title {\\n    margin: 0;\\n    padding-bottom: 5px;\\n    border-bottom: 1px solid #666;\\n    font-size: 2.5vh;\\n}\\n\\n.select-list__option::marker,\\n.trade-list__option::marker {\\n    color: #000;\\n}\\n.select-list__option.active,\\n.trade-list__option.active{\\n    background-color: #1E90FF;\\n    color: #fff;\\n}\\n\\n.trade-list__option {\\n    border: 1px dashed #666;\\n    padding: 5px 10px;\\n}\\n\\n.trade-list__left {\\n    width: 50%;\\n    float: left;\\n    border-right: 1px solid #000;\\n}\\n\\n.trade-list__right {\\n    width: 50%;\\n    float: left;\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","export default class _Action {\n    constructor(entity) {\n        this.entity = entity;\n    }\n\n    /**\n     * @returns {_Action}\n     */\n    perform(/*gameMap*/) {\n        console.error(\"Not Implemented\");\n    }\n}","import _Action from \"./_Action\";\n\nexport default class NoAction extends _Action {\n    constructor(entity) {\n        super(entity);\n    }\n\n    perform(/*gameMap*/) {\n        return this;\n    }\n}","import _Action from \"./_Action\";\n\nexport default class UnableToPerformAction extends _Action {\n    constructor(entity, reason) {\n        super(entity);\n\n        this.reason = reason;\n    }\n\n    perform(/*gameMap*/) {\n        return this;\n    }\n}","export default class SubMessage {\n    constructor(text, color, options) {\n        this.text = text;\n        this.color = color || \"#333\";\n\n        this.bold = false;\n        this.italics = false;\n        if (options) {\n            this.bold = options.bold || false;\n            this.italics = options.italics || false;\n        }\n    }\n\n    isEqual(subMessage) {\n        return this.text === subMessage.text && this.color === subMessage.color && this.bold === subMessage.bold && this.italics === subMessage.italics;\n    }\n}","export default class Message {\n    constructor(subMessages = []) {\n        this.subMessages = subMessages;\n        this.count = 1;\n    }\n\n    isEqual(subMessages) {\n        if (this.subMessages.length !== subMessages.length) {\n            return false;\n        }\n\n        for (let i = 0; i < this.subMessages.length; i++) {\n            const sub1 = this.subMessages[i];\n            const sub2 = subMessages[i];\n\n            if (!sub1.isEqual(sub2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    getHtml() {\n        const messageDom = document.createElement(\"div\");\n        messageDom.classList.add(\"message\");\n\n        for (const subMessage of this.subMessages) {\n            const subMessageDom = document.createElement(\"span\");\n            subMessageDom.classList.add(\"message__text\");\n\n            if (subMessage.bold) {\n                subMessageDom.classList.add(\"message__bold\");\n            }\n\n            if (subMessage.italics) {\n                subMessageDom.classList.add(\"message__italics\");\n            }\n            subMessageDom.innerText = subMessage.text;\n            subMessageDom.style.color = subMessage.color;\n            messageDom.appendChild(subMessageDom);\n        }\n\n        if (this.count > 1) {\n            messageDom.appendChild(this.getCountHtml());\n        }\n\n        return messageDom;\n    }\n\n    getCountHtml() {\n        const amountDom = document.createElement(\"span\");\n        amountDom.classList.add(\"message__amount\");\n        amountDom.innerText = \"x\" + this.count;\n\n        return amountDom;\n    }\n}","export default class _UIElement {\n    constructor(html) {\n        this.dom = this.htmlToElement(html);\n    }\n\n    /**\n     * Reference: https://stackoverflow.com/a/35385518\n     * @param {String} html HTML representing a single element\n     * @return {Element}\n     */\n    htmlToElement(html) {\n        const template = document.createElement(\"template\");\n        html = html.trim(); // Never return a text node of whitespace as the result\n        template.innerHTML = html;\n        return template.content.firstChild;\n    }\n\n    appendTo(otherDom) {\n        otherDom.appendChild(this.dom);\n    }\n\n    // /**\n    //  * Reference: https://stackoverflow.com/a/35385518\n    //  * @param {String} html HTML representing any number of sibling elements\n    //  * @return {NodeList}\n    //  */\n    // htmlToElements(html) {\n    //     const template = document.createElement('template');\n    //     template.innerHTML = html;\n    //     return template.content.childNodes;\n    // }\n\n    isOpen() {\n        return this.dom.classList.contains(\"active\");\n    }\n\n    open() {\n        if (!this.dom.classList.contains(\"active\")) {\n            this.dom.classList.add(\"active\");\n        }\n    }\n\n    close() {\n        this.dom.classList.remove(\"active\");\n    }\n}","import html from \"../../html/ui/MessageConsole.html\";\nimport _UIElement from \"./_UIElement\";\n\nclass MessageConsole extends _UIElement {\n    constructor() {\n        super(html);\n\n        this.messagesInnerDom = this.dom.getElementsByClassName(\"messages__inn\")[0];\n    }\n\n    updateLastMessageCount(lastMessage) {\n        const lastMessageDom = document.querySelectorAll(\".message:last-child\")[0];\n        const amountDom = lastMessageDom.querySelectorAll(\".message__amount\")[0];\n\n        if (amountDom) {\n            amountDom.innerText = \"x\" + lastMessage.count;\n        } else {\n            lastMessageDom.appendChild(lastMessage.getCountHtml());\n        }\n    }\n\n    addMessage(messageHtml) {\n        this.messagesInnerDom.appendChild(messageHtml);\n    }\n\n    clear() {\n        this.messagesInnerDom.innerHTML = \"\";\n    }\n}\n\nconst messageConsole = new MessageConsole();\nexport default messageConsole;","import SubMessage from \"./SubMessage\";\nimport Message from \"./Message\";\nimport MessageConsole from \"../ui/MessageConsole\";\n\nclass MessageManager {\n    constructor() {\n        this.messages = [];\n        this.builder = [];\n    }\n\n    text(text, color, options) {\n        this.builder.push(new SubMessage(text, color, options));\n        return this; // Allow chaining\n    }\n\n    build(stack = true) {\n        this.addMessage(this.builder.slice(0), stack);\n        this.builder = [];\n    }\n\n    clear() {\n        this.messages = [];\n        MessageConsole.clear();\n    }\n\n    addMessage(subMessages, stack = true) {\n        if (stack && this.messages.length > 0) {\n            const lastMessage = this.messages[this.messages.length - 1];\n            if (lastMessage.isEqual(subMessages)) {\n                lastMessage.count += 1;\n                MessageConsole.updateLastMessageCount(lastMessage);\n            } else {\n                this.addNewMessage(subMessages);\n            }\n        } else {\n            this.addNewMessage(subMessages);\n        }\n    }\n\n    addNewMessage(subMessages) {\n        const newMessage = new Message(subMessages);\n        this.messages.push(newMessage);\n        MessageConsole.addMessage(newMessage.getHtml());\n    }\n}\n\nconst messageManager = new MessageManager();\nexport default messageManager;","import html from \"../../html/ui/ViewInfo.html\";\nimport _UIElement from \"./_UIElement\";\n\nclass ViewInfo extends _UIElement {\n    constructor() {\n        super(html);\n    }\n\n    updatePlayerDetails(player, playerMap) {\n        const playerPosition = player.getComponent(\"position\");\n        const tile = playerMap.tiles[playerPosition.x.get()][playerPosition.y.get()];\n        this.updatePositionDetails(tile);\n    }\n\n    getDetailsLine(innerText) {\n        return \"<span class='details__line'>\" + innerText + \"</span>\";\n    }\n\n    updatePositionDetails(tile) {\n        let text;\n        if (tile.getComponent(\"fov\")?.isExplored()) {\n            text = this.getDetailsLine(tile.name);\n\n        } else {\n            text = this.getDetailsLine(\"You haven't explored here.\");\n        }\n\n        this.dom.innerHTML = text;\n    }\n}\n\nconst viewInfo = new ViewInfo();\nexport default viewInfo;","export default class Texture {\n    constructor(name, image) {\n        this.name = name;\n        this.image = image;\n    }\n}","import Texture from \"./Texture\";\nimport engine from \"../Engine\";\n\nexport default class TextureManager {\n    constructor() {\n        this.textures = [];\n    }\n\n    addTexture(name, src) {\n        const self = this;\n        const image = new Image();\n\n        image.onload = function () {\n            self.textures.push(new Texture(name, image));\n        };\n        image.src = src;\n    }\n\n    getTexture(textureName) {\n        const length = this.textures.length;\n        for (let i = 0; i < length; i++) {\n            if (this.textures[i].name === textureName) {\n                return this.textures[i].image;\n            }\n        }\n        return null;\n    }\n\n    loadJson(textureName, json) {\n        const tileSize = json.tileSize;\n        const name = json.name;\n        const width = json.width;\n        const tiles = json.tiles;\n\n        let row = 0;\n        let col = 0;\n        for (const tile of tiles) {\n            engine.spriteManager.addImage(name + \"_\" + tile, textureName, col * tileSize, row * tileSize);\n\n            col ++;\n            if (col >= width) {\n                col -= width;\n                row ++;\n            }\n        }\n    }\n}","import engine from \"../Engine\";\n\nexport default class Sprite {\n    constructor(imageName, textureName, x, y, w, h) {\n        this.imageName = imageName;\n        this.textureName = textureName;\n        this.texture = engine.textureManager.getTexture(textureName);\n        this.x = x;\n        this.y = y;\n        this.w = w || 64;\n        this.h = h || 64;\n    }\n\n    loadTexture() {\n        if (this.texture === null) {\n            this.texture = engine.textureManager.getTexture(this.textureName);\n        }\n\n        return this.texture !== null;\n    }\n\n    drawImage(context, i, j, degrees) {\n        if (degrees !== null && degrees > 0) {\n            context.save();\n            context.translate((i+this.w/2) * engine.scale, (j+this.h/2) * engine.scale);\n            context.rotate(degrees * Math.PI / 180);\n\n            context.drawImage(this.texture, this.x, this.y, this.w, this.h, (-this.w/2) * engine.scale, (-this.h/2) * engine.scale, this.w * engine.scale, this.h * engine.scale);\n\n            context.restore();\n        } else {\n            context.drawImage(this.texture, this.x, this.y, this.w, this.h, i * engine.scale, j * engine.scale, this.w * engine.scale, this.h * engine.scale);\n        }\n    }\n}","import Sprite from \"./Sprite\";\n\nexport default class SpriteManager {\n    constructor() {\n        this.sprites = [];\n        this.spritesPreloaded = false;\n    }\n\n    addImage(imageName, textureName, x, y, w, h) {\n        this.sprites.push(new Sprite(imageName, textureName, x, y, w, h));\n    }\n\n    getImage(imgName) {\n        const length = this.sprites.length;\n        for (let i = 0; i < length; i++) {\n            if (this.sprites[i].imageName === imgName) {\n                return this.sprites[i];\n            }\n        }\n        return null;\n    }\n\n    preloadSprites() {\n        if (!this.spritesPreloaded) {\n            const numSprites = this.sprites.length;\n            let numLoaded = 0;\n\n            this.sprites.forEach(function(sprite) {\n                if (sprite.loadTexture()) {\n                    numLoaded ++;\n                }\n            });\n\n            if (numLoaded === numSprites) {\n                this.spritesPreloaded = true;\n            }\n        }\n\n        return this.spritesPreloaded;\n    }\n}","export default class ArrayUtil {\n    constructor() {\n\n    }\n\n    static create2dArray(numRows) {\n        const array = [];\n\n        for (let i = 0; i < numRows; i++) {\n            array[i] = [];\n        }\n        return array;\n    }\n}","export default class _Component {\n    constructor(rawArgs = {}, baseType, type) {\n        this.rawArgs = rawArgs;\n        this.args = [];\n        this.baseType = baseType || \"component\";\n        this.type = type || this.baseType;\n        this.parentEntity = rawArgs.parentEntity;\n\n        this.cachedSave = null;\n    }\n\n    clearSaveCache() {\n        this.cachedSave = null;\n        this.parentEntity?.clearSaveCache();\n    }\n\n    save() {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {};\n        saveJson[this.type] = {};\n\n        for (const arg of this.args) {\n            arg.save(saveJson, this.type);\n        }\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    hasComponent() {\n        return this.rawArgs.components && this.rawArgs.components[this.type] !== undefined;\n    }\n\n    getComponent() {\n        return this.rawArgs.components[this.type];\n    }\n\n    addArg(arg) {\n        arg.setParentComponent(this);\n        this.args.push(arg);\n\n        if (this.hasComponent()) {\n            arg.load(this.getComponent());\n        }\n\n        return arg;\n    }\n}","export default class Arg {\n    #parentComponent;\n    _name;\n    _defaultValue;\n    _value;\n\n    constructor(name, defaultValue) {\n        this._name = name;\n        this._defaultValue = defaultValue;\n    }\n\n    setParentComponent(component) {\n        this.#parentComponent = component;\n    }\n\n    getParentComponent() {\n        return this.#parentComponent;\n    }\n\n    save(saveJson, type) {\n        if (this._value !== this._defaultValue) {\n            saveJson[type][this._name] = this._value;\n        }\n\n        return saveJson;\n    }\n\n    load(argJson) {\n        this._value = argJson[this._name] ?? this._defaultValue;\n    }\n\n    get() {\n        return this._value;\n    }\n\n    set(value) {\n        this._value = value;\n        this.#parentComponent.clearSaveCache();\n    }\n}","import _Component from \"./_Component\";\nimport Arg from \"./_arg/Arg\";\n\nexport default class Fov extends _Component {\n    constructor(args) {\n        super(args, \"fov\");\n\n        this.explored = this.addArg(new Arg(\"explored\", false));\n        this.visible = this.addArg(new Arg(\"visible\", false));\n    }\n\n    isExplored() {\n        return this.explored.get();\n    }\n\n    setExplored(explored) {\n        this.explored.set(explored);\n    }\n\n    isVisible() {\n        return this.visible.get();\n    }\n\n    setVisible(visible) {\n        this.visible.set(visible);\n    }\n}","import Fov from \"../../components/Fov\";\n\nexport default class BaseFov {\n    constructor() {\n        this.previousVisibleTiles = [];\n        this.visibleTiles = [];\n        this.visibleActors = [];\n        this.visibleItems = [];\n        this.left = 0;\n        this.right = 0;\n        this.top = 0;\n        this.bottom = 0;\n    }\n\n    teardown() {\n        this.previousVisibleTiles = [];\n        this.visibleTiles = [];\n        this.visibleActors = [];\n        this.visibleItems = [];\n    }\n\n    compute(gameMap, x, y, radius) {\n        this.previousVisibleTiles = this.visibleTiles;\n        this.visibleTiles = [];\n        this.visibleActors = [];\n        this.visibleItems = [];\n\n        this.left = Math.max(0, x - radius);\n        this.right = Math.min(gameMap.width, x + radius + 1);\n        this.top = Math.max(0, y - radius);\n        this.bottom = Math.min(gameMap.height, y + radius + 1);\n    }\n\n    addVisibleTile(tile) {\n        if (this.visibleTiles.indexOf(tile) === -1) {\n            this.visibleTiles.push(tile);\n        }\n    }\n\n    addVisibleActor(object) {\n        if (this.visibleActors.indexOf(object) === -1) {\n            this.visibleActors.push(object);\n        }\n    }\n\n    addVisibleItem(object) {\n        if (this.visibleItems.indexOf(object) === -1) {\n            this.visibleItems.push(object);\n        }\n    }\n    //\n    // remove(object) {\n    //     const newIndex = this.newObjects.indexOf(object);\n    //     if (newIndex > -1) {\n    //         this.newObjects.splice(newIndex, 1);\n    //     }\n    //\n    //     const oldIndex = this.oldObjects.indexOf(object);\n    //     if (oldIndex > -1) {\n    //         this.oldObjects.splice(oldIndex, 1);\n    //     }\n    //\n    //     this.removeVisible(object);\n    // }\n    //\n    // removeVisible(object) {\n    //     const visibleIndex = this.visibleObjects.indexOf(object);\n    //     if (visibleIndex > -1 ) {\n    //         this.visibleObjects.splice(visibleIndex, 1);\n    //     }\n    //\n    //     const visibleItemsIndex = this.visibleItems.indexOf(object);\n    //     if (visibleItemsIndex > -1) {\n    //         this.visibleItems.splice(visibleItemsIndex, 1);\n    //     }\n    //\n    //     const previousVisibleItemsIndex = this.previousVisibleObjects.indexOf(object);\n    //     if (previousVisibleItemsIndex > -1) {\n    //         this.previousVisibleObjects.splice(previousVisibleItemsIndex, 1);\n    //     }\n    // }\n\n    exploreTile(gameMap, x, y) {\n        const tileArrayX =  gameMap.tiles[x];\n        if (tileArrayX) {\n            const tile = tileArrayX[y];\n\n            if (tile) {\n                this.addVisibleTile(tile);\n            }\n        }\n\n        for (const actor of gameMap.actors) {\n            const position = actor.getComponent(\"position\");\n            if (position) {\n                if (position.isAt(x, y)) {\n                    this.addVisibleActor(actor);\n                }\n            }\n        }\n\n        for (const item of gameMap.items) {\n            const position = item.getComponent(\"position\");\n            if (position) {\n                if (position.isAt(x, y)) {\n                    this.addVisibleItem(item);\n                }\n            }\n        }\n    }\n\n    updateMap() {\n        for (const tile of this.previousVisibleTiles) {\n            tile.getComponent(\"fov\")?.setVisible(false);\n        }\n\n        for (const tile of this.visibleTiles) {\n            const fov = tile.getComponent(\"fov\");\n            if (fov) {\n                fov.setExplored(true);\n                fov.setVisible(true);\n            } else {\n                tile.setComponent(new Fov({components: {fov: {explored: true, visible: true}}}));\n            }\n        }\n    }\n}","export default class FovSlope {\n    constructor(y, x) {\n        this.y = y;\n        this.x = x;\n    }\n\n    greater(y, x) {\n        return this.y * x > this.x * y;\n    }\n\n    greaterOrEqual(y, x) {\n        return this.y * x >= this.x * y;\n    }\n    /*\n    less(y, x) {\n        return this.y * x < this.x * y;\n    }\n    */\n    lessOrEqual(y, x) {\n        return this.y * x <= this.x * y;\n    }\n}","import BaseFov from \"./_BaseFov\";\nimport FovSlope from \"./FovSlope\";\n\n/**\n * Credit to Adam Milazzo for this fov algorithm: http://www.adammil.net/blog/v125_roguelike_vision_algorithms.html\n */\nexport default class AdamMilazzoFov extends BaseFov {\n    constructor() {\n        super();\n    }\n\n    compute(gameMap, x, y, radius) {\n        super.compute(gameMap, x, y, radius);\n\n        this.exploreTile(gameMap, x, y);\n        for (let octant = 0; octant < 8; octant ++) {\n            this.computeOctant(gameMap, octant, x, y, radius, 1, new FovSlope(1, 1), new FovSlope(0, 1));\n        }\n    }\n\n    computeOctant(gameMap, octant, originX, originY, rangeLimit, x, top, bottom) {\n        for (; x <= rangeLimit; x++) {\n            let topY;\n            if (top.x === 1) {\n                topY = x;\n            } else {\n                topY = Math.round(((x * 2 - 1) * top.y + top.x) / (top.x * 2));\n\n                if (this.blocksLight(gameMap, octant, originX, originY, x, topY)) {\n                    if (top.greaterOrEqual(topY * 2 + 1, x * 2) && !this.blocksLight(gameMap, octant, originX, originY, x, topY + 1)) {\n                        topY ++;\n                    }\n                } else {\n                    let ax = x * 2;\n                    if (this.blocksLight(gameMap, octant, originX, originY, x + 1, topY + 1)) {\n                        ax ++;\n                    }\n\n                    if (top.greater(topY * 2 + 1, ax)) {\n                        topY ++;\n                    }\n                }\n            }\n\n            let bottomY;\n            if (bottom.y === 0) {\n                bottomY = 0;\n            } else {\n                bottomY = ((x * 2 - 1) * bottom.y + bottom.x) / (bottom.x * 2);\n\n                if (bottom.greaterOrEqual(bottomY * 2 + 1, x * 2) && this.blocksLight(gameMap, octant, originX, originY, x, bottomY) && !this.blocksLight(gameMap, octant, originX, originY, x, bottomY + 1)) {\n                    bottomY ++;\n                }\n            }\n\n            let wasOpaque = -1; // 0:false, 1:true, -1:not applicable\n            for (let y = topY; y >= bottomY; y--) {\n                const isOpaque = this.blocksLight(gameMap, octant, originX, originY, x, y);\n                const isVisible = isOpaque || ((y !== topY || top.greaterOrEqual(y, x)) && (y !== bottomY || bottom.lessOrEqual(y, x)));\n\n                if (isVisible) {\n                    this.setVisible(gameMap, octant, originX, originY, x, y);\n                }\n\n                if (x !== rangeLimit) {\n                    if (isOpaque) {\n                        if (wasOpaque === 0) {\n                            const nx = x * 2;\n                            const ny = y * 2 + 1;\n\n                            if (top.greater(ny, nx)) {\n                                if (y === bottomY) {\n                                    bottom = new FovSlope(ny, nx);\n                                    break;\n                                } else {\n                                    this.computeOctant(gameMap, octant, originX, originY, rangeLimit, x + 1, top, new FovSlope(ny, nx));\n                                }\n                            } else {\n                                if (y === bottomY) {\n                                    return;\n                                }\n                            }\n                        }\n\n                        wasOpaque = 1;\n                    } else {\n                        if (wasOpaque > 0) {\n                            const nx = x * 2;\n                            const ny = y * 2 + 1;\n\n                            if (bottom.greaterOrEqual(ny, nx)) {\n                                return;\n                            }\n\n                            top = new FovSlope(ny, nx);\n                        }\n\n                        wasOpaque = 0;\n                    }\n                }\n            }\n\n            if (wasOpaque !== 0) {\n                break;\n            }\n        }\n    }\n\n    blocksLight(gameMap, octant, originX, originY, x, y) {\n        switch(octant) {\n            case 0:\n                originX += x;\n                originY -= y;\n                break;\n            case 1:\n                originX += y;\n                originY -= x;\n                break;\n            case 2:\n                originX -= y;\n                originY -= x;\n                break;\n            case 3:\n                originX -= x;\n                originY -= y;\n                break;\n            case 4:\n                originX -= x;\n                originY += y;\n                break;\n            case 5:\n                originX -= y;\n                originY += x;\n                break;\n            case 6:\n                originX += y;\n                originY += x;\n                break;\n            case 7:\n                originX += x;\n                originY += y;\n                break;\n        }\n\n        let blocksLight = false;\n\n        const wallTiles = gameMap.tiles;\n        if (wallTiles[originX]) {\n            const wallTile = wallTiles[originX][originY];\n            if (wallTile) {\n                const blocksFov = wallTile.getComponent(\"blocksFov\");\n                if (blocksFov) {\n                    blocksLight = blocksFov.blocksFov.get();\n                }\n            }\n        }\n\n        return blocksLight;\n    }\n\n    setVisible(gameMap, octant, originX, originY, x, y) {\n        switch(octant) {\n            case 0:\n                originX += x;\n                originY -= y;\n                break;\n            case 1:\n                originX += y;\n                originY -= x;\n                break;\n            case 2:\n                originX -= y;\n                originY -= x;\n                break;\n            case 3:\n                originX -= x;\n                originY -= y;\n                break;\n            case 4:\n                originX -= x;\n                originY += y;\n                break;\n            case 5:\n                originX -= y;\n                originY += x;\n                break;\n            case 6:\n                originX += y;\n                originY += x;\n                break;\n            case 7:\n                originX += x;\n                originY += y;\n                break;\n        }\n\n        this.exploreTile(gameMap, originX, originY);\n    }\n}","/**\n * Adapted from http://youmightnotneedjquery.com/\n */\nexport default class Extend {\n    constructor() {}\n\n    static extend(out) {\n        out = out || {};\n\n        for (let i = 1; i < arguments.length; i++) {\n            if (!arguments[i]) {\n                continue;\n            }\n\n            for (const key in arguments[i]) {\n                if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n                    out[key] = arguments[i][key];\n                }\n            }\n        }\n\n        return out;\n    }\n\n    static deep(out) {\n        out = out || {};\n\n        for (let i = 1; i < arguments.length; i++) {\n            const obj = arguments[i];\n\n            if (!obj) {\n                continue;\n            }\n\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    if (typeof obj[key] === \"object\") {\n                        if (obj[key] instanceof Array) {\n                            out[key] = obj[key].slice(0);\n                        } else {\n                            out[key] = Extend.deep(out[key], obj[key]);\n                        }\n                    } else {\n                        if (typeof out === \"boolean\" && out[key] === undefined) {\n                            out = obj[key];\n                        } else {\n                            out[key] = obj[key];\n                        }\n                    }\n                }\n            }\n        }\n\n        return out;\n    }\n}","import _Component from \"../_Component\";\n\nexport default class _AI extends _Component {\n    constructor(args = {}, type) {\n        super(args, \"ai\", type);\n    }\n\n    save() {\n        return super.save();\n    }\n\n    perform(gameMap) { // eslint-disable-line no-unused-vars\n        console.error(\"Not Implemented\");\n    }\n}","import _AI from \"./_AI\";\nimport Arg from \"../_arg/Arg\";\n\nexport default class AIDead extends _AI {\n    constructor(args = {}) {\n        super(args, \"aiDead\");\n\n        this.previousAI = this.addArg(new Arg(\"previousAI\", \"\"));\n    }\n}","import html from \"../../html/ui/HeroInfo.html\";\nimport _UIElement from \"./_UIElement\";\n\nclass HeroInfo extends _UIElement {\n    constructor() {\n        super(html);\n\n        this.statusMessageDom = this.dom.getElementsByClassName(\"hero-status__message\")[0];\n        this.healthFgDom = this.dom.getElementsByClassName(\"hero-health__fg\")[0];\n        this.healthTextDom = this.dom.getElementsByClassName(\"hero-health__text\")[0];\n        this.powerDom = this.dom.getElementsByClassName(\"hero-power\")[0];\n        this.defenseDom = this.dom.getElementsByClassName(\"hero-defense\")[0];\n        this.inventoryDom = this.dom.getElementsByClassName(\"hero-inventory\")[0];\n    }\n\n    updateStatus(status) {\n        this.statusMessageDom.innerText = status;\n    }\n\n    updateHealth(current, max) {\n        const percent = current / max * 100;\n        this.healthFgDom.style.width = percent + \"%\";\n        this.healthTextDom.innerText = \"HP: \" + current + \" / \" + max;\n    }\n\n    updatePower(power) {\n        this.powerDom.innerText = power;\n    }\n\n    updateDefense(defense) {\n        this.defenseDom.innerText = defense;\n    }\n\n    updateInventory() {\n\n    }\n}\n\nconst heroInfo = new HeroInfo();\nexport default heroInfo;","import _Component from \"./_Component\";\nimport Arg from \"./_arg/Arg\";\n\nexport default class Position extends _Component {\n    constructor(args = {}) {\n        super(args, \"position\");\n\n        this.x = this.addArg(new Arg(\"x\", 0));\n        this.y = this.addArg(new Arg(\"y\", 0));\n    }\n\n    moveTo(newX, newY) {\n        this.x.set(newX);\n        this.y.set(newY);\n    }\n\n    move(xOffset, yOffset) {\n        this.x.set(this.x.get() + xOffset);\n        this.y.set(this.y.get() + yOffset);\n    }\n\n    distanceTo(position) {\n        const dx = Math.abs(position.x.get() - this.x.get());\n        const dy = Math.abs(position.y.get() - this.y.get());\n\n        return Math.max(dx, dy);\n    }\n\n    isAt(x, y) {\n        return this.x.get() === x && this.y.get() === y;\n    }\n\n    isEqual(position) {\n        return this.x.get() === position.x.get() && this.y.get() === position.y.get();\n    }\n}","export default class MathUtil {\n    constructor() {\n\n    }\n\n    static randomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    }\n\n    static randomNumber(min, max) {\n        return Math.random() * (max - min) + min;\n    }\n}","import _Action from \"../_Action\";\n\nexport default class ActionWithDirection extends _Action {\n    constructor(entity, dx = 0, dy = 0) {\n        super(entity);\n\n        this.dx = dx;\n        this.dy = dy;\n    }\n\n    perform(/*gameMap*/) {\n        console.error(\"Not Implemented\");\n    }\n}","import ActionWithDirection from \"./_ActionWithDirection\";\nimport UnableToPerformAction from \"../UnableToPerformAction\";\nimport engine from \"../../Engine\";\nimport messageManager from \"../../message/MessageManager\";\n\nexport default class MeleeAction extends ActionWithDirection {\n    constructor(entity, dx = 0, dy = 0) {\n        super(entity, dx, dy);\n    }\n\n    perform(gameMap) {\n        const position = this.entity.getComponent(\"position\");\n        if (!position) {\n            return new UnableToPerformAction(this.entity, \"Entity doesn't have a position.\");\n        }\n\n        const destX = position.x.get() + this.dx;\n        const destY = position.y.get() + this.dy;\n\n        const blockingActor = gameMap.getBlockingActorAtLocation(destX, destY);\n        if (blockingActor) {\n            const entityFighter = this.entity.getComponent(\"fighter\");\n            const blockingFighter = blockingActor.getComponent(\"fighter\");\n            if (entityFighter && blockingFighter) {\n                let name;\n                let plural;\n                if (engine.isPlayer(this.entity)) {\n                    name = \"You\";\n                    plural = \"\";\n                } else {\n                    name = this.entity.name;\n                    plural = \"s\";\n                }\n\n                let blockingName;\n                let attackColor;\n                if (blockingActor === engine.player) {\n                    blockingName = \"You\";\n                    attackColor = \"#C00\";\n                } else {\n                    blockingName = blockingActor.name;\n                    attackColor = \"#999\";\n                }\n\n                const description = name + \" attack\" + plural + \" \" + blockingName;\n\n                const damage = entityFighter.getDamage() - blockingFighter.getBlockedDamage();\n                if (damage > 0) {\n                    messageManager.text(description + \" for \" + damage + \" hit points.\", attackColor).build();\n                    blockingFighter.takeDamage(damage);\n                } else {\n                    messageManager.text(description + \", but does no damage.\", attackColor).build();\n                }\n\n                this.entity.callEvent(\"onMeleeAttack\", blockingActor);\n            }\n        } else {\n            return new UnableToPerformAction(this.entity, \"There's nothing to attack there!\");\n        }\n    }\n}","import ActionWithDirection from \"./_ActionWithDirection\";\nimport UnableToPerformAction from \"../UnableToPerformAction\";\n\nexport default class MovementAction extends ActionWithDirection {\n    constructor(entity, dx = 0, dy = 0) {\n        super(entity, dx, dy);\n    }\n\n    perform(gameMap) {\n        const position = this.entity.getComponent(\"position\");\n        if (!position) {\n            return new UnableToPerformAction(this.entity, \"Entity doesn't have a position.\");\n        }\n\n        const destX = position.x.get() + this.dx;\n        const destY = position.y.get() + this.dy;\n\n        if (!gameMap.isInBounds(destX, destY)) {\n            return new UnableToPerformAction(this.entity, \"Location is outside the map!\");\n        }\n\n        const tileAction = this.tryMoveTo(gameMap, destX, destY);\n        if (!(tileAction instanceof UnableToPerformAction)) {\n            position.move(this.dx, this.dy);\n        }\n\n        return tileAction;\n    }\n\n    tryMoveTo(gameMap, destX, destY) {\n        const blockingActor = gameMap.getBlockingActorAtLocation(destX, destY);\n        if (blockingActor) {\n            return new UnableToPerformAction(this.entity, \"There's something in the way!\");\n        }\n\n        const tile = gameMap.tiles[destX][destY];\n        if (tile) {\n            if (tile.getComponent(\"blocksMovement\")?.blocksMovement.get()) {\n                return new UnableToPerformAction(this.entity, \"There's a \" + tile.name + \" in the way!\");\n            }\n        }\n\n        return this;\n    }\n}","import _Action from \"./_Action\";\n\nexport default class WaitAction extends _Action {\n    constructor(entity) {\n        super(entity);\n    }\n\n    perform(/*gameMap*/) {\n        return this;\n    }\n}","import MovementAction from \"./actionWithDirection/MovementAction\";\nimport _Action from \"./_Action\";\nimport WaitAction from \"./WaitAction\";\nimport MathUtil from \"../util/MathUtil\";\n\nexport default class WanderAction extends _Action {\n    constructor(entity) {\n        super(entity);\n    }\n\n    perform(gameMap) {\n        const x = MathUtil.randomInt(-1, 1);\n        const y = MathUtil.randomInt(-1, 1);\n\n        if (x === 0 && y === 0) {\n            return new WaitAction(this.entity).perform(gameMap);\n        } else {\n            return new MovementAction(this.entity, x, y).perform(gameMap);\n        }\n    }\n}","export default class BinaryHeap {\n    constructor(scoreFunction) {\n        this.content = [];\n        this.scoreFunction = scoreFunction;\n    }\n\n    push(element) {\n        // Add the new element to the end of the array.\n        this.content.push(element);\n\n        // Allow it to sink down.\n        this.sinkDown(this.content.length - 1);\n    }\n\n    pop() {\n        // Store the first element so we can return it later.\n        const result = this.content[0];\n        // Get the element at the end of the array.\n        const end = this.content.pop();\n        // If there are any elements left, put the end element at the\n        // start, and let it bubble up.\n        if (this.content.length > 0) {\n            this.content[0] = end;\n            this.bubbleUp(0);\n        }\n        return result;\n    }\n\n    remove(node) {\n        const i = this.content.indexOf(node);\n\n        // When it is found, the process seen in 'pop' is repeated\n        // to fill up the hole.\n        const end = this.content.pop();\n\n        if (i !== this.content.length - 1) {\n            this.content[i] = end;\n\n            if (this.scoreFunction(end) < this.scoreFunction(node)) {\n                this.sinkDown(i);\n            } else {\n                this.bubbleUp(i);\n            }\n        }\n    }\n    size() {\n        return this.content.length;\n    }\n\n    rescoreElement(node) {\n        this.sinkDown(this.content.indexOf(node));\n    }\n\n    sinkDown(n) {\n        // Fetch the element that has to be sunk.\n        const element = this.content[n];\n\n        // When at 0, an element can not sink any further.\n        while (n > 0) {\n            // Compute the parent element's index, and fetch it.\n            const parentN = ((n + 1) >> 1) - 1;\n            const parent = this.content[parentN];\n            // Swap the elements if the parent is greater.\n            if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n                this.content[parentN] = element;\n                this.content[n] = parent;\n                // Update 'n' to continue at the new position.\n                n = parentN;\n            }\n            // Found a parent that is less, no need to sink any further.\n            else {\n                break;\n            }\n        }\n    }\n\n    bubbleUp(n) {\n        // Look up the target element and its score.\n        const length = this.content.length;\n        const element = this.content[n];\n        const elemScore = this.scoreFunction(element);\n\n        let isDone = false;\n        while (!isDone) {\n            // Compute the indices of the child elements.\n            const child2N = (n + 1) << 1;\n            const child1N = child2N - 1;\n            // This is used to store the new position of the element, if any.\n            let swap = null;\n            let child1Score;\n            // If the first child exists (is inside the array)...\n            if (child1N < length) {\n                // Look it up and compute its score.\n                const child1 = this.content[child1N];\n                child1Score = this.scoreFunction(child1);\n\n                // If the score is less than our element's, we need to swap.\n                if (child1Score < elemScore) {\n                    swap = child1N;\n                }\n            }\n\n            // Do the same checks for the other child.\n            if (child2N < length) {\n                const child2 = this.content[child2N];\n                const child2Score = this.scoreFunction(child2);\n                if (child2Score < (swap === null ? elemScore : child1Score)) {\n                    swap = child2N;\n                }\n            }\n\n            // If the element needs to be moved, swap it, and continue.\n            if (swap !== null) {\n                this.content[n] = this.content[swap];\n                this.content[swap] = element;\n                n = swap;\n            } else { // Otherwise, we are done.\n                isDone = true;\n                break;\n            }\n        }\n    }\n}","// Modified from http://github.com/bgrins/javascript-astar\nimport BinaryHeap from \"./BinaryHeap\";\n\nexport default class AStar {\n    constructor() {}\n\n    static pathTo(node) {\n        let curr = node;\n        const path = [];\n        while (curr.parent) {\n            path.unshift(curr);\n            curr = curr.parent;\n        }\n        return path;\n    }\n\n    static getHeap() {\n        return new BinaryHeap(function(node) {\n            return node.f;\n        });\n    }\n\n    /**\n     * Perform an A* Search on a graph given a start and end node.\n     * @param {Graph} graph\n     * @param {GridNode} start\n     * @param {GridNode} end\n     * @param {Object} [options]\n     * @param {boolean} [options.closest] Specifies whether to return the\n     path to the closest node if the target is unreachable.\n     * @param {string} [options.heuristic] Heuristic function (see\n     *          astar.heuristics).\n     */\n    static search(graph, start, end, options) {\n        graph.cleanDirty();\n        options = options || {};\n        this.heuristicType = options.heuristic || \"manhattan\";\n        const closest = options.closest || false;\n\n        const openHeap = this.getHeap();\n        let closestNode = start; // set the start node to be the closest if required\n\n        if (this.heuristicType === \"manhattan\") {\n            start.h = this.heuristicManhattan(start, end);\n        } else if (this.heuristicType === \"diagonal\") {\n            this.heuristicDiagonal(start, end);\n        }\n        graph.markDirty(start);\n\n        openHeap.push(start);\n\n        while (openHeap.size() > 0) {\n            // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n            const currentNode = openHeap.pop();\n\n            // End case -- result has been found, return the traced path.\n            if (currentNode === end) {\n                return this.pathTo(currentNode);\n            }\n\n            // Normal case -- move currentNode from open to closed, process each of its neighbors.\n            currentNode.closed = true;\n\n            // Find all neighbors for the current node.\n            const neighbors = graph.neighbors(currentNode);\n\n            for (let i = 0, il = neighbors.length; i < il; ++i) {\n                const neighbor = neighbors[i];\n                if (neighbor.closed || neighbor.isWall()) {\n                    // Not a valid node to process, skip to next neighbor.\n                    continue;\n                }\n\n                // The g score is the shortest distance from start to current node.\n                // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n                const gScore = currentNode.g + neighbor.getCost(currentNode);\n                const beenVisited = neighbor.visited;\n\n                if (!beenVisited || gScore < neighbor.g) {\n                    // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n                    neighbor.visited = true;\n                    neighbor.parent = currentNode;\n\n                    if (this.heuristicType === \"manhattan\") {\n                        neighbor.h = neighbor.h || this.heuristicManhattan(neighbor, end);\n                    } else if (this.heuristicType === \"diagonal\") {\n                        neighbor.h = neighbor.h || this.heuristicDiagonal(neighbor, end);\n                    }\n                    neighbor.g = gScore;\n                    neighbor.f = neighbor.g + neighbor.h;\n                    graph.markDirty(neighbor);\n                    if (closest) {\n                        // If the neighbour is closer than the current closestNode or if it's equally close but has\n                        // a cheaper path than the current closest node then it becomes the closest node\n                        if (neighbor.h < closestNode.h || (neighbor.h === closestNode.h && neighbor.g < closestNode.g)) {\n                            closestNode = neighbor;\n                        }\n                    }\n\n                    if (!beenVisited) {\n                        // Pushing to heap will put it in proper place based on the 'f' value.\n                        openHeap.push(neighbor);\n                    } else {\n                        // Already seen the node, but since it has been rescored we need to reorder it in the heap\n                        openHeap.rescoreElement(neighbor);\n                    }\n                }\n            }\n        }\n\n        if (closest) {\n            return this.pathTo(closestNode);\n        }\n\n        // No result was found - empty array signifies failure to find path.\n        return [];\n    }\n    // See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html\n    static heuristicManhattan(pos0, pos1) {\n        const d1 = Math.abs(pos1.x - pos0.x);\n        const d2 = Math.abs(pos1.y - pos0.y);\n        return d1 + d2;\n    }\n\n    static heuristicDiagonal(pos0, pos1) {\n        const D = 1;\n        const D2 = Math.sqrt(2);\n        const d1 = Math.abs(pos1.x - pos0.x);\n        const d2 = Math.abs(pos1.y - pos0.y);\n        return (D * (d1 + d2)) + ((D2 - (2 * D)) * Math.min(d1, d2));\n    }\n\n    static cleanNode(node) {\n        node.f = 0;\n        node.g = 0;\n        node.h = 0;\n        node.visited = false;\n        node.closed = false;\n        node.parent = null;\n    }\n}","export default class GridNode {\n    constructor(x, y, weight) {\n        this.x = x;\n        this.y = y;\n        this.weight = weight;\n    }\n\n    toString() {\n        return \"[\" + this.x + \" \" + this.y + \"]\";\n    }\n\n    getCost(fromNeighbor) {\n        // Take diagonal weight into consideration.\n        if (fromNeighbor && fromNeighbor.x !== this.x && fromNeighbor.y !== this.y) {\n            return this.weight * 1.41421;\n        }\n        return this.weight;\n    }\n\n    isWall() {\n        return this.weight === 0;\n    }\n}","import AStar from \"./AStar\";\nimport GridNode from \"./GridNode\";\n\nexport default class Graph {\n    /**\n     * A graph memory structure\n     * @param {Array} gridIn 2D array of input weights\n     * @param {Object} [options]\n     * @param {bool} [options.diagonal] Specifies whether diagonal moves are allowed\n     */\n    constructor(gridIn, options) {\n        options = options || {};\n        this.nodes = [];\n        this.diagonal = !!options.diagonal;\n        this.grid = [];\n        for (let x = 0; x < gridIn.length; x++) {\n            this.grid[x] = [];\n\n            for (let y = 0, row = gridIn[x]; y < row.length; y++) {\n                const node = new GridNode(x, y, row[y]);\n                this.grid[x][y] = node;\n                this.nodes.push(node);\n            }\n        }\n        this.init();\n    }\n\n    init() {\n        this.dirtyNodes = [];\n        for (let i = 0; i < this.nodes.length; i++) {\n            AStar.cleanNode(this.nodes[i]);\n        }\n    }\n\n    cleanDirty() {\n        for (let i = 0; i < this.dirtyNodes.length; i++) {\n            AStar.cleanNode(this.dirtyNodes[i]);\n        }\n        this.dirtyNodes = [];\n    }\n\n    markDirty(node) {\n        this.dirtyNodes.push(node);\n    }\n\n    neighbors(node) {\n        const ret = [];\n        const x = node.x;\n        const y = node.y;\n        const grid = this.grid;\n\n        // West\n        if (grid[x - 1] && grid[x - 1][y]) {\n            ret.push(grid[x - 1][y]);\n        }\n\n        // East\n        if (grid[x + 1] && grid[x + 1][y]) {\n            ret.push(grid[x + 1][y]);\n        }\n\n        // South\n        if (grid[x] && grid[x][y - 1]) {\n            ret.push(grid[x][y - 1]);\n        }\n\n        // North\n        if (grid[x] && grid[x][y + 1]) {\n            ret.push(grid[x][y + 1]);\n        }\n\n        if (this.diagonal) {\n            // Southwest\n            if (grid[x - 1] && grid[x - 1][y - 1]) {\n                ret.push(grid[x - 1][y - 1]);\n            }\n\n            // Southeast\n            if (grid[x + 1] && grid[x + 1][y - 1]) {\n                ret.push(grid[x + 1][y - 1]);\n            }\n\n            // Northwest\n            if (grid[x - 1] && grid[x - 1][y + 1]) {\n                ret.push(grid[x - 1][y + 1]);\n            }\n\n            // Northeast\n            if (grid[x + 1] && grid[x + 1][y + 1]) {\n                ret.push(grid[x + 1][y + 1]);\n            }\n        }\n\n        return ret;\n    }\n\n    toString() {\n        const graphString = [];\n        const nodes = this.grid;\n        for (let x = 0; x < nodes.length; x++) {\n            const rowDebug = [];\n            const row = nodes[x];\n            for (let y = 0; y < row.length; y++) {\n                rowDebug.push(row[y].weight);\n            }\n            graphString.push(rowDebug.join(\" \"));\n        }\n        return graphString.join(\"\\n\");\n    }\n}\n","import _ActionWithDirection from \"./_ActionWithDirection\";\nimport UnableToPerformAction from \"../UnableToPerformAction\";\nimport entityLoader from \"../../entity/EntityLoader\";\n\nexport default class CleanAction extends _ActionWithDirection {\n    constructor(entity, dx = 0, dy = 0) {\n        super(entity, dx, dy);\n    }\n\n    perform(gameMap) {\n        const position = this.entity.getComponent(\"position\");\n        if (!position) {\n            return new UnableToPerformAction(this.entity, \"Entity doesn't have a position.\");\n        }\n\n        const destX = position.x.get() + this.dx;\n        const destY = position.y.get() + this.dy;\n\n        const cleanableActor = gameMap.getCleanableActorAtLocation(destX, destY);\n        if (cleanableActor) {\n            const cleanable = cleanableActor.getComponent(\"cleanable\");\n            if (cleanable) {\n                const decreasesTo = cleanable.decreasesTo.get();\n                if (decreasesTo) {\n                    const cleanablePosition = cleanableActor.getComponent(\"position\");\n\n                    const changedEntity = entityLoader.createFromTemplate(decreasesTo, {components: {position: {x: cleanablePosition.x.get(), y: cleanablePosition.y.get()}}});\n                    gameMap.addActor(changedEntity);\n                }\n\n                gameMap.removeActor(cleanableActor);\n            }\n        } else {\n            return new UnableToPerformAction(this.entity, \"There's nothing to clean there!\");\n        }\n    }\n}","import UnableToPerformAction from \"../UnableToPerformAction\";\nimport NoAction from \"../NoAction\";\nimport _ActionWithDirection from \"./_ActionWithDirection\";\n\nexport default class InteractAtAction extends _ActionWithDirection {\n    constructor(entity, dx = 0, dy = 0) {\n        super(entity, dx, dy);\n    }\n\n    perform(gameMap) {\n        const position = this.entity.getComponent(\"position\");\n        if (!position) {\n            return new UnableToPerformAction(this.entity, \"Entity doesn't have a position.\");\n        }\n\n        const destX = position.x.get() + this.dx;\n        const destY = position.y.get() + this.dy;\n\n        const tile = gameMap.tiles[destX][destY];\n        if (tile) {\n            const interactable = tile.getComponent(\"interactable\");\n            if (interactable) {\n                interactable.interact(this.entity);\n                return new NoAction(this.entity);\n            }\n        }\n\n        return new UnableToPerformAction(this.entity, \"There is nothing to interact with here.\");\n    }\n}","import ActionWithDirection from \"./_ActionWithDirection\";\nimport UnableToPerformAction from \"../UnableToPerformAction\";\nimport MovementAction from \"./MovementAction\";\nimport MeleeAction from \"./MeleeAction\";\nimport CleanAction from \"./CleanAction\";\nimport InteractAtAction from \"./InteractAtAction\";\n\nexport default class BumpAction extends ActionWithDirection {\n    constructor(entity, dx = 0, dy = 0) {\n        super(entity, dx, dy);\n    }\n\n    perform(gameMap) {\n        const position = this.entity.getComponent(\"position\");\n        if (!position) {\n            return new UnableToPerformAction(this.entity, \"Entity doesn't have a position.\");\n        }\n\n        const destX = position.x.get() + this.dx;\n        const destY = position.y.get() + this.dy;\n\n        const blockingActor = gameMap.getBlockingActorAtLocation(destX, destY);\n        if (blockingActor) {\n            return new MeleeAction(this.entity, this.dx, this.dy).perform(gameMap);\n        }\n\n        const cleanableActor = gameMap.getCleanableActorAtLocation(destX, destY);\n        if (cleanableActor) {\n            return new CleanAction(this.entity, this.dx, this.dy).perform(gameMap);\n        }\n\n        const tileX = gameMap.tiles[destX];\n        if (tileX) {\n            const tileXY = tileX[destY];\n            if (tileXY) {\n                const interactable = tileXY.getComponent(\"interactable\");\n                if (interactable) {\n                    if (interactable.type !== \"stairsInteractable\" && interactable.type !== \"trapDoorInteractable\") {\n                        return new InteractAtAction(this.entity, this.dx, this.dy).perform(gameMap);\n                    }\n                }\n            }\n            return new MovementAction(this.entity, this.dx, this.dy).perform(gameMap);\n        } else {\n            return new UnableToPerformAction(this.entity, \"Nowhere to move.\");\n        }\n    }\n}","import _Action from \"./_Action\";\nimport UnableToPerformAction from \"./UnableToPerformAction\";\nimport NoAction from \"./NoAction\";\n\nexport default class InteractAction extends _Action {\n    constructor(entity) {\n        super(entity);\n    }\n\n    perform(gameMap) {\n        const position = this.entity.getComponent(\"position\");\n        if (!position) {\n            return new UnableToPerformAction(this.entity, \"Entity doesn't have a position.\");\n        }\n\n        const tile = gameMap.tiles[position.x.get()][position.y.get()];\n        if (tile) {\n            const interactable = tile.getComponent(\"interactable\");\n            if (interactable) {\n                interactable.interact(this.entity);\n                return new NoAction(this.entity);\n            }\n        }\n\n        return new UnableToPerformAction(this.entity, \"There is nothing to interact with here.\");\n    }\n}","import _AI from \"./_AI\";\nimport HeroInfo from \"../../ui/HeroInfo\";\nimport Position from \"../Position\";\nimport AdamMilazzoFov from \"../../map/fov/AdamMilazzoFov\";\nimport MathUtil from \"../../util/MathUtil\";\nimport MeleeAction from \"../../actions/actionWithDirection/MeleeAction\";\nimport WanderAction from \"../../actions/WanderAction\";\nimport Graph from \"../../pathfinding/Graph\";\nimport AStar from \"../../pathfinding/AStar\";\nimport BumpAction from \"../../actions/actionWithDirection/BumpAction\";\nimport WaitAction from \"../../actions/WaitAction\";\nimport InteractAction from \"../../actions/InteractAction\";\nimport Arg from \"../_arg/Arg\";\n\nexport default class AIHero extends _AI {\n    constructor(args = {}) {\n        super(args, \"aiHero\");\n\n        this.fov = new AdamMilazzoFov();\n        this.chaseLocation = null;\n        this.radius = this.addArg(new Arg(\"radius\", 10));\n        this.movementActions = this.addArg(new Arg(\"movementActions\", 1));\n        this.currentMovement = this.addArg(new Arg(\"currentMovement\", 0));\n\n        this.turnsToEnterDungeon = this.addArg(new Arg(\"turnsToEnterDungeon\", 30));\n        this.status = this.addArg(new Arg(\"status\", \"Hero will arrive in \" + this.turnsToEnterDungeon.get() + \" turns.\"));\n\n        this.updateUIStatus();\n    }\n\n    decreaseTurnsToEnterDungeon() {\n        this.turnsToEnterDungeon.set(this.turnsToEnterDungeon.get() - 1);\n    }\n\n    setStatus(newStatus) {\n        this.status.set(newStatus);\n\n        this.updateUIStatus();\n    }\n\n    updateUIStatus() {\n        HeroInfo.updateStatus(this.status.get());\n    }\n\n    perform(gameMap) {\n        const entity = this.parentEntity;\n\n        if (this.turnsToEnterDungeon.get() > 0) {\n            this.decreaseTurnsToEnterDungeon();\n            this.setStatus(\"Hero will arrive in \" + this.turnsToEnterDungeon.get() + \" turns.\");\n        } else if (this.turnsToEnterDungeon.get() === 0) {\n            entity.setComponent(new Position({components: {position: {x: 5, y: 0}}}));\n            this.decreaseTurnsToEnterDungeon();\n\n            this.setStatus(\"Hero has entered the dungeon!\");\n        } else {\n            // TODO: Loot, Escape Room\n\n            const entityPosition = entity.getComponent(\"position\");\n            if (entityPosition) {\n                this.fov.compute(gameMap, entityPosition.x.get(), entityPosition.y.get(), this.radius.get());\n\n                const closestEnemy = this.getClosestEnemy();\n                if (closestEnemy) {\n                    const closestEnemyPosition = closestEnemy.getComponent(\"position\");\n                    this.chaseLocation = {\n                        x: closestEnemyPosition.x.get(),\n                        y: closestEnemyPosition.y.get()\n                    };\n\n                    const distance = entityPosition.distanceTo(closestEnemyPosition);\n                    if (distance <= 1) {\n                        this.setStatus(\"Hero is fighting \" + closestEnemy.name + \"!\");\n                        return new MeleeAction(entity, closestEnemyPosition.x.get() - entityPosition.x.get(), closestEnemyPosition.y.get() - entityPosition.y.get()).perform(gameMap);\n                    } else {\n                        this.setStatus(\"Hero is moving to attack \" + closestEnemy.name + \".\");\n                    }\n                } else {\n                    const closestStairs = this.getClosestStairs();\n                    if (closestStairs) {\n                        const closestStairsPosition = closestStairs.getComponent(\"position\");\n                        this.chaseLocation = {\n                            x: closestStairsPosition.x.get(),\n                            y: closestStairsPosition.y.get()\n                        };\n\n                        const distance = entityPosition.distanceTo(closestStairsPosition);\n                        if (distance <= 0) {\n                            this.setStatus(\"Hero is climbing down the stairs!\");\n                            return new InteractAction(entity).perform(gameMap);\n                        } else {\n                            this.setStatus(\"Hero is moving towards the stairs!\");\n                        }\n                    }\n\n                    if (this.chaseLocation !== null && entityPosition.isAt(this.chaseLocation.x, this.chaseLocation.y)) {\n                        this.chaseLocation = null;\n                    }\n\n                    if (this.chaseLocation === null) {\n                        this.setStatus(\"Hero is wandering aimlessly.\");\n                        return new WanderAction(entity).perform(gameMap);\n                    }\n                }\n\n                return this.moveTowards(gameMap);\n            }\n        }\n    }\n\n    getClosestEnemy() {\n        const entity = this.parentEntity;\n        const entityPosition = entity.getComponent(\"position\");\n\n        let closestEnemies = [];\n        let closestDistance = null;\n        const entityFaction = entity.getComponent(\"faction\");\n        if (entityFaction) {\n            for (const actor of this.fov.visibleActors) {\n                if (actor.isAlive()) {\n                    const actorFaction = actor.getComponent(\"faction\");\n                    if (entityFaction.isEnemyOf(actorFaction)) {\n                        const actorPosition = actor.getComponent(\"position\");\n                        if (actorPosition) {\n                            const distance = entityPosition.distanceTo(actorPosition);\n\n                            if (closestDistance === null || distance < closestDistance) {\n                                closestEnemies = [];\n                                closestEnemies.push(actor);\n                                closestDistance = distance;\n                            } else if (distance === closestDistance) {\n                                closestEnemies.push(actor);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (closestEnemies.length === 1) {\n            return closestEnemies[0];\n        } else if (closestEnemies.length > 1) {\n            const index = MathUtil.randomInt(0, closestEnemies.length - 1);\n            return closestEnemies[index];\n        }\n\n        return null;\n    }\n\n    getClosestStairs() {\n        const entity = this.parentEntity;\n        const entityPosition = entity.getComponent(\"position\");\n\n        let closestStairs = [];\n        let closestDistance = null;\n        for (const tile of this.fov.visibleTiles) {\n            const interactable = tile.getComponent(\"interactable\");\n            if (interactable && interactable.type === \"stairsInteractable\") {\n                const tilePosition = tile.getComponent(\"position\");\n                if (tilePosition) {\n                    const distance = entityPosition.distanceTo(tilePosition);\n\n                    if (closestDistance === null || distance < closestDistance) {\n                        closestStairs = [];\n                        closestStairs.push(tile);\n                        closestDistance = distance;\n                    } else if (distance === closestDistance) {\n                        closestStairs.push(tile);\n                    }\n                }\n            }\n        }\n\n        if (closestStairs.length === 1) {\n            return closestStairs[0];\n        } else if (closestStairs.length > 1) {\n            const index = MathUtil.randomInt(0, closestStairs.length - 1);\n            return closestStairs[index];\n        }\n\n        return null;\n    }\n\n    moveTowards(gameMap) {\n        const entity = this.parentEntity;\n        const entityPosition = entity.getComponent(\"position\");\n\n        this.currentMovement.set(this.movementActions.get());\n        if (this.currentMovement.get() >= 1) {\n            // Move towards enemy\n            const fovWidth = this.fov.right - this.fov.left;\n            const fovHeight = this.fov.bottom - this.fov.top;\n            const cost = Array(fovWidth).fill().map(() => Array(fovHeight).fill(0));\n\n            for (let i = this.fov.left; i < this.fov.right; i++) {\n                for (let j = this.fov.top; j < this.fov.bottom; j++) {\n                    const tile = gameMap.tiles[i][j];\n                    if (tile) {\n                        if (tile.getComponent(\"blocksMovement\")?.blocksMovement.get()) {\n                            continue;\n                        }\n\n                        cost[i - this.fov.left][j - this.fov.top] += 10;\n                    }\n                }\n            }\n\n            for (const actor of this.fov.visibleActors) {\n                if (actor.isAlive()) {\n                    const actorPosition = actor.getComponent(\"position\");\n                    if (actorPosition) {\n                        cost[actorPosition.x.get() - this.fov.left][actorPosition.y.get() - this.fov.top] += 100;\n                    }\n                }\n            }\n\n            const costGraph = new Graph(cost, {diagonal: true});\n\n            const start = costGraph.grid[entityPosition.x.get() - this.fov.left][entityPosition.y.get() - this.fov.top];\n            const end = costGraph.grid[this.chaseLocation.x - this.fov.left][this.chaseLocation.y - this.fov.top];\n            const path = AStar.search(costGraph, start, end);\n            let lastAction;\n            while (this.currentMovement.get() >= 1) {\n                if (path && path.length > 0) {\n                    const next = path.shift();\n                    if (next) {\n                        lastAction = new BumpAction(entity, next.x + this.fov.left - entityPosition.x.get(), next.y + this.fov.top - entityPosition.y.get()).perform(gameMap);\n                    }\n                } else {\n                    lastAction = new WaitAction(entity).perform(gameMap);\n                }\n\n                this.currentMovement.set(this.currentMovement.get() - 1);\n            }\n\n            return lastAction;\n        }\n    }\n}","import AI from \"./_AI\";\nimport AdamMilazzoFov from \"../../map/fov/AdamMilazzoFov\";\nimport WanderAction from \"../../actions/WanderAction\";\nimport MeleeAction from \"../../actions/actionWithDirection/MeleeAction\";\nimport AStar from \"../../pathfinding/AStar\";\nimport Graph from \"../../pathfinding/Graph\";\nimport WaitAction from \"../../actions/WaitAction\";\nimport BumpAction from \"../../actions/actionWithDirection/BumpAction\";\nimport MathUtil from \"../../util/MathUtil\";\nimport Arg from \"../_arg/Arg\";\n\nexport default class AIMeleeChase extends AI {\n    constructor(args = {}) {\n        super(args, \"aiMeleeChase\");\n\n        this.fov = new AdamMilazzoFov();\n        this.chaseLocation = null;\n        this.radius = this.addArg(new Arg(\"radius\", 5));\n        this.movementActions = this.addArg(new Arg(\"movementActions\", 1));\n        this.currentMovement = this.addArg(new Arg(\"currentMovement\", 0));\n    }\n\n    perform(gameMap) {\n        const entity = this.parentEntity;\n        const entityPosition = entity.getComponent(\"position\");\n        if (entityPosition) {\n            this.fov.compute(gameMap, entityPosition.x.get(), entityPosition.y.get(), this.radius.get());\n\n            let closestEnemies = [];\n            let closestDistance = null;\n            const entityFaction = entity.getComponent(\"faction\");\n            if (entityFaction) {\n                for (const actor of this.fov.visibleActors) {\n                    if (actor.isAlive()) {\n                        const actorFaction = actor.getComponent(\"faction\");\n                        if (entityFaction.isEnemyOf(actorFaction)) {\n                            const actorPosition = actor.getComponent(\"position\");\n\n                            if (actorPosition) {\n                                const distance = actorPosition.distanceTo(entityPosition);\n                                if (closestDistance === null || distance < closestDistance) {\n                                    closestEnemies = [];\n                                    closestEnemies.push(actor);\n                                    closestDistance = distance;\n                                } else if (distance === closestDistance) {\n                                    closestEnemies.push(actor);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            let closestEnemy;\n            if (closestEnemies.length === 1) {\n                closestEnemy = closestEnemies[0];\n            } else if (closestEnemies.length > 1) {\n                const index = MathUtil.randomInt(0, closestEnemies.length - 1);\n                closestEnemy = closestEnemies[index];\n            }\n\n            if (closestEnemy) {\n                const closestEnemyPosition = closestEnemy.getComponent(\"position\");\n                this.chaseLocation = {\n                    x: closestEnemyPosition.x.get(),\n                    y: closestEnemyPosition.y.get()\n                };\n\n                if (closestDistance <= 1) {\n                    return new MeleeAction(entity, closestEnemyPosition.x.get() - entityPosition.x.get(), closestEnemyPosition.y.get() - entityPosition.y.get()).perform(gameMap);\n                }\n            } else {\n                if (this.chaseLocation !== null && entityPosition.isAt(this.chaseLocation.x, this.chaseLocation.y)) {\n                    this.chaseLocation = null;\n                }\n\n                if (this.chaseLocation === null) {\n                    return new WanderAction(entity).perform(gameMap);\n                }\n            }\n\n            this.currentMovement.set(this.currentMovement.get() + this.movementActions.get());\n\n            if (this.currentMovement.get() >= 1) {\n                // Move towards enemy\n                const fovWidth = this.fov.right - this.fov.left;\n                const fovHeight = this.fov.bottom - this.fov.top;\n                const cost = Array(fovWidth).fill().map(() => Array(fovHeight).fill(0));\n\n                for (let i = this.fov.left; i < this.fov.right; i++) {\n                    for (let j = this.fov.top; j < this.fov.bottom; j++) {\n                        const tile = gameMap.tiles[i][j];\n                        if (tile) {\n                            if (tile.getComponent(\"blocksMovement\")?.blocksMovement.get()) {\n                                continue;\n                            }\n\n                            cost[i - this.fov.left][j - this.fov.top] += 10;\n                        }\n                    }\n                }\n\n                for (const actor of this.fov.visibleActors) {\n                    if (actor.isAlive()) {\n                        const actorPosition = actor.getComponent(\"position\");\n                        if (actorPosition) {\n                            cost[actorPosition.x.get() - this.fov.left][actorPosition.y.get() - this.fov.top] += 100;\n                        }\n                    }\n                }\n\n                const costGraph = new Graph(cost, {diagonal: true});\n\n                const start = costGraph.grid[entityPosition.x.get() - this.fov.left][entityPosition.y.get() - this.fov.top];\n                const end = costGraph.grid[this.chaseLocation.x - this.fov.left][this.chaseLocation.y - this.fov.top];\n                const path = AStar.search(costGraph, start, end);\n                let lastAction;\n                while (this.currentMovement.get() >= 1) {\n                    if (path && path.length > 0) {\n                        const next = path.shift();\n                        if (next) {\n                            lastAction = new BumpAction(entity, next.x + this.fov.left - entityPosition.x, next.y + this.fov.top - entityPosition.y).perform(gameMap);\n                        }\n                    } else {\n                        lastAction = new WaitAction(entity).perform(gameMap);\n                    }\n\n                    this.currentMovement.set(this.currentMovement.get() - 1);\n                }\n\n                return lastAction;\n            }\n        }\n    }\n}","import _Component from \"../_Component\";\n\nexport default class _Interactable extends _Component {\n    constructor(args = {}, type) {\n        super(args, \"interactable\", type);\n    }\n\n    save() {\n        return super.save();\n    }\n\n    interact(entityInteracted) { // eslint-disable-line no-unused-vars\n\n    }\n}","export default class _EventHandler {\n    constructor() {\n        this.mouse = {\n            x: -1,\n            y: -1\n        };\n        this.mouseDown = false;\n\n        window.addEventListener(\"mousemove\", this);\n        window.addEventListener(\"mousedown\", this);\n        window.addEventListener(\"mouseup\", this);\n        window.addEventListener(\"click\", this);\n        window.addEventListener(\"contextmenu\", this);\n        window.addEventListener(\"change\", this);\n        window.addEventListener(\"keydown\", this);\n\n        this.isPlayerTurn = true;\n        this.targetedTile = null;\n        this.pathTiles = [];\n    }\n\n    teardown() {\n        window.removeEventListener(\"mousemove\", this);\n        window.removeEventListener(\"mousedown\", this);\n        window.removeEventListener(\"mouseup\", this);\n        window.removeEventListener(\"click\", this);\n        window.removeEventListener(\"contextmenu\", this);\n        window.removeEventListener(\"change\", this);\n        window.removeEventListener(\"keydown\", this);\n    }\n\n    handleEvent(e) {\n        switch(e.type) {\n            case \"mousemove\":\n                this.onMouseMove(e);\n                break;\n            case \"mousedown\":\n                this.onMouseDown(e);\n                break;\n            case \"mouseup\":\n                this.onMouseUp(e);\n                break;\n            case \"click\":\n                this.onLeftClick(e);\n                break;\n            case \"contextmenu\":\n                this.onRightClick(e);\n                break;\n            case \"change\":\n                this.onChange(e);\n                break;\n            case \"keydown\":\n                this.onKeydown(e);\n                break;\n        }\n    }\n\n    handleInput() {}\n\n    onMouseMove(/*e*/) {}\n\n    onMouseDown(/*e*/) {\n        this.mouseDown = true;\n    }\n\n    onMouseUp(/*e*/) {\n        this.mouseDown = false;\n    }\n\n    onLeftClick(/*e*/) {}\n\n    onRightClick(/*e*/) {}\n\n    onChange(/*e*/) {}\n\n    onKeydown(/*e*/) {}\n\n}","const Key = {\n    LEFT: \"ArrowLeft\",\n    RIGHT: \"ArrowRight\",\n    UP: \"ArrowUp\",\n    DOWN: \"ArrowDown\",\n    BACKSPACE: \"Backspace\",\n    TAB: \"Tab\",\n    ENTER: \"Enter\",\n    SHIFT_LEFT: \"Left Shift\",\n    SHIFT_RIGHT: \"Right Shift\",\n    CONTROL_LEFT: \"Left Control\",\n    CONTROL_RIGHT: \"Right Control\",\n    ALT_LEFT: \"Left Alt\",\n    ALT_RIGHT: \"Right Alt\",\n    PAUSE_BREAK: \"Pause\",\n    CAPS_LOCK: \"CapsLock\",\n    ESCAPE: \"Escape\",\n    SPACE: \" \",\n    PAGE_UP: \"PageUp\",\n    PAGE_DOWN: \"PageDown\",\n    END: \"End\",\n    HOME: \"Home\",\n    INSERT: \"Insert\",\n    DELETE: \"Delete\",\n    OS_LEFT: \"Left OS\",\n    OS_RIGHT: \"Right OS\",\n    CONTEXT_MENU: \"ContextMenu\",\n    SCROLL_LOCK: \"ScrollLock\",\n    NUM_LOCK: \"NumLock\",\n    NUMPAD_DIVIDE: \"Numpad /\",\n    NUMPAD_MULTIPLY: \"Numpad *\",\n    NUMPAD_SUBTRACT: \"Numpad -\",\n    NUMPAD_ADD: \"Numpad +\",\n    NUMPAD_ENTER: \"Numpad Enter\",\n\n    NUMPAD_PERIOD: \"Numpad .\",\n    NUMPAD_0: \"Numpad 0\",\n    NUMPAD_1: \"Numpad 1\",\n    NUMPAD_2: \"Numpad 2\",\n    NUMPAD_3: \"Numpad 3\",\n    NUMPAD_4: \"Numpad 4\",\n    NUMPAD_5: \"Numpad 5\",\n    NUMPAD_6: \"Numpad 6\",\n    NUMPAD_7: \"Numpad 7\",\n    NUMPAD_8: \"Numpad 8\",\n    NUMPAD_9: \"Numpad 9\",\n\n    NUMPAD_DELETE: \"Numpad Delete\",\n    NUMPAD_INSERT: \"Numpad Insert\",\n    NUMPAD_END: \"Numpad End\",\n    NUMPAD_ARROW_DOWN: \"Numpad ArrowDown\",\n    NUMPAD_PAGE_DOWN: \"Numpad PageDown\",\n    NUMPAD_ARROW_LEFT: \"Numpad ArrowLeft\",\n    NUMPAD_CLEAR: \"Numpad Clear\",\n    NUMPAD_ARROW_RIGHT: \"Numpad ArrowRight\",\n    NUMPAD_HOME: \"Numpad Home\",\n    NUMPAD_ARROW_UP: \"Numpad ArrowUp\",\n    NUMPAD_PAGE_UP: \"Numpad PageUp\",\n};\n\nexport default Key;","import Key from \"./Key\";\n\nclass Controls {\n    constructor() {\n        const self = this;\n\n        self.defaultDelay = 25;\n        self.lastShiftUp = null;\n        self.treatShiftNumpadEqual = true;\n        self.keysDown = [];\n        self.keysDelayed = [];\n        self.defaults = new Map();\n\n        self.controls = new Map();\n        self.defaults.set(\"up\", [Key.NUMPAD_8, Key.UP]);\n        self.defaults.set(\"down\", [Key.NUMPAD_2, Key.DOWN]);\n        self.defaults.set(\"left\", [Key.NUMPAD_4, Key.LEFT]);\n        self.defaults.set(\"right\", [Key.NUMPAD_6, Key.RIGHT]);\n        self.defaults.set(\"nw\", [Key.NUMPAD_7]);\n        self.defaults.set(\"ne\", [Key.NUMPAD_9]);\n        self.defaults.set(\"sw\", [Key.NUMPAD_1]);\n        self.defaults.set(\"se\", [Key.NUMPAD_3]);\n        self.defaults.set(\"wait\", [Key.NUMPAD_5]);\n\n        self.defaults.set(\"escape\", [Key.ESCAPE]);\n        self.defaults.set(\"confirm\", [Key.ENTER, Key.NUMPAD_ENTER]);\n\n        self.load();\n\n        addEventListener(\"keydown\", function (e) {\n            // TODO: Evaluate if this should be generalized. I don't want to prevent all keys necessarily.\n            if (e.key === \"/\") {\n                e.preventDefault();\n            }\n\n            if (self.treatShiftNumpadEqual) {\n                const numLockOn = e.getModifierState(\"NumLock\");\n                // Re-add Shift key from Numpad press\n                if (numLockOn && !e.shiftKey && e.code.startsWith(\"Numpad\") && e.keyCode < 90) {\n                    if (self.lastShiftUp) {\n                        self.keysDown[self.lastShiftUp] = true;\n                        //console.log(\"Bonus Key Down: \", self.lastShiftUp);\n                    }\n                }\n            }\n\n            const key = self.getKey(e.key, e.code);\n            //console.log(\"Key Down: \", key);\n            self.keysDown[key] = true;\n        }, false);\n\n\n        addEventListener(\"keyup\", function (e) {\n            const key = self.getKey(e.key, e.code);\n            if (key === Key.SHIFT_LEFT || key === Key.SHIFT_RIGHT) {\n                self.lastShiftUp = key;\n            }\n\n            //console.log(\"Key Up: \", key);\n            delete self.keysDown[key];\n            delete self.keysDelayed[key];\n        }, false);\n    }\n\n    getKey(key, code) {\n        if (!code.startsWith(\"Arrow\")) {\n            if (code.endsWith(\"Left\")) {\n                key = \"Left \" + key;\n            } else if (code.endsWith(\"Right\")) {\n                key = \"Right \" + key;\n            } else if (code.startsWith(\"Numpad\")) {\n                key = \"Numpad \" + key;\n            }\n        }\n\n        if (this.treatShiftNumpadEqual) {\n            switch(key) {\n                case Key.NUMPAD_DELETE: key = Key.NUMPAD_PERIOD; break;\n                case Key.NUMPAD_INSERT: key = Key.NUMPAD_0; break;\n                case Key.NUMPAD_END: key = Key.NUMPAD_1; break;\n                case Key.NUMPAD_ARROW_DOWN: key = Key.NUMPAD_2; break;\n                case Key.NUMPAD_PAGE_DOWN: key = Key.NUMPAD_3; break;\n                case Key.NUMPAD_ARROW_LEFT: key = Key.NUMPAD_4; break;\n                case Key.NUMPAD_CLEAR: key = Key.NUMPAD_5; break;\n                case Key.NUMPAD_ARROW_RIGHT: key = Key.NUMPAD_6; break;\n                case Key.NUMPAD_HOME: key = Key.NUMPAD_7; break;\n                case Key.NUMPAD_ARROW_UP: key = Key.NUMPAD_8; break;\n                case Key.NUMPAD_PAGE_UP: key = Key.NUMPAD_9; break;\n            }\n        }\n\n        return key;\n    }\n\n    load() {\n        const controls = localStorage.getItem(\"controls\");\n        if (controls) {\n            this.controls = new Map(JSON.parse(controls));\n        } else {\n            this.resetToDefault();\n        }\n    }\n\n    save() {\n        localStorage.setItem(\"controls\", JSON.stringify(Array.from(this.controls.entries())));\n    }\n\n    setControls(controlsMap) {\n        this.controls = new Map();\n        for (const [key, value] of controlsMap.entries()) {\n            const keys = [];\n            for (const val of value) {\n                keys.push(val);\n            }\n            this.controls.set(key, keys);\n        }\n        this.save();\n    }\n\n    resetToDefault() {\n        this.setControls(this.defaults);\n    }\n\n    clone() {\n        const clone = new Map();\n        for (const [key, value] of this.controls.entries()) {\n            const keys = [];\n            for (const val of value) {\n                keys.push(val);\n            }\n            clone.set(key, keys);\n        }\n        return clone;\n    }\n\n    isPressed(key) {\n        const self = this;\n        let pressed = false;\n\n        let keys = self.controls.get(key);\n        if (!keys) {\n            const defaultKeys = self.defaults.get(key);\n            if (defaultKeys) {\n                self.controls.set(key, defaultKeys);\n                self.save();\n                keys = defaultKeys;\n            } else {\n                console.error(\"Missing keybindings for: \", key, keys);\n            }\n        }\n        keys.forEach(function(keyToTest) {\n            if (keyToTest in self.keysDown) {\n                pressed = true;\n            }\n        });\n\n        return pressed;\n    }\n\n    isDelayed(key) {\n        const self = this;\n        let delayed = false;\n\n        this.controls.get(key).forEach(function(keyToTest) {\n            if (keyToTest in self.keysDelayed) {\n                delayed = true;\n            }\n        });\n\n        return delayed;\n    }\n\n    deleteKey(key, delay) {\n        const self = this;\n        self.controls.get(key).forEach(function(keyToTest) {\n            delete self.keysDown[keyToTest];\n            if (delay) {\n                self.keysDelayed[keyToTest] = true;\n            }\n        });\n\n        if (delay) {\n            setTimeout(function() {\n                self.controls.get(key).forEach(function(keyToTest) {\n                    delete self.keysDelayed[keyToTest];\n                });\n            }, delay);\n        }\n    }\n\n    /**\n     *  Returns true if press succeeds\n     *          false if press does not succeed\n     */\n    testPressed(key, delay) {\n        delay = delay || this.defaultDelay;\n\n        const self = this;\n        let succeeded = false;\n\n        if (self.isPressed(key) && !self.isDelayed(key)) {\n            self.deleteKey(key, delay);\n            succeeded = true;\n        }\n\n        return succeeded;\n    }\n}\n\nconst controls = new Controls();\nexport default controls;","import _EventHandler from \"../_EventHandler\";\nimport engine from \"../../Engine\";\nimport controls from \"../../controls/Controls\";\n\nexport default class _AskUserEventHandler extends _EventHandler {\n    constructor(previousHandler) {\n        super();\n\n        this.previousHandler = previousHandler;\n    }\n\n    handleInput() {\n        if (controls.testPressed(\"escape\")) {\n            this.exit();\n        }\n\n        return null;\n    }\n\n    onLeftClick() {\n        this.exit();\n    }\n\n    exit() {\n        engine.eventHandler = this.previousHandler;\n    }\n}","import html from \"../../html/ui/TradeList.html\";\nimport _UIElement from \"./_UIElement\";\n\nclass TradeList extends _UIElement {\n    constructor() {\n        super(html);\n\n        this.titleDom = this.dom.getElementsByClassName(\"trade-list__title\")[0];\n        this.leftOptionsDom = this.dom.getElementsByClassName(\"trade-list__left-options\")[0];\n        this.rightOptionsDom = this.dom.getElementsByClassName(\"trade-list__right-options\")[0];\n    }\n\n    setTitle(title) {\n        this.titleDom.innerText = title;\n    }\n\n    setOptions(leftOptions, rightOptions) {\n        this.leftOptionsDom.innerHTML = \"\";\n        let index = 0;\n        for (const option of leftOptions) {\n            const li = document.createElement(\"li\");\n            li.classList.add(\"trade-list__option\");\n            li.dataset.index = index.toString();\n            if (index === 0) {\n                li.classList.add(\"active\");\n            }\n            if (option) {\n                li.innerText = option.name;\n            } else {\n                li.innerText = \"<empty>\";\n            }\n            this.leftOptionsDom.appendChild(li);\n            index ++;\n        }\n\n        this.rightOptionsDom.innerHTML = \"\";\n        index = 0;\n        for (const option of rightOptions) {\n            const li = document.createElement(\"li\");\n            li.classList.add(\"trade-list__option\");\n            li.dataset.index = index.toString();\n            if (option) {\n                li.innerText = option.name;\n            } else {\n                li.innerText = \"<empty>\";\n            }\n            this.rightOptionsDom.appendChild(li);\n            index ++;\n        }\n    }\n\n    moveActiveUp() {\n        let activeElement = this.leftOptionsDom.getElementsByClassName(\"active\")[0];\n        if (activeElement) {\n            const previousElement = activeElement.previousElementSibling;\n            if (previousElement) {\n                if (previousElement !== activeElement) {\n                    previousElement.classList.add(\"active\");\n                    activeElement.classList.remove(\"active\");\n                }\n            } else {\n                const lastElement = this.leftOptionsDom.lastElementChild;\n                if (lastElement !== activeElement) {\n                    lastElement.classList.add(\"active\");\n                    activeElement.classList.remove(\"active\");\n                }\n            }\n        } else {\n            activeElement = this.rightOptionsDom.getElementsByClassName(\"active\")[0];\n            if (activeElement) {\n                const previousElement = activeElement.previousElementSibling;\n                if (previousElement) {\n                    if (previousElement !== activeElement) {\n                        previousElement.classList.add(\"active\");\n                        activeElement.classList.remove(\"active\");\n                    }\n                } else {\n                    const lastElement = this.rightOptionsDom.lastElementChild;\n                    if (lastElement !== activeElement) {\n                        lastElement.classList.add(\"active\");\n                        activeElement.classList.remove(\"active\");\n                    }\n                }\n            }\n        }\n    }\n\n    moveActiveDown() {\n        let activeElement = this.leftOptionsDom.getElementsByClassName(\"active\")[0];\n        if (activeElement) {\n            const nextElement = activeElement.nextElementSibling;\n            if (nextElement) {\n                if (nextElement !== activeElement) {\n                    nextElement.classList.add(\"active\");\n                    activeElement.classList.remove(\"active\");\n                }\n            } else {\n                const firstElement = this.leftOptionsDom.firstElementChild;\n                if (firstElement !== activeElement) {\n                    firstElement.classList.add(\"active\");\n                    activeElement.classList.remove(\"active\");\n                }\n            }\n        } else {\n            activeElement = this.rightOptionsDom.getElementsByClassName(\"active\")[0];\n            if (activeElement) {\n                const nextElement = activeElement.nextElementSibling;\n                if (nextElement) {\n                    if (nextElement !== activeElement) {\n                        nextElement.classList.add(\"active\");\n                        activeElement.classList.remove(\"active\");\n                    }\n                } else {\n                    const firstElement = this.rightOptionsDom.firstElementChild;\n                    if (firstElement !== activeElement) {\n                        firstElement.classList.add(\"active\");\n                        activeElement.classList.remove(\"active\");\n                    }\n                }\n            }\n        }\n    }\n\n    moveActiveLeftRight() {\n        let activeElement = this.leftOptionsDom.getElementsByClassName(\"active\")[0];\n        if (activeElement) {\n            const firstElement = this.rightOptionsDom.firstElementChild;\n            firstElement.classList.add(\"active\");\n            activeElement.classList.remove(\"active\");\n        } else {\n            activeElement = this.rightOptionsDom.getElementsByClassName(\"active\")[0];\n            const firstElement = this.leftOptionsDom.firstElementChild;\n            firstElement.classList.add(\"active\");\n            activeElement.classList.remove(\"active\");\n        }\n    }\n\n    getLeftActiveIndex() {\n        let index = -1;\n        const activeElement = this.leftOptionsDom.getElementsByClassName(\"active\")[0];\n        if (activeElement) {\n            index = parseInt(activeElement.dataset.index);\n        }\n        return index;\n    }\n\n    getRightActiveIndex() {\n        let index = -1;\n        const activeElement = this.rightOptionsDom.getElementsByClassName(\"active\")[0];\n        if (activeElement) {\n            index = parseInt(activeElement.dataset.index);\n        }\n        return index;\n    }\n\n    open(x, y) {\n        this.dom.style.left = x + \"px\";\n        this.dom.style.top = y + \"px\";\n\n        super.open();\n    }\n}\n\nconst tradeList = new TradeList();\nexport default tradeList;","import _AskUserEventHandler from \"../_AskUserEventHandler\";\nimport tradeList from \"../../../ui/TradeList\";\nimport controls from \"../../../controls/Controls\";\n\nexport default class _TradeListEventHandler extends _AskUserEventHandler {\n    constructor(previousHandler, title) {\n        super(previousHandler);\n\n        this.title = title || \"<missing title>\";\n    }\n\n    render(x, y) {\n        tradeList.setTitle(this.title);\n        tradeList.open(x, y);\n    }\n\n    setOptions(leftItems, rightItems) {\n        tradeList.setOptions(leftItems, rightItems);\n    }\n\n    handleInput() {\n        super.handleInput();\n\n        if (controls.testPressed(\"up\")) {\n            tradeList.moveActiveUp();\n        } else if (controls.testPressed(\"down\")) {\n            tradeList.moveActiveDown();\n        } else if (controls.testPressed(\"left\") || controls.testPressed(\"right\")) {\n            tradeList.moveActiveLeftRight();\n        } else if (controls.testPressed(\"confirm\")) {\n            this.selectIndex(tradeList.getLeftActiveIndex(), tradeList.getRightActiveIndex());\n        }\n\n        return null;\n    }\n\n    selectIndex(/*leftActiveIndex, rightActiveIndex*/) {\n        // Do nothing for base _TradeListEventHandler\n    }\n\n    exit() {\n        tradeList.close();\n        super.exit();\n    }\n}","import _TradeListEventHandler from \"./_TradeListEventHandler\";\nimport tradeList from \"../../../ui/TradeList\";\n\nexport default class LootableEventHandler extends _TradeListEventHandler {\n    constructor(callback, previousHandler, title, entityInteracted, lootableInteractable) {\n        super(previousHandler, title);\n\n        this.callback = callback;\n        this.entityInteracted = entityInteracted;\n        this.lootableInteractable = lootableInteractable;\n\n        this.updateTradeOptions();\n    }\n\n    updateTradeOptions() {\n        const playerInventory = this.entityInteracted.getComponent(\"inventory\");\n        const playerInventoryWithEmpties = [];\n        const playerItems = playerInventory.items.get();\n        for (const item of playerItems) {\n            playerInventoryWithEmpties.push(item);\n        }\n        while (playerInventoryWithEmpties.length < playerInventory.capacity.get()) {\n            playerInventoryWithEmpties.push(null);\n        }\n\n        const lootableItemsWithEmpties = [];\n        const lootableItems = this.lootableInteractable.items.get();\n        for (const item of lootableItems) {\n            lootableItemsWithEmpties.push(item);\n        }\n        while(lootableItemsWithEmpties.length < this.lootableInteractable.capacity.get()) {\n            lootableItemsWithEmpties.push(null);\n        }\n\n        tradeList.setOptions(playerInventoryWithEmpties, lootableItemsWithEmpties);\n    }\n\n    selectIndex(leftActiveIndex, rightActiveIndex) {\n        const entityInventory = this.entityInteracted.getComponent(\"inventory\");\n\n        if (leftActiveIndex > -1) {\n            const itemToMove = entityInventory.getItem(leftActiveIndex);\n            if (this.lootableInteractable.addItem(itemToMove)) {\n                entityInventory.removeByIndex(leftActiveIndex);\n            }\n\n            this.updateTradeOptions();\n        } else if (rightActiveIndex > -1) {\n            const itemToMove = this.lootableInteractable.getItem(rightActiveIndex);\n            if (entityInventory.addItem(itemToMove)) {\n                this.lootableInteractable.removeByIndex(rightActiveIndex);\n            }\n\n            this.updateTradeOptions();\n        }\n    }\n}","import html from \"../../html/ui/Inventory.html\";\nimport _UIElement from \"./_UIElement\";\nimport engine from \"../Engine\";\n\nclass Inventory extends _UIElement {\n    constructor() {\n        super(html);\n\n        this.equipmentDom = this.dom.getElementsByClassName(\"inventory__equipment\")[0];\n        this.equipmentSlots = [];\n        for (let i = 0; i < 12; i++ ) {\n            const slot = document.createElement(\"div\");\n            slot.classList.add(\"slot\", \"inventory__equipment-slot\");\n            slot.setAttribute(\"data-index\", i);\n            this.equipmentSlots.push(slot);\n            this.equipmentDom.appendChild(slot);\n        }\n\n        this.storageWrapDom = this.dom.getElementsByClassName(\"inventory__storage-wrap\")[0];\n        this.goldCountDom = this.dom.getElementsByClassName(\"inventory__gold-count\")[0];\n\n        this.itemTooltipDom = document.createElement(\"div\");\n        this.itemTooltipDom.classList.add(\"item__tooltip\");\n\n        this.itemDragDom = document.createElement(\"div\");\n        this.itemDragDom.classList.add(\"item__drag\");\n\n        document.body.appendChild(this.itemTooltipDom);\n        document.body.appendChild(this.itemDragDom);\n\n        this.openStorages = [];\n        this.itemsOnGround = [];\n    }\n\n    populateInventory(entity) {\n        const equipment = entity.getComponent(\"equipment\");\n        if (equipment) {\n            this.storageWrapDom.innerHTML = \"\";\n            for (let i = 0; i < this.equipmentSlots.length; i++) {\n                const slot = this.equipmentSlots[i];\n\n                const equipmentSlot = equipment.items[i];\n                const item = equipmentSlot.item;\n                this.populateSlot(slot, item);\n            }\n\n            this.openStorages = [];\n\n            // Get storage\n            const equipmentStorageItem = equipment.items[9];\n            const storageItem = equipmentStorageItem.item;\n            if (storageItem) {\n                this.openEquipmentStorage(storageItem);\n            }\n\n            // Get belt\n            const equipmentBeltItem = equipment.items[7];\n            const beltItem = equipmentBeltItem.item;\n            if (beltItem) {\n                this.openEquipmentStorage(beltItem);\n            }\n\n            for (let i = 0; i < this.equipmentSlots.length; i++) {\n                if (i === 7 || i === 9) {\n                    continue;\n                }\n\n                const equipmentItem = equipment.items[i];\n                const item = equipmentItem.item;\n                if (item) {\n                    this.openEquipmentStorage(item);\n                }\n            }\n        }\n\n        this.openGroundItems();\n\n        const inventory = entity.getComponent(\"inventory\");\n        if (inventory) {\n            this.goldCountDom.innerText = inventory.gold;\n        }\n    }\n\n    openEquipmentStorage(item) {\n        this.openStorages.push(item);\n        const equippable = item.getComponent(\"equippable\");\n        if (equippable && equippable.maxStorage !== 0) {\n            let maxItems;\n            if (equippable.maxStorage === -1) {\n                maxItems = equippable.storage.length + 1;\n            } else {\n                maxItems = equippable.maxStorage;\n            }\n            const inventoryStorageDom = document.createElement(\"div\");\n            inventoryStorageDom.classList.add(\"inventory__storage\");\n            inventoryStorageDom.setAttribute(\"data-index\", this.openStorages.length - 1);\n            const inventoryStorageTitleDom = document.createElement(\"div\");\n            inventoryStorageTitleDom.classList.add(\"inventory__storage-title\");\n            inventoryStorageTitleDom.innerText = item.name;\n            inventoryStorageDom.appendChild(inventoryStorageTitleDom);\n            this.inventorySlots = [];\n            for (let i = 0; i < maxItems; i++) {\n                const slot = document.createElement(\"div\");\n                slot.classList.add(\"slot\", \"inventory__storage-slot\");\n                slot.setAttribute(\"data-index\", i);\n\n                this.populateSlot(slot, equippable.storage[i]);\n                this.inventorySlots.push(slot);\n                inventoryStorageDom.appendChild(slot);\n            }\n            this.storageWrapDom.appendChild(inventoryStorageDom);\n        }\n    }\n\n    populateItemsAtGround() {\n        const position = engine.player.getComponent(\"position\");\n        this.itemsOnGround = [];\n        for (const item of engine.gameMap.items) {\n            const itemPosition = item.getComponent(\"position\");\n            if (position.isEqual(itemPosition)) {\n                this.itemsOnGround.push(item);\n            }\n        }\n    }\n\n    openGroundItems() {\n        if (this.isOpen()) {\n            this.populateItemsAtGround();\n\n            const maxItems = Math.ceil((this.itemsOnGround.length + 1) / 10) * 10;\n\n            const inventoryStorageDom = document.createElement(\"div\");\n            inventoryStorageDom.classList.add(\"inventory__storage\");\n            const inventoryStorageTitleDom = document.createElement(\"div\");\n            inventoryStorageTitleDom.classList.add(\"inventory__storage-title\");\n            inventoryStorageTitleDom.innerText = \"On Ground\";\n            inventoryStorageDom.appendChild(inventoryStorageTitleDom);\n            this.inventorySlots = [];\n            for (let i = 0; i < maxItems; i++) {\n                const slot = document.createElement(\"div\");\n                slot.classList.add(\"slot\", \"pickup-slot\");\n                slot.setAttribute(\"data-index\", i);\n\n                this.populateSlot(slot, this.itemsOnGround[i]);\n                this.inventorySlots.push(slot);\n                inventoryStorageDom.appendChild(slot);\n            }\n            this.storageWrapDom.appendChild(inventoryStorageDom);\n        }\n    }\n\n    populateSlot(slot, item) {\n        if (item) {\n            const itemPosition = item.getComponent(\"position\");\n            if (itemPosition) {\n                let rotation = \"\";\n                if (itemPosition.zRot !== 0) {\n                    rotation = \"transform: rotate(\" + (itemPosition.zRot * 180) + \"deg);\";\n                }\n                slot.classList.add(\"has-item\");\n                let html = \"<div class='item' style='color:\" + itemPosition.color + \";\" + rotation + \"'><div class='item__icon'>\" + itemPosition.letter + \"</div>\";\n\n                if (item.amount > 1) {\n                    html += \"<span class='item__amount'>\" + item.amount + \"</span>\";\n                }\n\n                html += \"<div class='item__details'>\"\n                    + \"<span class='item__details-line item__name'>\" + item.name + \"</span>\";\n                if (item.description) {\n                    html += \"<span class='item__details-line item__description'>\" + item.description + \"</span>\";\n                }\n\n                html += \"<span class='item__details-line'><hr/></span>\";\n\n                html += item.getComponentDescriptions();\n\n                html += \"</div></div>\";\n\n                slot.innerHTML = html;\n            }\n        } else {\n            slot.classList.remove(\"has-item\");\n            slot.innerHTML = \"\";\n        }\n    }\n\n    toggle() {\n        if (this.isOpen()) {\n            this.close();\n        } else {\n            this.open();\n            this.populateInventory(engine.player);\n        }\n    }\n}\n\nconst inventory = new Inventory();\nexport default inventory;","import Arg from \"./Arg\";\nimport entityLoader from \"../../entity/EntityLoader\";\n\nexport default class ArgEntityLoader extends Arg {\n    constructor(name, defaultValue) {\n        super(name, defaultValue ?? []);\n    }\n\n    save(saveJson, type) {\n        const entityJson = [];\n        if (this._value) {\n            for (const entity of this._value) {\n                if (entity) {\n                    entityJson.push(JSON.stringify(entity.save()));\n                }\n            }\n        }\n\n        saveJson[type][this._name] = entityJson;\n    }\n\n    load(argJson) {\n        const array = this._defaultValue;\n        const entities = argJson[this._name];\n        if (entities) {\n            for (const entity of entities) {\n                if (entity === null) {\n                    array.push(entity);\n                } else {\n                    let newEntity;\n                    if (entity.load) {\n                        newEntity = entityLoader.createFromTemplate(entity.load, entity);\n                    } else {\n                        newEntity = entityLoader.create(entity);\n                    }\n                    newEntity.parentEntity = this.getParentComponent();\n                    array.push(newEntity);\n                }\n            }\n        }\n\n        this._value = array;\n    }\n}","import _Interactable from \"./_Interactable\";\nimport engine from \"../../Engine\";\nimport LootableEventHandler from \"../../event/askUserEventHandler/tradeListEventHandler/LootableEventHandler\";\nimport WaitAction from \"../../actions/WaitAction\";\nimport inventory from \"../../ui/Inventory\";\nimport Arg from \"../_arg/Arg\";\nimport ArgEntityLoader from \"../_arg/ArgEntityLoader\";\n\nexport default class LootableInteractable extends _Interactable {\n    constructor(args = {}) {\n        super(args, \"lootableInteractable\");\n\n        this.isLooted = this.addArg(new Arg(\"isLooted\", true));\n        this.isOpen = this.addArg(new Arg(\"isOpen\", true));\n        this.capacity = this.addArg(new Arg(\"capacity\", 1));\n        this.openSprite = this.addArg(new Arg(\"openSprite\", \"\"));\n        this.closedSprite = this.addArg(new Arg(\"closedSprite\", \"\"));\n        this.items = this.addArg(new ArgEntityLoader(\"items\"));\n    }\n\n    interact(entityInteracted) {\n        if (engine.isPlayer(entityInteracted)) {\n            engine.eventHandler = new LootableEventHandler(function() {\n                return new WaitAction();\n            }, engine.eventHandler, \"Viewing \" + this.parentEntity.name + \"'s Contents\", entityInteracted, this);\n\n            const entityPosition = entityInteracted.getComponent(\"position\");\n            engine.eventHandler.render((entityPosition.x.get() * 64 * engine.scale) + 100, entityPosition.y.get() * 64 * engine.scale);\n        } else if (this.parentEntity.id === \"hero\") {\n            //\n        }\n    }\n\n\n    addItem(itemToAdd) {\n        if (!itemToAdd) {\n            return false;\n        }\n        let success = false;\n\n        const items = this.items.get();\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i]?.item;\n            if (item) {\n                success = this.addPartialStacks(itemToAdd);\n                if (success) {\n                    break;\n                }\n            }\n        }\n\n        if (!success) {\n            success = this.addFullStacks(itemToAdd);\n        }\n\n        return success;\n    }\n\n    addFullStacks(item) {\n        this.clearSaveCache();\n\n        const items = this.items.get();\n        // Add full stack\n        if (this.capacity.get() === -1) {\n            items.push(item);\n            item.parentEntity = this;\n        } else {\n            for (let i = 0; i < this.capacity.get(); i++) {\n                if (!items[i]) {\n                    items[i] = item;\n                    item.parentEntity = this;\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    addPartialStacks(item) {\n        if (item.amount <= 0) {\n            return false;\n        }\n        this.clearSaveCache();\n\n        const originalAmount = item.amount;\n        let amountToAdd = item.amount;\n\n        const items = this.items.get();\n        let partialMax;\n        if (this.capacity.get() === -1) {\n            partialMax = items.length;\n        } else {\n            partialMax = this.capacity.get();\n        }\n        // Add partial stack\n        for (let i = 0; i < partialMax; i++) {\n            const inventoryItem = items[i];\n            if (inventoryItem) {\n                if (item.id === inventoryItem.id) {\n                    const amountCanAdd = inventoryItem.maxStackSize - inventoryItem.amount;\n                    if (amountCanAdd >= amountToAdd) {\n                        inventoryItem.setAmount(inventoryItem.amount + amountToAdd);\n                        return true;\n                    } else {\n                        inventoryItem.setAmount(inventoryItem.amount + amountCanAdd);\n                        item.setAmount(item.amount - amountCanAdd);\n                        amountToAdd -= amountCanAdd;\n                    }\n                }\n            }\n        }\n\n        return originalAmount !== amountToAdd;\n    }\n\n    use(item, amount) {\n        item.setAmount(item.amount - amount);\n        if (item.amount <= 0) {\n            this.remove(item);\n        }\n\n        this.clearSaveCache();\n    }\n\n    removeByIndex(index) {\n        if (index > -1) {\n            this.items.get().splice(index, 1, null);\n        }\n\n        this.clearSaveCache();\n        engine.needsMapUpdate = true;\n    }\n\n    remove(item) {\n        const index = this.items.get().indexOf(item);\n        this.removeByIndex(index);\n    }\n\n    getItem(index) {\n        return this.items.get()[index];\n    }\n\n    setItem(index, item) {\n        this.items.get()[index] = item;\n        this.clearSaveCache();\n    }\n\n    move(fromIndex, toIndex) {\n        const items = this.items.get();\n        if (fromIndex !== toIndex) {\n            const fromItem = items[fromIndex];\n\n            items[fromIndex] = items[toIndex];\n            items[toIndex] = fromItem;\n\n            this.clearSaveCache();\n            if (engine.isPlayer(this.parentEntity)) {\n                inventory.populateInventory(engine.player);\n            }\n        }\n    }\n\n    drop(/*item*/) {\n        // if (item) {\n        //     let parent = this.parentEntity;\n        //     while (parent.type !== \"actor\") {\n        //         parent = parent.parentEntity;\n        //     }\n        //     const parentPosition = parent.getComponent(\"position\");\n        //     engine.gameMap.addItem(item, parentPosition);\n        //\n        //     if (parent === engine.player) {\n        //         messageManager.text(\"You dropped the \" + item.name).build();\n        //     }\n        //\n        //     this.remove(item);\n        //     this.clearSaveCache();\n        //     if (parent === engine.player) {\n        //         inventory.populateInventory(engine.player);\n        //     }\n        // }\n    }\n}","import html from \"../../html/ui/SelectList.html\";\nimport _UIElement from \"./_UIElement\";\n\nclass SelectList extends _UIElement {\n    constructor() {\n        super(html);\n\n        this.titleDom = this.dom.getElementsByClassName(\"select-list__title\")[0];\n        this.optionsDom = this.dom.getElementsByClassName(\"select-list__options\")[0];\n    }\n\n    setTitle(title) {\n        this.titleDom.innerText = title;\n    }\n\n    setOptions(options) {\n        this.optionsDom.innerHTML = \"\";\n        let index = 0;\n        for (const option of options) {\n            const li = document.createElement(\"li\");\n            li.classList.add(\"select-list__option\");\n            li.dataset.index = index.toString();\n            if (index === 0) {\n                li.classList.add(\"active\");\n            }\n            li.innerText = option;\n            this.optionsDom.appendChild(li);\n            index ++;\n        }\n    }\n\n    moveActiveUp() {\n        const activeElement = this.optionsDom.getElementsByClassName(\"active\")[0];\n        const previousElement = activeElement.previousElementSibling;\n        if (previousElement) {\n            if (previousElement !== activeElement) {\n                previousElement.classList.add(\"active\");\n                activeElement.classList.remove(\"active\");\n            }\n        } else {\n            const lastElement = this.optionsDom.lastElementChild;\n            if (lastElement !== activeElement) {\n                lastElement.classList.add(\"active\");\n                activeElement.classList.remove(\"active\");\n            }\n        }\n    }\n\n    moveActiveDown() {\n        const activeElement = this.optionsDom.getElementsByClassName(\"active\")[0];\n        const nextElement = activeElement.nextElementSibling;\n        if (nextElement) {\n            if (nextElement !== activeElement) {\n                nextElement.classList.add(\"active\");\n                activeElement.classList.remove(\"active\");\n            }\n        } else {\n            const firstElement = this.optionsDom.firstElementChild;\n            if (firstElement !== activeElement) {\n                firstElement.classList.add(\"active\");\n                activeElement.classList.remove(\"active\");\n            }\n        }\n    }\n\n    getActiveIndex() {\n        const activeElement = this.optionsDom.getElementsByClassName(\"active\")[0];\n        return parseInt(activeElement.dataset.index);\n    }\n\n    open(x, y) {\n        this.dom.style.left = x + \"px\";\n        this.dom.style.top = y + \"px\";\n\n        super.open();\n    }\n}\n\nconst selectList = new SelectList();\nexport default selectList;","import _AskUserEventHandler from \"../_AskUserEventHandler\";\nimport selectList from \"../../../ui/SelectList\";\nimport controls from \"../../../controls/Controls\";\n\nexport default class _SelectListEventHandler extends _AskUserEventHandler {\n    constructor(previousHandler, title, options) {\n        super(previousHandler);\n\n        this.title = title || \"<missing title>\";\n        this.options = options || [];\n    }\n\n    render(x, y) {\n        selectList.setTitle(this.title);\n        selectList.setOptions(this.options);\n        selectList.open(x, y);\n    }\n\n    handleInput() {\n        super.handleInput();\n\n        if (controls.testPressed(\"up\")) {\n            selectList.moveActiveUp();\n        } else if (controls.testPressed(\"down\")) {\n            selectList.moveActiveDown();\n        } else if (controls.testPressed(\"confirm\")) {\n            this.selectIndex(selectList.getActiveIndex());\n        }\n\n        return null;\n    }\n\n    selectIndex(/*index*/) {\n        // Do nothing for base _SelectListEventHandler\n    }\n\n    exit() {\n        selectList.close();\n        super.exit();\n    }\n}","import _SelectListEventHandler from \"./_SelectListEventHandler\";\nimport engine from \"../../../Engine\";\n\nexport default class StairsSelectEventHandler extends _SelectListEventHandler {\n    constructor(callback, previousHandler) {\n        const title = \"Peek or go down stairs?\";\n        const options = [\n            \"Peek down\",\n            \"Go down\"\n        ];\n\n        super(previousHandler, title, options);\n        this.callback = callback;\n    }\n\n    selectIndex(index) {\n        engine.processAction(this.callback(index));\n        this.exit();\n    }\n}","import _Interactable from \"./_Interactable\";\nimport engine from \"../../Engine\";\nimport StairsSelectEventHandler from \"../../event/askUserEventHandler/selectListEventHandler/StairsSelectEventHandler\";\nimport WaitAction from \"../../actions/WaitAction\";\nimport BasicDungeon from \"../../map/tile/BasicDungeon\";\nimport messageManager from \"../../message/MessageManager\";\nimport Arg from \"../_arg/Arg\";\n\nexport default class StairsInteractable extends _Interactable {\n    constructor(args = {}) {\n        super(args, \"stairsInteractable\");\n\n        this.map = this.addArg(new Arg(\"map\", null));\n        this.x = this.addArg(new Arg(\"x\", null));\n        this.y = this.addArg(new Arg(\"y\", null));\n        this.generator = this.addArg(new Arg(\"generator\", null));\n    }\n\n    setPosition(x, y) {\n        this.x.set(x);\n        this.y.set(y);\n    }\n\n    setMap(map) {\n        this.map.set(map);\n    }\n\n    setGenerator(generator) {\n        this.generator.set(generator);\n    }\n\n    interact(entityInteracted) {\n        if (engine.isPlayer(entityInteracted)) {\n            const playerLevel = engine.playerMap.level;\n            const nextLevel = engine.nextMap.level;\n            const futureLevel = engine.futureMap.level;\n\n            let createNextMap = false;\n            let mapToUpdate;\n            if (playerLevel < nextLevel) {\n                mapToUpdate = engine.nextMap;\n            } else if (playerLevel < futureLevel) {\n                mapToUpdate = engine.futureMap;\n                createNextMap = true;\n            }\n\n            if (mapToUpdate.explored) {\n                mapToUpdate.explored = true;\n                engine.needsRenderUpdate = true;\n                mapToUpdate.addActor(engine.player);\n                engine.playerMap.removeActor(engine.player);\n                engine.playerMap = mapToUpdate;\n                const position = engine.player.getComponent(\"position\");\n                position.moveTo(5, 0);\n\n                if (createNextMap) {\n                    engine.setNextMap(engine.futureMap);\n                    engine.setFutureMap(new BasicDungeon(11, 11, {level: futureLevel + 1}));\n                    engine.futureMap.create();\n                }\n                return new WaitAction();\n            } else {\n                engine.eventHandler = new StairsSelectEventHandler(function(index) {\n                    mapToUpdate.explored = true;\n                    engine.needsRenderUpdate = true;\n\n                    if (index === 0) {\n                        return new WaitAction();\n                    } else {\n                        if (createNextMap) {\n                            engine.setNextMap(engine.futureMap);\n                            engine.setFutureMap(new BasicDungeon(11, 11, {level: futureLevel + 1}));\n                            engine.futureMap.create();\n                        }\n\n                        mapToUpdate.addActor(engine.player);\n                        engine.playerMap.removeActor(engine.player);\n                        engine.playerMap = mapToUpdate;\n                        const position = engine.player.getComponent(\"position\");\n                        position.moveTo(5, 0);\n                        return new WaitAction();\n                    }\n                }, engine.eventHandler);\n\n                const entityPosition = entityInteracted.getComponent(\"position\");\n                engine.eventHandler.render((entityPosition.x.get() * 64 * engine.scale) + 100, entityPosition.y.get() * 64 * engine.scale);\n            }\n        } else {\n            const nextLevel = engine.heroMap.level + 1;\n            const nextMapName = (this.generator.get() || this.map.get()) + \"-\" + nextLevel.toString();\n            const nextMap = engine.getMap(nextMapName);\n            if (!nextMap || nextLevel > engine.playerMap.level) {\n                messageManager.text(\"The hero has gotten too far ahead.\").build();\n                // TODO: Game Over\n            } else {\n                engine.heroMap.removeActor(entityInteracted);\n                engine.heroMap = nextMap;\n                engine.heroMap.explored = true;\n                engine.needsRenderUpdate = true;\n                engine.heroMap.addActor(entityInteracted);\n                const entityPosition = entityInteracted.getComponent(\"position\");\n                entityPosition.moveTo(5, 0);\n\n                if (engine.heroMap === engine.nextMap) {\n                    engine.nextMap = engine.futureMap;\n                    engine.setFutureMap(new BasicDungeon(11, 11, {level: engine.futureMap.level + 1}));\n                    engine.futureMap.create();\n                }\n            }\n        }\n\n        // if (this.map.get()) {\n        //     // const entity = this.parentEntity;\n        //     // const position = entity.getComponent(\"position\");\n        //     // position.moveTo(this.x.get(), this.y.get());\n        //     //\n        //     // if (engine.isPlayer(entityInteracted)) {\n        //     //     engine.eventHandler = new StairsSelectEventHandler(engine.eventHandler);\n        //     //     engine.eventHandler.render((this.x.get() * 64 * engine.scale) + 100, this.y.get() * 64 * engine.scale);\n        //     // } else {\n        //     //     //\n        //     // }\n        // } else if (this.generator.get()) {\n        //     const args = {};\n        //     if (engine.heroMap.level) {\n        //         args.level = engine.heroMap.level + 1;\n        //     }\n        //     const newMap = engine.mapLoader.loadMap(this.generator.get(), args);\n        //     newMap.create();\n        //     newMap.explored = true;\n        //\n        //     engine.setNextMap(newMap, this);\n        //\n        //     this.setMap(newMap.name);\n        //     this.setGenerator(null);\n        // }\n    }\n}","import _Interactable from \"./_Interactable\";\nimport engine from \"../../Engine\";\nimport Arg from \"../_arg/Arg\";\n\nexport default class TrapDoorInteractable extends _Interactable {\n    constructor(args = {}) {\n        super(args, \"trapDoorInteractable\");\n\n        this.map = this.addArg(new Arg(\"map\", null));\n        this.x = this.addArg(new Arg(\"x\", null));\n        this.y = this.addArg(new Arg(\"y\", null));\n        this.generator = this.addArg(new Arg(\"generator\", null));\n    }\n\n    setPosition(x, y) {\n        this.x.set(x);\n        this.y.set(y);\n    }\n\n    setMap(map) {\n        this.map.set(map);\n    }\n\n    setGenerator(generator) {\n        this.generator.set(generator);\n    }\n\n    interact(/*entityInteracted*/) {\n        if (this.map.get()) {\n            // const entity = this.parentEntity;\n            // const position = entity.getComponent(\"position\");\n            // position.x = this.x;\n            // position.y = this.y;\n            //\n            // if (engine.isPlayer(entityInteracted)) {\n            //     engine.eventHandler = new StairsSelectEventHandler(engine.eventHandler);\n            //     engine.eventHandler.render((this.x * 64 * engine.scale) + 100, this.y * 64 * engine.scale);\n            // } else {\n            //     //\n            // }\n        } else if (this.generator.get()) {\n            const args = {};\n            if (engine.playerMap.level) {\n                args.level = engine.playerMap.level;\n            }\n            const newMap = engine.mapLoader.loadMap(this.generator.get(), args);\n            newMap.create();\n            newMap.explored = true;\n\n            engine.setShopMap(newMap, this);\n\n            this.setMap(newMap.name);\n            this.setGenerator(null);\n        }\n    }\n}","import Arg from \"./Arg\";\n\n/**\n * Used when the component can contains a singular boolean,\n * so that it can be shortened to a boolean instead of an object\n *\n * Example: \"component\": true\n */\nexport default class ArgSingularBool extends Arg {\n    constructor(name, defaultValue) {\n        super(name, defaultValue);\n    }\n\n    save(saveJson, type) {\n        if (this._value !== this._defaultValue) {\n            saveJson[type] = this._value;\n        }\n\n        return saveJson;\n    }\n\n    load(argJson) {\n        if (typeof argJson === \"boolean\") {\n            this._value = argJson;\n        } else if (typeof argJson === \"object\") {\n            this._value = argJson[this._name];\n        }\n\n        this._value = this._value ?? this._defaultValue;\n    }\n}","import _Component from \"./_Component\";\nimport ArgSingularBool from \"./_arg/ArgSingularBool\";\n\nexport default class BlocksFov extends _Component {\n    constructor(args = {}) {\n        super(args, \"blocksFov\");\n\n        this.blocksFov = this.addArg(new ArgSingularBool(\"blocksFov\", false));\n    }\n}","import _Component from \"./_Component\";\nimport ArgSingularBool from \"./_arg/ArgSingularBool\";\n\nexport default class BlocksMovement extends _Component {\n    constructor(args = {}) {\n        super(args, \"blocksMovement\");\n\n        // Whether the entity prevents movement\n        this.blocksMovement = this.addArg(new ArgSingularBool(\"blocksMovement\", false));\n    }\n\n    onEntityDeath() {\n        this.blocksMovement.set(false);\n    }\n}","import _Component from \"./_Component\";\nimport Arg from \"./_arg/Arg\";\n\nexport default class Cleanable extends _Component {\n    constructor(args = {}) {\n        super(args, \"cleanable\");\n\n        this.decreasesTo = this.addArg(new Arg(\"decreasesTo\", \"\"));\n        this.increasesTo = this.addArg(new Arg(\"increasesTo\", \"\"));\n    }\n\n    perform() {}\n}","import Arg from \"./Arg\";\n\n/**\n * Loads multiple values into an array, comma delimited\n *\n * Example: \"component\": \"one, two\"\n */\nexport default class ArgSimpleArray extends Arg {\n    constructor(name, defaultValue) {\n        super(name, defaultValue ?? []);\n    }\n\n    save(saveJson, type) {\n        if (this._value) {\n            saveJson[type][this._name] = this._value.toString();\n        }\n    }\n\n    load(argJson) {\n        const array = this._defaultValue;\n        const items = argJson[this._name].split(\",\");\n        for (const item of items) {\n            array.push(item);\n        }\n\n        this._value = array;\n    }\n}","import _Component from \"./_Component\";\nimport ArgSimpleArray from \"./_arg/ArgSimpleArray\";\n\nexport default class Faction extends _Component {\n    constructor(args = {}) {\n        super(args, \"faction\");\n\n        this.factions = this.addArg(new ArgSimpleArray(\"factions\"));\n        this.enemies = this.addArg(new ArgSimpleArray(\"enemies\"));\n    }\n\n    /**\n     *\n     * @param {Faction} otherFaction\n     */\n    isEnemyOf(otherFaction) {\n        if (!otherFaction) {\n            return false;\n        }\n\n        for (const faction of this.factions.get()) {\n            if (otherFaction.enemies.get().indexOf(faction) > -1) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}","import html from \"../../html/ui/PlayerInfo.html\";\nimport _UIElement from \"./_UIElement\";\n\nclass PlayerInfo extends _UIElement {\n    constructor() {\n        super(html);\n\n        this.healthFgDom = this.dom.getElementsByClassName(\"player-health__fg\")[0];\n        this.healthTextDom = this.dom.getElementsByClassName(\"player-health__text\")[0];\n        this.powerDom = this.dom.getElementsByClassName(\"player-power\")[0];\n        this.defenseDom = this.dom.getElementsByClassName(\"player-defense\")[0];\n    }\n\n    updateHealth(current, max) {\n        const percent = current / max * 100;\n        this.healthFgDom.style.width = percent + \"%\";\n        this.healthTextDom.innerText = \"HP: \" + current + \" / \" + max;\n    }\n\n    updatePower(power) {\n        this.powerDom.innerText = power;\n    }\n\n    updateDefense(defense) {\n        this.defenseDom.innerText = defense;\n    }\n}\n\nconst playerInfo = new PlayerInfo();\nexport default playerInfo;","import _Component from \"./_Component\";\nimport AIDead from \"./ai/AIDead\";\nimport messageManager from \"../message/MessageManager\";\nimport playerInfo from \"../ui/PlayerInfo\";\nimport MathUtil from \"../util/MathUtil\";\nimport heroInfo from \"../ui/HeroInfo\";\nimport engine from \"../Engine\";\nimport Arg from \"./_arg/Arg\";\n\nexport default class Fighter extends _Component {\n    constructor(args) {\n        super(args, \"fighter\");\n\n        this.baseHp = this.addArg(new Arg(\"baseHp\", 0));\n        this.hp = this.addArg(new Arg(\"hp\", null));\n        this.baseDefense = this.addArg(new Arg(\"baseDefense\", 0));\n        this.baseDamage = this.addArg(new Arg(\"baseDamage\", 0));\n\n        this.minDamage = 0;\n        this.maxDamage = 0;\n        this.defense = 0;\n    }\n\n    setHp(newHp) {\n        this.hp.set(Math.max(0, Math.min(newHp, this.maxHp)));\n        this.updateUI();\n    }\n\n    heal(amount) {\n        if (this.hp.get() === this.maxHp) {\n            return 0;\n        }\n\n        const newHp = Math.min(this.maxHp, this.hp.get() + amount);\n        const healedHp = newHp - this.hp.get();\n        this.setHp(newHp);\n\n        return healedHp;\n    }\n\n    takeDamage(damage) {\n        this.setHp(this.hp.get() - damage);\n\n        if (this.hp.get() <= 0) {\n            this.die();\n        }\n    }\n\n    die() {\n        const entity = this.parentEntity;\n        if (engine.isPlayer(this.parentEntity)) {\n            messageManager.text(\"You died!\", \"#f00\").build();\n        } else if (this.parentEntity.id === \"hero\") {\n            messageManager.text(entity.name + \" dies!\", \"#ffa030\").build();\n            messageManager.text(\"You managed to keep the hero alive for \" + engine.heroMap.level + \" levels!\", \"#ffa030\").build();\n            // TODO: Game Over\n        } else {\n            messageManager.text(entity.name + \" dies!\", \"#ffa030\").build();\n        }\n\n        entity.callEvent(\"onEntityDeath\");\n\n        const ai = entity.getComponent(\"ai\");\n        if (ai) {\n            const aiArgs = {\n                components: {\n                    aiDead: {\n                        previousAI: ai.type\n                    }\n                }\n            };\n\n            entity.removeComponent(\"ai\");\n            entity.setComponent(new AIDead(aiArgs));\n        }\n\n        entity.sprite = \"rltiles_corpse\";\n        entity.name = \"Corpse of \" + this.name;\n\n        this.clearSaveCache();\n        entity.clearSaveCache();\n    }\n\n    getDamage() {\n        if (this.minDamage === this.maxDamage) {\n            return this.minDamage;\n        } else {\n            return MathUtil.randomInt(this.minDamage, this.maxDamage);\n        }\n    }\n\n    getDamageDisplay() {\n        if (this.minDamage === this.maxDamage) {\n            return this.minDamage;\n        } else {\n            return this.minDamage + \" - \" + this.maxDamage;\n        }\n    }\n\n    getBlockedDamage() {\n        return Math.floor(MathUtil.randomNumber(this.defense / 10, this.defense) / 10);\n    }\n\n    getMaxHp() {\n        const statHp = this.baseHp.get();\n\n        let equipmentHp = 0;\n        const equipment = this.parentEntity.getComponent(\"equipment\");\n        if (equipment) {\n            const equippables = equipment.getEquippables();\n            for (const equippable of equippables) {\n                equipmentHp += equippable.health;\n            }\n        }\n\n        return statHp + equipmentHp;\n    }\n\n    recalculateStats(clear = true) {\n        const newMax = this.getMaxHp();\n        if (this.hp.get() === null || this.hp >= this.maxHp) {\n            this.hp.set(newMax);\n        }\n        this.maxHp = newMax;\n\n        this.calculateDamage();\n        this.calculateDefense();\n\n        this.updateUI();\n\n        if (clear) {\n            this.clearSaveCache();\n        }\n    }\n\n    calculateDamage() {\n        const statDamage = this.baseDamage.get();\n\n        let equipmentMinDamage = 0;\n        let equipmentMaxDamage = 0;\n        const equipment = this.parentEntity.getComponent(\"equipment\");\n        if (equipment) {\n            const equippables = equipment.getEquippables();\n            for (const equippable of equippables) {\n                equipmentMinDamage += equippable.minDamage;\n                equipmentMaxDamage += equippable.maxDamage;\n            }\n        }\n\n        this.minDamage = statDamage + equipmentMinDamage;\n        this.maxDamage = Math.floor(statDamage * 1.5) + equipmentMaxDamage;\n    }\n\n    calculateDefense() {\n        const statDefense = this.baseDefense.get();\n\n        let equipmentDefense = 0;\n        const equipment = this.parentEntity.getComponent(\"equipment\");\n        if (equipment) {\n            const equippables = equipment.getEquippables();\n            for (const equippable of equippables) {\n                equipmentDefense += equippable.defense;\n            }\n        }\n\n        this.defense = statDefense + equipmentDefense;\n    }\n\n\n    updateUI() {\n        if (engine.isPlayer(this.parentEntity)) {\n            playerInfo.updateHealth(this.hp.get(), this.maxHp);\n            playerInfo.updatePower(this.getDamageDisplay());\n            playerInfo.updateDefense(this.defense);\n        } else if (this.parentEntity.id === \"hero\") {\n            heroInfo.updateHealth(this.hp.get(), this.maxHp);\n            heroInfo.updatePower(this.getDamageDisplay());\n            heroInfo.updateDefense(this.defense);\n        }\n    }\n\n    onComponentsLoaded() {\n        this.recalculateStats(false);\n    }\n\n    onEquipmentChange() {\n        this.recalculateStats();\n    }\n}","import _Component from \"./_Component\";\nimport engine from \"../Engine\";\nimport inventory from \"../ui/Inventory\";\nimport Arg from \"./_arg/Arg\";\nimport ArgEntityLoader from \"./_arg/ArgEntityLoader\";\n\nexport default class Inventory extends _Component {\n    constructor(args = {}) {\n        super(args, \"inventory\");\n\n        this.capacity = this.addArg(new Arg(\"capacity\", 3));\n        this.items = this.addArg(new ArgEntityLoader(\"items\"));\n    }\n\n    addItem(itemToAdd) {\n        if (!itemToAdd) {\n            return false;\n        }\n        let success = false;\n\n        const items = this.items.get();\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i]?.item;\n            if (item) {\n                success = this.addPartialStacks(itemToAdd);\n                if (success) {\n                    break;\n                }\n            }\n        }\n\n        if (!success) {\n            success = this.addFullStacks(itemToAdd);\n        }\n\n        return success;\n    }\n\n    addFullStacks(item) {\n        this.clearSaveCache();\n\n        const items = this.items.get();\n        // Add full stack\n        if (this.capacity.get() === -1) {\n            items.push(item);\n            item.parentEntity = this;\n        } else {\n            for (let i = 0; i < this.capacity.get(); i++) {\n                if (!items[i]) {\n                    items[i] = item;\n                    item.parentEntity = this;\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    addPartialStacks(item) {\n        if (item.amount <= 0) {\n            return false;\n        }\n        this.clearSaveCache();\n\n        const originalAmount = item.amount;\n        let amountToAdd = item.amount;\n\n        const items = this.items.get();\n        let partialMax;\n        if (this.capacity.get() === -1) {\n            partialMax = items.length;\n        } else {\n            partialMax = this.capacity.get();\n        }\n        // Add partial stack\n        for (let i = 0; i < partialMax; i++) {\n            const inventoryItem = items[i];\n            if (inventoryItem) {\n                if (item.id === inventoryItem.id) {\n                    const amountCanAdd = inventoryItem.maxStackSize - inventoryItem.amount;\n                    if (amountCanAdd >= amountToAdd) {\n                        inventoryItem.setAmount(inventoryItem.amount + amountToAdd);\n                        return true;\n                    } else {\n                        inventoryItem.setAmount(inventoryItem.amount + amountCanAdd);\n                        item.setAmount(item.amount - amountCanAdd);\n                        amountToAdd -= amountCanAdd;\n                    }\n                }\n            }\n        }\n\n        return originalAmount !== amountToAdd;\n    }\n\n    use(item, amount) {\n        item.setAmount(item.amount - amount);\n        if (item.amount <= 0) {\n            this.remove(item);\n        }\n\n        this.clearSaveCache();\n    }\n\n    removeByIndex(index) {\n        if (index > -1) {\n            this.items.get().splice(index, 1, null);\n        }\n\n        this.clearSaveCache();\n        engine.needsMapUpdate = true;\n    }\n\n    remove(item) {\n        const index = this.items.get().indexOf(item);\n        this.removeByIndex(index);\n    }\n\n    getItem(index) {\n        return this.items.get()[index];\n    }\n\n    setItem(index, item) {\n        this.items.get()[index] = item;\n        this.clearSaveCache();\n    }\n\n    move(fromIndex, toIndex) {\n        const items = this.items.get();\n        if (fromIndex !== toIndex) {\n            const fromItem = items[fromIndex];\n\n            items[fromIndex] = items[toIndex];\n            items[toIndex] = fromItem;\n\n            this.clearSaveCache();\n            if (engine.isPlayer(this.parentEntity)) {\n                inventory.populateInventory(engine.player);\n            }\n        }\n    }\n\n    drop(/*item*/) {\n        // if (item) {\n        //     let parent = this.parentEntity;\n        //     while (parent.type !== \"actor\") {\n        //         parent = parent.parentEntity;\n        //     }\n        //     const parentPosition = parent.getComponent(\"position\");\n        //     engine.gameMap.addItem(item, parentPosition);\n        //\n        //     if (parent === engine.player) {\n        //         messageManager.text(\"You dropped the \" + item.name).build();\n        //     }\n        //\n        //     this.remove(item);\n        //     this.clearSaveCache();\n        //     if (parent === engine.player) {\n        //         inventory.populateInventory(engine.player);\n        //     }\n        // }\n    }\n}","import _Action from \"../_Action\";\n\nexport default class ItemAction extends _Action {\n    /**\n     *\n     * @param entity\n     * @param item\n     * @param x\n     * @param y\n     */\n    constructor(entity, item, x, y) {\n        super(entity);\n\n        this.item = item;\n        this.x = x;\n        this.y = y;\n    }\n\n    perform(/*gameMap*/) {\n        const consumable = this.item.getComponent(\"consumable\");\n        if (consumable) {\n            return consumable.activate(this, this.x, this.y);\n        }\n    }\n\n    getTargetActor(gameMap) {\n        return gameMap.getAliveActorAtLocation(this.x, this.y);\n    }\n}","import _Component from \"../_Component\";\nimport ItemAction from \"../../actions/itemAction/ItemAction\";\n\nexport default class _Consumable extends _Component {\n    constructor(args = {}, type) {\n        super(args, \"consumable\", type);\n    }\n\n    save() {\n        return super.save();\n    }\n\n    getConsumer() {\n        let parent = this.parentEntity;\n        while (parent && parent.type !== \"actor\") {\n            parent = parent.parentEntity;\n        }\n        return parent;\n    }\n\n    getItem() {\n        return this.parentEntity;\n    }\n\n    getAction() {\n        return new ItemAction(this.getConsumer(), this.getItem());\n    }\n\n    activate(action) { // eslint-disable-line no-unused-vars\n        console.error(\"Not Implemented\");\n    }\n\n    consume() {\n        const item = this.getItem();\n        const parentStorage = item.parentEntity;\n        if (parentStorage) {\n            parentStorage.use(item, 1);\n        }\n    }\n}","import _Consumable from \"./_Consumable\";\nimport UnableToPerformAction from \"../../actions/UnableToPerformAction\";\nimport messageManager from \"../../message/MessageManager\";\nimport Arg from \"../_arg/Arg\";\n\nexport default class HealingConsumable extends _Consumable {\n    constructor(args = {}) {\n        super(args, \"healingConsumable\");\n\n        this.amount = this.addArg(new Arg(\"amount\", 0));\n    }\n\n    /**\n     *\n     * @param {ItemAction} action\n     */\n    activate(action) {\n        const consumer = action.entity;\n        const fighter = consumer.getComponent(\"fighter\");\n        if (fighter) {\n            const amountHealed = fighter.heal(this.amount.get());\n\n            if (amountHealed > 0) {\n                this.consume();\n                if (this.isPlayer()) {\n                    messageManager.text(\"You consume the \" + this.parentEntity.name + \", and recover \" + amountHealed + \" HP!\").build();\n                }\n                return this;\n            } else {\n                return new UnableToPerformAction(action.entity, \"Your health is already full\");\n            }\n        }\n    }\n\n    getDescription() {\n        return \"<span class='item__details-line'>Recovers <span style='color: #c00;'>\" + this.amount.get() + \"</span> health</span>\";\n    }\n}","import AIDead from \"./ai/AIDead\";\nimport AIHero from \"./ai/AIHero\";\nimport AIMeleeChase from \"./ai/AIMeleeChase\";\nimport LootableInteractable from \"./interactable/LootableInteractable\";\nimport StairsInteractable from \"./interactable/StairsInteractable\";\nimport TrapDoorInteractable from \"./interactable/TrapDoorInteractable\";\nimport BlocksFov from \"./BlocksFov\";\nimport BlocksMovement from \"./BlocksMovement\";\nimport Cleanable from \"./Cleanable\";\nimport Faction from \"./Faction\";\nimport Fighter from \"./Fighter\";\nimport Fov from \"./Fov\";\nimport Position from \"./Position\";\nimport Inventory from \"./Inventory\";\nimport HealingConsumable from \"./consumable/HealingConsumable\";\n\nclass ComponentLoader {\n    constructor() {\n        this.types = new Map();\n\n        this.init();\n    }\n\n    init() {\n        this.load(new AIDead());\n        this.load(new AIHero());\n        this.load(new AIMeleeChase());\n\n        this.load(new LootableInteractable());\n        this.load(new StairsInteractable());\n        this.load(new TrapDoorInteractable());\n\n        this.load(new HealingConsumable());\n\n        this.load(new BlocksFov());\n        this.load(new BlocksMovement());\n        this.load(new Cleanable());\n        this.load(new Faction());\n        this.load(new Fighter());\n        this.load(new Fov());\n        this.load(new Inventory());\n        this.load(new Position());\n    }\n\n    load(component) {\n        this.types.set(component.type, component);\n    }\n\n    create(entity, type, args) {\n        const component = this.types.get(type);\n        const constructor = component.constructor;\n        return new constructor(args);\n    }\n}\n\nconst componentLoader = new ComponentLoader();\nexport default componentLoader;","import html from \"../../html/ui/Details.html\";\nimport _UIElement from \"./_UIElement\";\n// import engine from \"../Engine\";\n\nclass Details extends _UIElement {\n    constructor() {\n        super(html);\n    }\n\n    updatePlayerDetails() {\n        //this.updatePositionDetails(engine.player, true);\n    }\n\n    getPosition(entity) {\n        const position = entity.getComponent(\"position\");\n        const x = position.x.get();\n        const y = position.y.get();\n        return \"<span class='details__line'>Looking at: X:\" + x + \" - Y:\" + y + \"</span>\";\n    }\n\n    updatePositionOnly(entity) {\n        this.dom.innerHTML = this.getPosition(entity);\n    }\n\n    updatePositionDetails(/*entity, skipPlayer = false*/) {\n        // if (!entity) {\n        //     return;\n        // }\n        // const position = entity.getComponent(\"position\");\n        // const x = position.x;\n        // const y = position.y;\n        // const z = position.z;\n        // let zStart = z - 1;\n        // if (entity !== engine.player) {\n        //     zStart = z;\n        // }\n        // let text = this.getPosition(entity);\n        // const tiles = engine.gameMap.tiles;\n        // for (let i = zStart; i <= z; i++) {\n        //     if (tiles.get(i) && tiles.get(i)[x]) {\n        //         const tile = tiles.get(i)[x][y];\n        //         if (tile) {\n        //             text += \"<span class='details__line'>\" + tile.name + \"</span>\";\n        //         }\n        //     }\n        // }\n        //\n        // for (const actor of engine.gameMap.actors) {\n        //     if (skipPlayer && actor === engine.player) {\n        //         continue;\n        //     }\n        //\n        //     const position = actor.getComponent(\"position\");\n        //     if (position && position.isAt(x, y)) {\n        //         text += \"<span class='details__line'><span style='color:\" + position.color + \"'>\" + position.letter + \"</span>: \" + actor.name;\n        //\n        //         // const fighter = actor.getComponent(\"fighter\");\n        //         // if (fighter) {\n        //         //     text += \" \" + fighter.getHealthDescription();\n        //         // }\n        //         text += \"</span>\";\n        //     }\n        // }\n        //\n        //\n        // const itemLines = [];\n        // for (const item of engine.gameMap.items) {\n        //     const position = item.getComponent(\"position\");\n        //     if (position && position.isAt(x, y)) {\n        //         itemLines.push(\"<span class='details__line'><span style='color:\" + position.color + \"'>\" + position.letter + \"</span>: \" + item.name + \"</span>\");\n        //     }\n        // }\n        //\n        // if (itemLines.length > 0) {\n        //     text += \"<span class='details__line details__header'>Items:</span>\";\n        // }\n        //\n        // for (const line of itemLines) {\n        //     text += line;\n        // }\n\n\n        // const nearby = [];\n        // for (const actor of engine.fov.visibleActors) {\n        //     if (actor === engine.player || !actor.isAlive()) {\n        //         continue;\n        //     }\n        //\n        //     const position = actor.getComponent(\"position\");\n        //     if (position) {\n        //         nearby.push(actor);\n        //     }\n        // }\n\n        // if (nearby.length > 0) {\n        //     text += \"<span class='details__line details__header'>Nearby:</span>\";\n        //\n        //     for (const actor of nearby) {\n        //         const position = actor.getComponent(\"position\");\n        //         if (position) {\n        //             text += \"<span class='details__line'>\";\n        //             text += \"<span style='color:\" + position.color + \"'>\" + position.letter + \"</span>: \" + actor.name;\n        //\n        //             const fighter = actor.getComponent(\"fighter\");\n        //             if (fighter) {\n        //                 text += \" \" + fighter.getHealthDescription();\n        //             }\n        //\n        //             text += \"</span>\";\n        //         }\n        //     }\n        // }\n\n        // this.dom.innerHTML = text;\n    }\n}\n\nconst details = new Details();\nexport default details;","import engine from \"./Engine\";\nimport heroInfo from \"./ui/HeroInfo\";\nimport playerInfo from \"./ui/PlayerInfo\";\nimport viewInfo from \"./ui/ViewInfo\";\nimport messageConsole from \"./ui/MessageConsole\";\nimport details from \"./ui/Details\";\nimport selectList from \"./ui/SelectList\";\nimport tradeList from \"./ui/TradeList\";\n\nclass SceneState {\n    constructor() {\n        this.setupGameHtml();\n\n        window.addEventListener( \"resize\", this);\n    }\n\n    setupGameHtml() {\n        const gameDom = document.createElement(\"div\");\n        gameDom.classList.add(\"game\");\n\n        this.canvas = document.createElement(\"canvas\");\n        this.canvas.classList.add(\"view\");\n\n        gameDom.appendChild(this.canvas);\n\n        heroInfo.open();\n        heroInfo.appendTo(gameDom);\n\n        selectList.appendTo(gameDom);\n        tradeList.appendTo(gameDom);\n\n        playerInfo.open();\n        viewInfo.open();\n        messageConsole.open();\n        details.open();\n\n        playerInfo.appendTo(details.dom);\n        viewInfo.appendTo(details.dom);\n        messageConsole.appendTo(details.dom);\n        details.appendTo(gameDom);\n\n        document.body.appendChild(gameDom);\n\n        this.ctx = this.canvas.getContext(\"2d\");\n    }\n\n    handleEvent(e) {\n        switch(e.type) {\n            case \"resize\":\n                this.resizeCanvas();\n\n                break;\n        }\n    }\n\n    resizeCanvas() {\n        this.canvas.width = window.innerWidth;\n        this.canvas.height = window.innerHeight;\n\n        const xScale = this.canvas.width / 2560;\n        const yScale = this.canvas.height / 1440;\n\n        engine.scale = Math.min(xScale, yScale);\n\n        engine.needsRenderUpdate = true;\n    }\n\n    clearAll() {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n}\n\nconst sceneState = new SceneState();\nexport default sceneState;\n","import Extend from \"../util/Extend\";\nimport componentLoader from \"../components/ComponentLoader\";\nimport sceneState from \"../SceneState\";\nimport engine from \"../Engine\";\n\nexport default class _Entity {\n    constructor(args) {\n        this.args = args;\n        this.type = args.type || \"entity\";\n        this.id = args.id;\n        this.name = args.name || \"\";\n        this.description = args.description || \"\";\n        this.sprite = args.sprite || \"\";\n        this.letter = args.letter || \"?\";\n        this.color = args.color || \"#fff\";\n\n        this.componentArray = [];\n        this.components = {};\n        if (args.components) {\n            this.loadComponents(args, args.components);\n            this.callEvent(\"onComponentsLoaded\");\n        }\n\n        this.cachedSave = null;\n    }\n\n    /**\n     * @returns {_Entity}\n     */\n    clone() {\n        console.error(\"Not implemented\");\n    }\n\n    callEvent(event, args) {\n        for (const component of this.componentArray) {\n            component[event]?.(args);\n        }\n\n        this[event]?.(args);\n    }\n\n    draw(xTileOffset, yTileOffset) {\n        const position = this.getComponent(\"position\");\n        if (position) {\n            engine.spriteManager.getImage(this.sprite).drawImage(sceneState.ctx, (position.x.get() + xTileOffset) * 64, (position.y.get() + yTileOffset) * 64);\n        }\n    }\n\n    loadComponents(args, components) {\n        const self = this;\n        Object.keys(components).forEach(function(key) {\n            const type = componentLoader.types.get(key);\n            if (type) {\n                const baseType = type.baseType;\n                const existingComponent = self.getComponent(baseType);\n                if (!existingComponent) {\n                    self.setComponent(componentLoader.create(this, key, args), false);\n                }\n            }\n        });\n    }\n\n    setComponent(component) {\n        component.parentEntity = this;\n        this.components[component.baseType] = component;\n        this.componentArray.push(component);\n\n    }\n\n    getComponent(baseType) {\n        return this.components[baseType];\n    }\n\n    removeComponent(baseType) {\n        if (!this.components[baseType]) {\n            return;\n        }\n\n        this.components[baseType] = undefined;\n        for (const component of this.componentArray) {\n            if (component.baseType === baseType) {\n                const index = this.componentArray.indexOf(component);\n                this.componentArray.splice(index, 1);\n                break;\n            }\n        }\n    }\n\n    clearSaveCache() {\n        this.cachedSave = null;\n    }\n\n    save() {\n        if (this.cachedSave !== null) {\n            return this.cachedSave;\n        }\n\n        const json = {\n            id: this.id,\n            type: this.type,\n            name: this.name,\n            description: this.description,\n            sprite: this.sprite,\n            letter: this.letter,\n            color: this.color\n        };\n\n        json.components = {};\n        for (const component of this.componentArray) {\n            const save = component.save();\n            if (save !== null && save !== {}) {\n                Extend.deep(json.components, save);\n            }\n        }\n\n        this.cachedSave = json;\n        return json;\n    }\n\n    loadArg(name, defaultValue) {\n        return this.args[name] || defaultValue;\n    }\n\n\n}","import AdamMilazzoFov from \"../map/fov/AdamMilazzoFov\";\nimport _Entity from \"./_Entity\";\n\nexport default class Actor extends _Entity {\n    constructor(args = {}) {\n        args.type = \"actor\";\n        super(args);\n\n        this.fov = new AdamMilazzoFov();\n    }\n\n\n    clone() {\n        return new Actor(this.save());\n    }\n\n    isAlive() {\n        const fighter = this.getComponent(\"fighter\");\n        return fighter && fighter.hp.get() > 0;\n    }\n}","import _Entity from \"./_Entity\";\n\nexport default class Tile extends _Entity {\n    constructor(args = {}) {\n        args.type = \"tile\";\n        super(args);\n    }\n\n    clone() {\n        return new Tile(this.save());\n    }\n\n    save() {\n        return super.save();\n    }\n\n    isWall() {\n        return this.getComponent(\"blocksMovement\")?.blocksMovement.get();\n    }\n}","import _Entity from \"./_Entity\";\n\nexport default class Item extends _Entity {\n    constructor(args = {}) {\n        args.type = \"item\";\n        super(args);\n\n        this.amount = this.loadArg(\"amount\", 1);\n        this.maxStackSize = this.loadArg(\"maxStackSize\", 1);\n    }\n\n    save() {\n        const saveJson = super.save();\n\n        if (this.amount !== 1) {\n            saveJson.amount = this.amount;\n        }\n\n        if (this.maxStackSize !== 1) {\n            saveJson.maxStackSize = this.maxStackSize;\n        }\n\n        return saveJson;\n    }\n\n    clone() {\n        return new Item(this.save());\n    }\n\n\n    setAmount(amount) {\n        this.amount = amount;\n        this.clearSaveCache();\n    }\n}","import Actor from \"./Actor\";\nimport Tile from \"./Tile\";\nimport Extend from \"../util/Extend\";\n\nimport Item from \"./Item\";\n\nclass EntityLoader {\n    constructor() {\n        this.types = new Map();\n        this.templates = new Map();\n        this.loaded = false;\n\n        this.init();\n    }\n\n    init() {\n        this.load(new Actor());\n        this.load(new Tile());\n        this.load(new Item());\n\n        this.loadTemplates();\n    }\n\n    load(entity) {\n        this.types.set(entity.type, entity);\n    }\n\n    create(json, args = {}) {\n        let parsedJson;\n        if (typeof json === \"object\") {\n            parsedJson = json;\n        } else {\n            parsedJson = JSON.parse(json);\n        }\n\n        if (parsedJson.extends !== undefined) {\n            if (this.templates.has(parsedJson.extends)) {\n                const template = JSON.parse(this.templates.get(parsedJson.extends));\n\n                delete parsedJson[\"extends\"];\n                return this.create(Extend.deep(template, parsedJson), args);\n            } else {\n                console.error(\"Json template for id '\" + parsedJson.extends + \"' is missing. Cannot extend from it.\");\n            }\n        }\n\n        const entity = this.types.get(parsedJson.type);\n        return new entity.constructor(Extend.deep(parsedJson, args));\n    }\n\n    createFromTemplate(id, args = {}) {\n        if (this.templates.has(id)) {\n            return this.create(this.templates.get(id), args);\n        } else {\n            console.error(\"Json template for id '\" + id + \"' is missing.\");\n            return null;\n        }\n    }\n\n    isLoaded() {\n        return this.loaded;\n    }\n\n    loadTemplate(entities) {\n        for (const entity of entities) {\n            const id = entity.id;\n            if (this.templates.has(id)) {\n                console.error(\"Template for entity id '\" + id + \"' already exists.\");\n            } else {\n                this.templates.set(id, JSON.stringify(entity));\n            }\n        }\n    }\n\n    loadTemplates() {\n        const components = require.context(\"../../json/entities/\", true, /\\.json$/, \"eager\");\n        const numToLoad = components.keys().length;\n        let numLoaded = 0;\n        components.keys().forEach(filePath => {\n            components(filePath).then(module => {\n                this.loadTemplate(module);\n\n                numLoaded ++;\n                if (numLoaded === numToLoad) {\n                    this.loaded = true;\n                }\n            });\n        });\n    }\n}\n\nconst entityLoader = new EntityLoader();\nexport default entityLoader;","import ArrayUtil from \"../../util/ArrayUtil\";\nimport entityLoader from \"../../entity/EntityLoader\";\nimport sceneState from \"../../SceneState\";\nimport engine from \"../../Engine\";\nimport Fov from \"../../components/Fov\";\n// import details from \"../../ui/Details\";\nimport Actor from \"../../entity/Actor\";\nimport Item from \"../../entity/Item\";\nimport details from \"../../ui/Details\";\n\nexport default class GameMap {\n    constructor(name, displayName, width, height) {\n        this.name = name;\n        this.displayName = displayName;\n        this.width = width;\n        this.height = height;\n\n        this.timeout = null;\n        this.saveCache = null;\n\n        this.explored = false;\n\n        this.init();\n    }\n\n    init() {\n        this.tiles = ArrayUtil.create2dArray(this.width);\n        this.actors = [];\n        this.items = [];\n    }\n\n    create() {}\n\n    teardown() {\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n        }\n\n        engine.player.fov.teardown();\n\n        for (let i = 0; i < this.width; i++) {\n            for (let j = 0; j < this.height; j++) {\n                const tile = this.tiles[i][j];\n                if (tile) {\n                    tile.callEvent(\"onMapTeardown\");\n                }\n            }\n        }\n\n        for (const actor of this.actors) {\n            actor.callEvent(\"onMapTeardown\");\n        }\n\n        for (const item of this.items) {\n            item.callEvent(\"onMapTeardown\");\n        }\n    }\n\n    removeEntity(entity) {\n        if (entity instanceof Actor) {\n            this.removeActor(entity);\n        } else if (entity instanceof Item) {\n            this.removeItem(entity);\n        }\n    }\n\n    removeItem(item) {\n        const index = this.items.indexOf(item);\n        if (index > -1) {\n            this.items.splice(index, 1);\n        }\n    }\n\n    /**\n     *\n     * @param item\n     * @param groundPosition\n     * @returns {boolean} true if item added <br/>\n     *                    false if item merged and item is deleted\n     */\n    addItem(item, groundPosition) {\n        const itemPosition = item.getComponent(\"position\");\n        if (!groundPosition) {\n            groundPosition = itemPosition;\n        }\n\n        let amountToAdd = item.amount;\n        for (const mapItem of this.items) {\n            if (mapItem.id === item.id) {\n                const position = mapItem.getComponent(\"position\");\n                if (position && groundPosition.isEqual(position)) {\n                    if (mapItem.maxStackSize === -1) {\n                        mapItem.setAmount(mapItem.amount + item.amount);\n                        itemPosition.teardown();\n                        return false;\n                    }\n\n                    const amountCanAdd = mapItem.maxStackSize - mapItem.amount;\n                    if (amountCanAdd >= amountToAdd) {\n                        mapItem.setAmount(mapItem.amount + amountToAdd);\n                        itemPosition.teardown();\n                        return false;\n                    } else {\n                        mapItem.setAmount(mapItem.amount + amountCanAdd);\n                        item.setAmount(item.amount - amountCanAdd);\n\n                        amountToAdd -= amountCanAdd;\n                    }\n                }\n            }\n        }\n\n        if (amountToAdd > 0) {\n            item.setAmount(amountToAdd);\n\n            itemPosition.moveTo(groundPosition.x.get(), groundPosition.y.get());\n            item.parent = null;\n            this.items.push(item);\n            itemPosition.setVisible();\n            return true;\n        } else {\n            itemPosition.teardown();\n            return false;\n        }\n    }\n\n    removeActor(actor) {\n        const index = this.actors.indexOf(actor);\n        if (index > -1) {\n            this.actors.splice(index, 1);\n        }\n    }\n\n    addActor(actor) {\n        this.actors.push(actor);\n    }\n\n    save() {\n        // if (engine.gameMap !== this && this.saveCache) {\n        //     return this.saveCache;\n        // }\n\n        const saveData = {\n            name: this.name,\n            displayName: this.displayName,\n            width: this.width,\n            height: this.height,\n            explored: this.explored\n        };\n\n        saveData[\"tiles\"] = {};\n        const tileArray = [];\n        const letterArray = [];\n        let key = \"\";\n        let charCode = 65;\n\n        for (let i = 0; i < this.width; i++) {\n            for (let j = 0; j < this.height; j++) {\n                const tile = this.tiles[i][j];\n                if (tile) {\n                    const tileJson = JSON.stringify(tile.save());\n                    const index = tileArray.indexOf(tileJson);\n                    if (index > -1) {\n                        key += letterArray[index];\n                    } else {\n                        tileArray.push(tileJson);\n                        letterArray.push(String.fromCharCode(charCode));\n                        key += String.fromCharCode(charCode);\n\n                        charCode++;\n                    }\n                } else {\n                    key += \" \";\n                }\n            }\n        }\n\n        saveData[\"tiles\"] = {};\n        saveData[\"tiles\"][\"key\"] = key;\n        saveData[\"tiles\"][\"map\"] = {};\n\n        for (let i = 0; i < tileArray.length; i++) {\n            saveData[\"tiles\"][\"map\"][letterArray[i]] = tileArray[i];\n        }\n\n        const actorJson = [];\n        for (const actor of this.actors) {\n            actorJson.push(JSON.stringify(actor.save()));\n        }\n        saveData[\"actors\"] = actorJson;\n\n        const itemJson = [];\n        for (const item of this.items) {\n            itemJson.push(JSON.stringify(item.save()));\n        }\n        saveData[\"items\"] = itemJson;\n\n        this.saveCache = saveData;\n        return saveData;\n    }\n\n    load(json) {\n        const tiles = json.tiles;\n        this.explored = json.explored;\n        this.displayName = json.displayName;\n\n        for (let i = 0; i < this.width; i++) {\n            for (let j = 0; j < this.height; j++) {\n                const index = i*this.height + j;\n                const tile = tiles[index];\n\n                if (tile) {\n                    tiles[i][j] = entityLoader.create(tile, {components: {position: {x: i, y: j}}});\n                }\n            }\n        }\n\n        const actors = json.actors;\n        for (const actor of actors) {\n            const createdActor = entityLoader.create(actor);\n            this.addActor(createdActor);\n        }\n\n        const items = json.items;\n        for (const item of items) {\n            const createdItem = entityLoader.create(item);\n            this.items.push(createdItem);\n        }\n    }\n\n    isInBounds(x, y) {\n        return 0 <= x && x < this.width && 0 <= y && y < this.height;\n    }\n\n    revealFromPosition(x, y, radius, delay = 25) {\n        const self = this;\n        const minX = Math.max(0, x - radius);\n        const maxX = Math.min(this.width, x + radius);\n        const minY = Math.max(0, y - radius);\n        const maxY = Math.min(this.height, y + radius);\n\n        if (delay === 0) {\n            self._revealGradually(minX, maxX, minY, maxY, x, y, 1, radius, delay);\n        } else {\n            self.timeout = setTimeout(function () {\n                self._revealGradually(minX, maxX, minY, maxY, x, y, 1, radius, delay);\n            }, delay);\n        }\n    }\n\n    _revealGradually(minX, maxX, minY, maxY, x, y, radius, maxRadius, delay) {\n        const self = this;\n        self.timeout = null;\n\n        if (radius <= maxRadius) {\n            self.timeout = setTimeout(function () {\n                self._revealGradually(minX, maxX, minY, maxY, x, y, radius + 1, maxRadius, delay);\n            }, delay);\n        }\n\n        const xRadiusMin = x - radius;\n        const xRadiusMax = x + radius;\n        const yRadiusMin = y - radius;\n        const yRadiusMax = y + radius;\n        for (let i = xRadiusMin; i <= xRadiusMax; i++) {\n            const xIsEdge = i === xRadiusMin || i === xRadiusMax;\n            for (let j = yRadiusMin; j <= yRadiusMax; j++) {\n                if (xIsEdge || j === yRadiusMin || j === yRadiusMax) {\n                    this._revealAtPosition(i, j);\n                    engine.needsMapUpdate = true;\n                }\n            }\n        }\n\n        if (xRadiusMin <= minX && xRadiusMax >= maxX && yRadiusMin <= minY && yRadiusMax >= maxY) {\n            return true;\n        }\n\n        return true;\n    }\n\n    _revealAtPosition(x, y) {\n        const tileX = this.tiles[1][x];\n        if (tileX) {\n            const tile = this.tiles[1][x][y];\n            if (tile) {\n                const position = tile.getComponent(\"position\");\n                if (position) {\n                    const fov = tile.getComponent(\"fov\");\n                    if (!fov) {\n                        tile.setComponent(new Fov({components: {fov: {explored: true, visible: false}}}));\n                    }\n                }\n            }\n        }\n    }\n\n    getAliveActorAtLocation(x, y) {\n        let aliveActor = null;\n        for (const actor of this.actors) {\n            if (actor.isAlive()) {\n                const position = actor.getComponent(\"position\");\n                if (position && position.isAt(x, y)) {\n                    aliveActor = actor;\n                    break;\n                }\n            }\n        }\n\n        return aliveActor;\n    }\n\n    getBlockingActorAtLocation(x, y) {\n        let blockingActor = null;\n        for (const actor of this.actors) {\n            const position = actor.getComponent(\"position\");\n            if (position && position.isAt(x, y)) {\n                if (actor.getComponent(\"blocksMovement\")?.blocksMovement.get()) {\n                    blockingActor = actor;\n                    break;\n                }\n            }\n        }\n\n        return blockingActor;\n    }\n\n    getCleanableActorAtLocation(x, y) {\n        let cleanableActor = null;\n        for (const actor of this.actors) {\n            const position = actor.getComponent(\"position\");\n            if (position && position.isAt(x, y)) {\n                const component = actor.getComponent(\"cleanable\");\n                if (component) {\n                    cleanableActor = actor;\n                    break;\n                }\n            }\n        }\n\n        return cleanableActor;\n    }\n\n    addPlayer(x, y) {\n        if (!engine.player) {\n            engine.player = entityLoader.createFromTemplate(\"player\");\n        }\n\n        this.addActor(engine.player);\n\n        const playerPosition = engine.player.getComponent(\"position\");\n        playerPosition.moveTo(x, y);\n\n        this.updatePlayerUI();\n    }\n\n    updatePlayerUI() {\n        details.updatePlayerDetails();\n    }\n\n    draw(xTileOffset = 0, yTileOffset = 0) {\n        if (this.explored) {\n            const tiles = this.tiles;\n\n            for (let i = 0; i < tiles.length; i++) {\n                const tileX = tiles[i];\n                for (let j = 0; j < tileX.length; j++) {\n                    const tile = tileX[j];\n                    if (tile) {\n                        tile.draw(xTileOffset, yTileOffset);\n                    }\n                }\n            }\n\n            for (const item of this.items) {\n                item.draw(xTileOffset, yTileOffset);\n            }\n\n            for (const actor of this.actors) {\n                actor.draw(xTileOffset, yTileOffset);\n            }\n\n\n        } else {\n            engine.spriteManager.getImage(\"map\").drawImage(sceneState.ctx, xTileOffset * 64, yTileOffset * 64);\n        }\n\n        sceneState.ctx.font = \"20vh serif\";\n        sceneState.ctx.textAlign = \"center\";\n        sceneState.ctx.globalAlpha = 0.1;\n        let text = this.level;\n        if (this.name.startsWith(\"shop\")) {\n            text = \"$ \" + text;\n        }\n        sceneState.ctx.fillText(text, (xTileOffset * 64 + 352) * engine.scale, (yTileOffset * 64 + 444)  * engine.scale);\n        sceneState.ctx.globalAlpha = 1;\n        // const fov = engine.player.fov;\n        // // for (const tile of fov.visibleTiles) {\n        // //     tile.draw();\n        // // }\n        //\n        // for (const actor of fov.visibleActors) {\n        //     if (actor) {\n        //         actor.draw();\n        //     }\n        // }\n        //\n        // for (const item of fov.visibleItems) {\n        //     if (item) {\n        //         item.draw();\n        //     }\n        // }\n    }\n}","export default class Room {\n    constructor() {}\n\n    placeEntities() { }\n}","import entityGroups from \"../../../json/generation/_entityGroups.json\";\nimport itemGroups from \"../../../json/generation/_itemGroups.json\";\nimport tileGroups from \"../../../json/generation/_tileGroups.json\";\nimport basicDungeon from \"../../../json/generation/basic-dungeon.json\";\nimport tutorial from \"../../../json/generation/tutorial.json\";\nimport MathUtil from \"../../util/MathUtil\";\n\nclass ChanceLoader {\n    constructor() {\n        this.entityGroups = new Map();\n        this.itemGroups = new Map();\n        this.tileGroups = new Map();\n        this.generators = new Map();\n\n        this.loadEntityGroups(entityGroups);\n        this.loadItemGroups(itemGroups);\n        this.loadTileGroups(tileGroups);\n\n        this.loadGenerator(\"basic-dungeon\", basicDungeon);\n        this.loadGenerator(\"tutorial\", tutorial);\n    }\n\n    loadEntityGroups(entityGroups) {\n        for (const group of entityGroups) {\n            this.entityGroups.set(group.id, group.entities);\n        }\n    }\n\n    loadItemGroups(itemGroups) {\n        for (const group of itemGroups) {\n            this.itemGroups.set(group.id, group.items);\n        }\n    }\n\n    loadTileGroups(tileGroups) {\n        for (const group of tileGroups) {\n            this.tileGroups.set(group.id, group.tiles);\n        }\n    }\n\n    loadGenerator(name, generator) {\n        this.generators.set(name, generator);\n    }\n\n    getChancesForLevel(name, level) {\n        let chances;\n        const generator = this.generators.get(name);\n        for (const group of generator) {\n            if (group.level > level) {\n                break;\n            }\n\n            chances = group;\n        }\n\n        return chances;\n    }\n\n    getActorForLevel(name, level) {\n        const chances = this.getChancesForLevel(name, level);\n        const actors = chances.actors;\n\n        let actorOrGroup = this.getRandomFromGroup(actors);\n        while (actorOrGroup.group !== undefined) {\n            const actorGroup = this.entityGroups.get(actorOrGroup.group);\n            actorOrGroup = this.getRandomFromGroup(actorGroup);\n        }\n\n        return actorOrGroup.id;\n    }\n\n    getItemForLevel(name, level) {\n        const chances = this.getChancesForLevel(name, level);\n        const items = chances.items;\n\n        let itemOrGroup = this.getRandomFromGroup(items);\n        while (itemOrGroup.group !== undefined) {\n            const itemGroup = this.itemGroups.get(itemOrGroup.group);\n            itemOrGroup = this.getRandomFromGroup(itemGroup);\n        }\n\n        return itemOrGroup.id;\n    }\n\n    getTileForLevel(name, level) {\n        const chances = this.getChancesForLevel(name, level);\n        const tiles = chances.tiles;\n\n        let tileOrGroup = this.getRandomFromGroup(tiles);\n        while (tileOrGroup.group !== undefined) {\n            const tileGroup = this.tileGroups.get(tileOrGroup.group);\n            tileOrGroup = this.getRandomFromGroup(tileGroup);\n        }\n\n        return tileOrGroup.id;\n    }\n\n    getRandomFromGroup(group) {\n        let totalWeight = 0;\n        for (const chance of group) {\n            totalWeight += chance.weight;\n        }\n\n        let returnChance;\n        let currentWeight = 0;\n        const rand = MathUtil.randomNumber(0, totalWeight);\n        for (const chance of group) {\n            currentWeight += chance.weight;\n\n            if (rand < currentWeight) {\n                returnChance = chance;\n                break;\n            }\n        }\n\n        return returnChance;\n    }\n}\n\nconst chanceLoader = new ChanceLoader();\nexport default chanceLoader;","import Room from \"./_Room\";\nimport MathUtil from \"../../../util/MathUtil\";\nimport entityLoader from \"../../../entity/EntityLoader\";\nimport chanceLoader from \"../../mapGeneration/ChanceLoader\";\n\nexport default class RectangularRoom extends Room {\n    constructor(x, y, width, height) {\n        super();\n        this.x1 = x;\n        this.y1 = y;\n        this.x2 = x + width;\n        this.y2 = y + height;\n        this.width = width;\n        this.height = height;\n    }\n\n    getCenterX() {\n        return Math.round((this.x1 + this.x2) / 2);\n    }\n\n    getCenterY() {\n        return Math.round((this.y1 + this.y2) / 2);\n    }\n\n    intersects(otherRoom) {\n        return this.x1 <= otherRoom.x2\n            && this.x2 >= otherRoom.x1\n            && this.y1 <= otherRoom.y2\n            && this.y2 >= otherRoom.y1;\n    }\n\n    createRoom(gameMap) {\n        const left = Math.max(0, this.x1);\n        const right = Math.min(gameMap.width, this.x2 + 1);\n        const top = Math.max(0, this.y1);\n        const bottom = Math.min(gameMap.height, this.y2 + 1);\n\n        const floorEntity = entityLoader.createFromTemplate(\"floor\", {components: {position: {x: 0, y: 0}}});\n        const floorEntityCenter = entityLoader.createFromTemplate(\"floor_center\", {components: {position: {x: 0, y: 0}}});\n        const floorEntityCracked = entityLoader.createFromTemplate(\"floor_cracked\", {components: {position: {x: 0, y: 0}}});\n        const wallEntity = entityLoader.createFromTemplate(\"wall\", {components: {position: {x: 0, y: 0}}});\n        for (let i = left; i < right; i++) {\n            for (let j = top; j < bottom; j++) {\n                let floor;\n                const rand = Math.random();\n                if (rand < .06) {\n                    floor = floorEntityCracked.clone();\n                } else if (rand < .1) {\n                    floor = floorEntityCenter.clone();\n                } else {\n                    floor = floorEntity.clone();\n                }\n                floor.getComponent(\"position\").moveTo(i, j);\n                gameMap.tiles[i][j] = floor;\n\n                const isVerticalEdge = (i === this.x1 || i === this.x2) && j >= this.y1 && j <= this.y2;\n                const isHorizontalEdge = (j === this.y1 || j === this.y2) && i >= this.x1 && i <= this.x2;\n                const wallTile = gameMap.tiles[i][j];\n                if (isHorizontalEdge || isVerticalEdge) {\n                    if (!wallTile) {\n                        const wall = wallEntity.clone();\n                        wall.getComponent(\"position\").moveTo(i, j);\n                        gameMap.tiles[i][j] = wall;\n                    }\n                }\n            }\n        }\n    }\n\n    placeTiles(gameMap, name, level, min, max) {\n        const numTiles = MathUtil.randomInt(min, max);\n        for (let i = 0; i < numTiles; i++) {\n            const x = MathUtil.randomInt(this.x1 + 1, this.x2 - 1);\n            const y = MathUtil.randomInt(this.y1 + 1, this.y2 - 1);\n\n            const blockingActor = gameMap.getBlockingActorAtLocation(x, y);\n            if (!blockingActor) {\n                const position = {components: {position: {x: x, y: y}}};\n\n                const tiledId = chanceLoader.getTileForLevel(name, level);\n                gameMap.tiles[x][y] = entityLoader.createFromTemplate(tiledId, position);\n            }\n        }\n    }\n\n    placeEntities(gameMap, name, level, min, max) {\n        const numMonsters = MathUtil.randomInt(min, max);\n        for (let i = 0; i < numMonsters; i++) {\n            const x = MathUtil.randomInt(this.x1 + 1, this.x2 - 1);\n            const y = MathUtil.randomInt(this.y1 + 1, this.y2 - 1);\n\n            const blockingActor = gameMap.getBlockingActorAtLocation(x, y);\n            if (!blockingActor) {\n                const position = {components: {position: {x: x, y: y}}};\n\n                const actorId = chanceLoader.getActorForLevel(name, level);\n                const actor = entityLoader.createFromTemplate(actorId, position);\n\n                gameMap.addActor(actor);\n            }\n        }\n    }\n\n    placeItems(gameMap, name, level, maxItems) {\n        const numItems = MathUtil.randomInt(0, maxItems);\n        for (let i = 0; i < numItems; i++) {\n            const x = MathUtil.randomInt(this.x1 + 1, this.x2 - 1);\n            const y = MathUtil.randomInt(this.y1 + 1, this.y2 - 1);\n\n            const position = {components: {position: {x: x, y: y}}};\n            const itemId = chanceLoader.getItemForLevel(name, level);\n            const item = entityLoader.createFromTemplate(itemId, position);\n\n            gameMap.items.push(item);\n        }\n        //\n        // const numGoldItems = MathUtil.randomInt(0, maxItems);\n        // for (let i = 0; i < numGoldItems; i++) {\n        //     const x = MathUtil.randomInt(this.x1 + 1, this.x2 -1);\n        //     const y = MathUtil.randomInt(this.y1 + 1, this.y2 -1);\n        //     const amount = MathUtil.randomInt(1, 25);\n        //\n        //     const position = {amount: amount, components: {position: {x: x, y: y}}};\n        //     const item = entityLoader.createFromTemplate(\"gold\", position);\n        //\n        //     engine.gameMap.items.push(item);\n        // }\n    }\n}","import GameMap from \"./GameMap\";\nimport entityLoader from \"../../entity/EntityLoader\";\nimport MathUtil from \"../../util/MathUtil\";\n//import MapGeneration from \"../mapGeneration/MapGeneration\";\nimport RectangularRoom from \"./room/RectangularRoom\";\n\nexport default class BasicDungeon extends GameMap {\n    constructor(width, height, args = {}) {\n        const level = args.level || 1;\n        const name = \"basic-dungeon-\" + level;\n        const displayName = \"Dungeon Level \" + level;\n        super(name, displayName, width, height);\n\n        this.maxRooms = args.maxRooms || 1;\n        this.roomMinSize = args.roomMinSize || 8;\n        this.roomMaxSize = args.roomMaxSize || 8;\n        this.level = level;\n\n        this.minTilesByFloor = [\n            {level: 1, amount: 2},\n            {level: 4, amount: 3},\n            {level: 7, amount: 4}\n        ];\n        this.maxTilesByFloor = [\n            {level: 1, amount: 4},\n            {level: 4, amount: 6},\n            {level: 7, amount: 8}\n        ];\n        this.minMonstersByFloor = [\n            {level: 1, amount: 0},\n            {level: 4, amount: 1},\n            {level: 7, amount: 2}\n        ];\n        this.maxMonstersByFloor = [\n            {level: 1, amount: 2},\n            {level: 4, amount: 3},\n            {level: 7, amount: 4}\n        ];\n        this.minItemsByFloor = [\n            {level: 1, amount: 0},\n            {level: 4, amount: 1},\n            {level: 6, amount: 2}\n        ];\n        this.maxItemsByFloor = [\n            {level: 1, amount: 2},\n            {level: 4, amount: 3},\n            {level: 6, amount: 5}\n        ];\n    }\n\n    getFloorAmount(weights) {\n        let amount = 0;\n        for (const weight of weights) {\n            if (weight.level > this.level) {\n                break;\n            }\n\n            amount = weight.amount;\n        }\n\n        return amount;\n    }\n\n    save() {\n        // if (engine.gameMap !== this && this.saveCache) {\n        //     return this.saveCache;\n        // }\n\n        const saveJson = super.save();\n        if (this.level !== 1) {\n            saveJson.level = this.level;\n        }\n\n        this.saveCache = saveJson;\n        return saveJson;\n    }\n\n    create(previousMapName, stairsInteractable) {\n        super.create();\n\n        //const floorEntity = entityLoader.createFromTemplate(\"floor\", {components: {position: {x: 0, y: 0}}});\n        const wallEntity = entityLoader.createFromTemplate(\"wall\", {components: {position: {x: 0, y: 0}}});\n        // Pre-fill with floor and walls\n        for (let j = 0; j < this.height; j++) {\n            for (let i = 0; i < this.width; i++) {\n                const floor = wallEntity.clone();\n                floor.getComponent(\"position\").moveTo(i, j);\n                this.tiles[i][j] = floor;\n            }\n        }\n\n        const rooms = [];\n        for (let i = 0; i < this.maxRooms; i++) {\n            const roomWidth = MathUtil.randomInt(this.roomMinSize, this.roomMaxSize);\n            const roomHeight = MathUtil.randomInt(this.roomMinSize, this.roomMaxSize);\n\n            let x = 10 * i + 1;\n            let y = 1;\n\n            if (i >= (this.maxRooms / 2)) {\n                y = 11;\n                x -= 30;\n            }\n\n            const newRoom = new RectangularRoom(x, y, roomWidth, roomHeight);\n            let intersectsOtherRoom = false;\n            for (const room of rooms) {\n                if (newRoom.intersects(room)) {\n                    intersectsOtherRoom = true;\n                    break;\n                }\n            }\n\n            if (intersectsOtherRoom) {\n                continue;\n            }\n\n            newRoom.createRoom(this);\n\n            if (rooms.length === 0) {\n                const centerX = newRoom.getCenterX();\n\n                if (stairsInteractable) {\n                    stairsInteractable.setPosition(centerX, 0);\n                }\n\n                this.tiles[centerX][0] = entityLoader.createFromTemplate(\"stairs_up\", {components: {position: {x: centerX, y: 0}}});\n\n                const stairsDownX = MathUtil.randomInt(newRoom.x1 + 2, newRoom.x2 - 2);\n                const stairsDownY = MathUtil.randomInt(newRoom.y1 + 2, newRoom.y2 - 2);\n                this.tiles[stairsDownX][stairsDownY] = entityLoader.createFromTemplate(\"stairs_down\", {components: {position: {x: stairsDownX, y: stairsDownY}, stairsInteractable: {generator: \"basic-dungeon\"}}});\n\n                let trapDoorX = stairsDownX;\n                let trapDoorY = stairsDownY;\n\n                while (trapDoorX === stairsDownX && trapDoorY === stairsDownY) {\n                    trapDoorX = MathUtil.randomInt(newRoom.x1 + 2, newRoom.x2 - 2);\n                    trapDoorY = MathUtil.randomInt(newRoom.y1 + 2, newRoom.y2 - 2);\n\n                    if (trapDoorX !== stairsDownX || trapDoorY !== stairsDownY) {\n                        this.tiles[trapDoorX][trapDoorY] = entityLoader.createFromTemplate(\"trap_door\", {components: {position: {x: trapDoorX, y: trapDoorY}, trapDoorInteractable: {generator: \"shop\"}}});\n                    }\n                }\n                // if (engine.player) {\n                //     const playerPosition = engine.player.getComponent(\"position\");\n                //     if (playerPosition) {\n                //         this.tiles[centerX][centerY] = entityLoader.createFromTemplate(\"stairs_north\", {components: {position: {x: centerX, y: centerY}, stairsInteractable: {map: previousMapName, x: playerPosition.x, y: playerPosition.y}}});\n                //     }\n                // } else {\n                //     this.tiles[centerX][centerY] = entityLoader.createFromTemplate(\"stairs_north\", {components: {position: {x: centerX, y: centerY}, stairsInteractable: {map: \"town\", x: 31, y: 31}}});\n                // }\n            } else {\n                //const lastRoom = rooms[rooms.length - 1];\n                //MapGeneration.tunnelBetween(this, lastRoom.getCenterX(), lastRoom.getCenterY(), newRoom.getCenterX(), newRoom.getCenterY());\n            }\n\n            rooms.push(newRoom);\n        }\n\n        // const lastRoom = rooms[rooms.length - 1];\n        // const lastRoomCenterX = lastRoom.getCenterX();\n        // const lastRoomCenterY = lastRoom.getCenterY();\n        //this.tiles[lastRoomCenterX][lastRoomCenterY] = entityLoader.createFromTemplate(\"stairs_north\", {components: {position: {x: lastRoomCenterX, y: lastRoomCenterY}, stairsInteractable: {generator: \"basic-dungeon\"}}});\n\n        for (const room of rooms) {\n            room.placeTiles(this, \"basic-dungeon\", this.level, this.getFloorAmount(this.minTilesByFloor), this.getFloorAmount(this.maxTilesByFloor));\n            room.placeEntities(this, \"basic-dungeon\", this.level, this.getFloorAmount(this.minMonstersByFloor), this.getFloorAmount(this.maxMonstersByFloor));\n            room.placeItems(this, \"basic-dungeon\", this.level, this.getFloorAmount(this.minItemsByFloor), this.getFloorAmount(this.maxItemsByFloor));\n        }\n    }\n}","import GameMap from \"./GameMap\";\nimport entityLoader from \"../../entity/EntityLoader\";\nimport MathUtil from \"../../util/MathUtil\";\n//import MapGeneration from \"../mapGeneration/MapGeneration\";\nimport RectangularRoom from \"./room/RectangularRoom\";\n\nexport default class Shop extends GameMap {\n    constructor(width, height, args = {}) {\n        const level = args.level || 1;\n        const name = \"shop-\" + level;\n        const displayName = \"Shop\";\n        super(name, displayName, width, height);\n\n        this.maxRooms = args.maxRooms || 1;\n        this.roomMinSize = args.roomMinSize || 8;\n        this.roomMaxSize = args.roomMaxSize || 8;\n        this.level = level;\n\n        this.minMonstersByFloor = [\n            {level: 1, amount: 2}\n        ];\n        this.maxMonstersByFloor = [\n            {level: 1, amount: 2}\n        ];\n        this.minItemsByFloor = [\n            {level: 1, amount: 2}\n        ];\n        this.maxItemsByFloor = [\n            {level: 1, amount: 2}\n        ];\n    }\n\n    getFloorAmount(weights) {\n        let amount = 0;\n        for (const weight of weights) {\n            if (weight.level > this.level) {\n                break;\n            }\n\n            amount = weight.amount;\n        }\n\n        return amount;\n    }\n\n    save() {\n        // if (engine.gameMap !== this && this.saveCache) {\n        //     return this.saveCache;\n        // }\n\n        const saveJson = super.save();\n        if (this.level !== 1) {\n            saveJson.level = this.level;\n        }\n\n        this.saveCache = saveJson;\n        return saveJson;\n    }\n\n    create(previousMapName, stairsInteractable) {\n        super.create();\n\n        const wallEntity = entityLoader.createFromTemplate(\"wall\", {components: {position: {x: 0, y: 0}}});\n        // Pre-fill with floor and walls\n        for (let j = 0; j < this.height; j++) {\n            for (let i = 0; i < this.width; i++) {\n                const floor = wallEntity.clone();\n                floor.getComponent(\"position\").moveTo(i, j);\n                this.tiles[i][j] = floor;\n            }\n        }\n\n        const rooms = [];\n        for (let i = 0; i < this.maxRooms; i++) {\n            const roomWidth = MathUtil.randomInt(this.roomMinSize, this.roomMaxSize);\n            const roomHeight = MathUtil.randomInt(this.roomMinSize, this.roomMaxSize);\n\n            const newRoom = new RectangularRoom(1, 1, roomWidth, roomHeight);\n\n            newRoom.createRoom(this);\n\n            if (rooms.length === 0) {\n                const centerX = newRoom.getCenterX();\n                const centerY = newRoom.getCenterY();\n\n                if (stairsInteractable) {\n                    stairsInteractable.setPosition(centerX, centerY);\n                }\n\n                this.tiles[centerX][centerY] = entityLoader.createFromTemplate(\"stairs_down\", {components: {position: {x: centerX, y: centerY}, stairsInteractable: {generator: \"basic-dungeon\"}}});\n\n\n                for (let i = newRoom.x1 + 2; i < newRoom.x2 - 1; i++) {\n                    this.tiles[i][3] = entityLoader.createFromTemplate(\"table\", {components: {position: {x: i, y: 3}}});\n                    this.tiles[i][7] = entityLoader.createFromTemplate(\"table\", {components: {position: {x: i, y: 7}}});\n                }\n\n                // if (engine.player) {\n                //     const playerPosition = engine.player.getComponent(\"position\");\n                //     if (playerPosition) {\n                //         this.tiles[centerX][centerY] = entityLoader.createFromTemplate(\"stairs_north\", {components: {position: {x: centerX, y: centerY}, stairsInteractable: {map: previousMapName, x: playerPosition.x, y: playerPosition.y}}});\n                //     }\n                // } else {\n                //     this.tiles[centerX][centerY] = entityLoader.createFromTemplate(\"stairs_north\", {components: {position: {x: centerX, y: centerY}, stairsInteractable: {map: \"town\", x: 31, y: 31}}});\n                // }\n                //\n                // this.addPlayer(centerX, centerY);\n                // const hero = entityLoader.createFromTemplate(\"hero\");\n                // this.addActor(hero);\n            } else {\n                //const lastRoom = rooms[rooms.length - 1];\n                //MapGeneration.tunnelBetween(this, lastRoom.getCenterX(), lastRoom.getCenterY(), newRoom.getCenterX(), newRoom.getCenterY());\n            }\n\n            rooms.push(newRoom);\n        }\n\n        // const lastRoom = rooms[rooms.length - 1];\n        // const lastRoomCenterX = lastRoom.getCenterX();\n        // const lastRoomCenterY = lastRoom.getCenterY();\n        //this.tiles[lastRoomCenterX][lastRoomCenterY] = entityLoader.createFromTemplate(\"stairs_north\", {components: {position: {x: lastRoomCenterX, y: lastRoomCenterY}, stairsInteractable: {generator: \"basic-dungeon\"}}});\n\n        // for (const room of rooms) {\n        //     room.placeEntities(this, \"tutorial\", this.level, this.getFloorAmount(this.minMonstersByFloor), this.getFloorAmount(this.maxMonstersByFloor));\n        //     room.placeItems(this, \"tutorial\", this.level, this.getFloorAmount(this.minItemsByFloor), this.getFloorAmount(this.maxItemsByFloor));\n        // }\n    }\n}","import BasicDungeon from \"./tile/BasicDungeon\";\nimport Shop from \"./tile/Shop\";\n\nexport default class MapLoader {\n    constructor() {}\n\n    loadMap(mapType, args = {}) {\n        switch(mapType) {\n            case \"basic-dungeon\":\n                return new BasicDungeon(11, 11, args);\n            case \"shop\":\n                return new Shop(11, 11, args);\n            default:\n                return null;\n        }\n    }\n}","import NoAction from \"./actions/NoAction\";\nimport UnableToPerformAction from \"./actions/UnableToPerformAction\";\nimport messageManager from \"./message/MessageManager\";\nimport viewInfo from \"./ui/ViewInfo\";\nimport TextureManager from \"./sprite/TextureManager\";\nimport SpriteManager from \"./sprite/SpriteManager\";\nimport placeholderTexture from \"../img/placeholder.gif\";\nimport playerTexture from \"../img/player.gif\";\nimport scribbleTexture from \"../img/kenney/scribble.png\";\nimport scribbleJson from \"../img/kenney/scribble.json\";\nimport websTexture from \"../img/electronsandsuch/webs.png\";\nimport websJson from \"../img/electronsandsuch/webs.json\";\nimport rlTilesTexture from \"../img/rltiles/rltiles-2d-2x.png\";\nimport rltilesJson from \"../img/rltiles/rltiles-2d-2x.json\";\nimport mapTexture from \"../img/cron/parchment_square.png\";\nimport MapLoader from \"./map/MapLoader\";\n//import GameMap from \"./map/tile/GameMap\";\n\nclass Engine {\n    constructor() {\n        this.eventHandler = null;\n        this.player = null;\n        //this.gameMap = null;\n\n        this.gameMaps = new Map();\n        this.playerMap = null;\n\n        this.heroMap = null;\n        this.nextMap = null;\n        this.futureMap = null;\n        this.shopMap = null;\n        this.needsRenderUpdate = false;\n\n        this.textureManager = null;\n        this.spriteManager = null;\n\n        this.scale = 1;\n\n        this.mapLoader = new MapLoader();\n    }\n\n    initTextures() {\n        this.textureManager = new TextureManager();\n        this.textureManager.addTexture(\"sprites\", placeholderTexture);\n        this.textureManager.addTexture(\"player\", playerTexture);\n        this.textureManager.addTexture(\"scribble\", scribbleTexture);\n        this.textureManager.addTexture(\"rltiles\", rlTilesTexture);\n        this.textureManager.addTexture(\"webs\", websTexture);\n        this.textureManager.addTexture(\"map\", mapTexture);\n\n        this.spriteManager = new SpriteManager();\n        this.spriteManager.addImage(\"placeholder\", \"sprites\", 0, 0);\n        this.spriteManager.addImage(\"map\", \"map\", 0, 0, 704, 704);\n        this.textureManager.loadJson(\"rltiles\", rltilesJson);\n        this.textureManager.loadJson(\"scribble\", scribbleJson);\n        this.textureManager.loadJson(\"webs\", websJson);\n    }\n\n    handleEvents() {\n        this.processAction(this.eventHandler.handleInput());\n    }\n\n    processAction(action) {\n        if (action && this.eventHandler.isPlayerTurn) {\n            const performedAction = action.perform(engine.playerMap);\n            if (performedAction instanceof NoAction) {\n                return false;\n            }\n\n            if (performedAction instanceof UnableToPerformAction) {\n                if (performedAction.reason) {\n                    messageManager.text(performedAction.reason).build();\n                }\n                return false;\n            } else {\n                engine.needsRenderUpdate = true;\n                engine.player.fov.compute(engine.playerMap, engine.player, 5);\n                engine.player.fov.updateMap();\n                viewInfo.updatePlayerDetails(this.player, this.playerMap);\n\n                this.handleEnemyTurns();\n\n                return true;\n            }\n        }\n    }\n\n    handleEnemyTurns() {\n        this.eventHandler.isPlayerTurn = false;\n\n        for (const actor of this.heroMap.actors) {\n            if (actor !== this.player) {\n                const ai = actor.getComponent(\"ai\");\n                if (ai) {\n                    ai.perform(this.heroMap);\n                }\n            }\n        }\n\n        if (this.shopMap) {\n            for (const actor of this.shopMap.actors) {\n                if (actor !== this.player) {\n                    const ai = actor.getComponent(\"ai\");\n                    if (ai) {\n                        ai.perform(this.shopMap);\n                    }\n                }\n            }\n        }\n\n        if (this.nextMap) {\n            for (const actor of this.nextMap.actors) {\n                if (actor !== this.player) {\n                    const ai = actor.getComponent(\"ai\");\n                    if (ai) {\n                        ai.perform(this.nextMap);\n                    }\n                }\n            }\n        }\n\n        if (this.futureMap) {\n            for (const actor of this.futureMap.actors) {\n                if (actor !== this.player) {\n                    const ai = actor.getComponent(\"ai\");\n                    if (ai) {\n                        ai.perform(this.futureMap);\n                    }\n                }\n            }\n        }\n\n        this.eventHandler.isPlayerTurn = true;\n    }\n\n    clearMaps() {\n        this.player = null;\n        this.gameMaps = new Map();\n    }\n\n    setHeroMap(map) {\n        const previousMap = this.heroMap;\n        if (previousMap === map) {\n            return;\n        }\n\n        // if (previousMap) {\n        //     previousMap.teardown();\n        //     previousMap.removeActor(this.player);\n        // }\n\n        this.heroMap = map;\n        this.addMap(map);\n        if (previousMap) {\n            previousMap.save();\n        }\n        map.save();\n        // if (this.player && this.heroMap.actors.indexOf(this.player) === -1) {\n        //     this.heroMap.actors.push(this.player);\n        // }\n\n        this.heroMap.updatePlayerUI();\n        this.needsRenderUpdate = true;\n    }\n\n    setNextMap(map) {\n        const previousMap = this.nextMap;\n        if (previousMap === map) {\n            return;\n        }\n\n        // if (previousMap) {\n        //     previousMap.teardown();\n        //     previousMap.removeActor(this.player);\n        // }\n\n        this.nextMap = map;\n        this.addMap(map);\n        if (previousMap) {\n            previousMap.save();\n        }\n        map.save();\n        // if (this.player && this.nextMap.actors.indexOf(this.player) === -1) {\n        //     this.nextMap.actors.push(this.player);\n        // }\n\n        this.nextMap.updatePlayerUI();\n        this.needsRenderUpdate = true;\n    }\n\n    setFutureMap(map) {\n        const previousMap = this.futureMap;\n        if (previousMap === map) {\n            return;\n        }\n\n        // if (previousMap) {\n        //     previousMap.teardown();\n        //     previousMap.removeActor(this.player);\n        // }\n\n        this.futureMap = map;\n        this.addMap(map);\n        if (previousMap) {\n            previousMap.save();\n        }\n        map.save();\n        // if (this.player && this.futureMap.actors.indexOf(this.player) === -1) {\n        //     this.futureMap.actors.push(this.player);\n        // }\n\n        this.futureMap.updatePlayerUI();\n        this.needsRenderUpdate = true;\n    }\n\n    setShopMap(map) {\n        const previousMap = this.playerMap;\n        if (previousMap === map) {\n            return;\n        }\n\n        if (previousMap) {\n            //previousMap.teardown();\n            previousMap.removeActor(this.player);\n        }\n\n        this.playerMap = map;\n        this.shopMap = map;\n        this.addMap(map);\n        if (previousMap) {\n            previousMap.save();\n        }\n        map.save();\n        if (this.player && this.shopMap.actors.indexOf(this.player) === -1) {\n            this.shopMap.actors.push(this.player);\n            const position = this.player.getComponent(\"position\");\n            position.moveTo(5, 5);\n\n        }\n\n        this.shopMap.updatePlayerUI();\n        this.needsRenderUpdate = true;\n    }\n\n\n    getMap(mapName) {\n        return this.gameMaps.get(mapName);\n    }\n\n    addMap(map) {\n        if (!this.gameMaps.has(map.name)) {\n            this.gameMaps.set(map.name, map);\n        }\n    }\n\n    draw() {\n        this.heroMap.draw();\n        if (this.nextMap) {\n            this.nextMap.draw(0, 11);\n        }\n\n        if (this.futureMap) {\n            this.futureMap.draw(11, 11);\n        }\n\n\n        if (this.shopMap) {\n            this.shopMap.draw(22, 0);\n        }\n    }\n\n    save(name) {\n        const maps = [];\n        for (const map of this.gameMaps.values()) {\n            maps.push(map.save());\n        }\n\n        const saveJson = {\n            \"name\": name,\n            \"date\": new Date(),\n            \"playerMap\": this.playerMap.name,\n            \"heroMap\": this.heroMap.name,\n            \"nextMap\": this.nextMap.name,\n            \"shopMap\": this.shopMap.name,\n            \"maps\": maps\n        };\n\n        localStorage.setItem(name, JSON.stringify(saveJson));\n    }\n\n    load(/*name*/) {\n        // this.clearMaps();\n        // const loadData = localStorage.getItem(name);\n        // if (loadData) {\n        //     const json = JSON.parse(loadData);\n        //     const heroMap = json.heroMap;\n        //     const nextMap = json.nextMap;\n        //     const shopMap = json.shopMap;\n        //     for (const map of json.maps) {\n        //         const newMap = new GameMap(map.name, map.width, map.height);\n        //         newMap.load(map);\n        //         this.addMap(newMap);\n        //\n        //         for (const actor of newMap.actors) {\n        //             if (actor.name === \"Player\") {\n        //                 this.player = actor;\n        //                 break;\n        //             }\n        //         }\n        //\n        //         if (newMap.name === heroMap) {\n        //             this.setHeroMap(newMap);\n        //         } else if (newMap.name === nextMap) {\n        //             this.setNextMap(newMap);\n        //         } else if (newMap.name === shopMap) {\n        //             this.setShopMap(newMap);\n        //         }\n        //     }\n        // }\n    }\n\n    isPlayer(entity) {\n        return entity === this.player;\n    }\n}\n\nconst engine = new Engine();\nexport default engine;","import _EventHandler from \"./_EventHandler\";\nimport controls from \"../controls/Controls\";\nimport BumpAction from \"../actions/actionWithDirection/BumpAction\";\nimport engine from \"../Engine\";\nimport WaitAction from \"../actions/WaitAction\";\nimport InteractAction from \"../actions/InteractAction\";\n// import HexUtil from \"../util/HexUtil\";\n// import viewInfo from \"../ui/ViewInfo\";\n\nexport default class DefaultPlayerEventHandler extends _EventHandler {\n    constructor() {\n        super();\n    }\n\n    teardown() {\n        super.teardown();\n    }\n\n    handleInput() {\n        let action = null;\n\n        if (this.isPlayerTurn && engine.player.isAlive()) {\n            if (controls.testPressed(\"up\")) {\n                action = new BumpAction(engine.player, 0, -1);\n            } else if (controls.testPressed(\"down\")) {\n                action = new BumpAction(engine.player, 0, 1);\n            } else if (controls.testPressed(\"left\")) {\n                action = new BumpAction(engine.player, -1, 0);\n            } else if (controls.testPressed(\"right\")) {\n                action = new BumpAction(engine.player, 1, 0);\n            } else if (controls.testPressed(\"nw\")) {\n                action = new BumpAction(engine.player, -1, -1);\n            } else if (controls.testPressed(\"ne\")) {\n                action = new BumpAction(engine.player, 1, -1);\n            } else if (controls.testPressed(\"sw\")) {\n                action = new BumpAction(engine.player, -1, 1);\n            } else if (controls.testPressed(\"se\")) {\n                action = new BumpAction(engine.player, 1, 1);\n            } else if (controls.testPressed(\"wait\")) {\n                action = new WaitAction(engine.player);\n            } else if (controls.testPressed(\"confirm\")) {\n                action = new InteractAction(engine.player);\n            }\n        }\n\n        return action;\n    }\n\n    onMouseMove(e) {\n        this.mouse.x = e.clientX;\n        this.mouse.y = e.clientY;\n\n        // const hex = HexUtil.pixelToHex(this.mouse);\n        // const tile = engine.gameMap.getTileFromHexCoords(hex.q, hex.r);\n        // if (tile) {\n        //     if (this.targetedTile !== tile) {\n        //         for (const pathTile of this.pathTiles) {\n        //             pathTile.highlighted = false;\n        //         }\n        //         if (this.targetedTile) {\n        //             this.targetedTile.highlighted = false;\n        //         }\n        //\n        //         tile.highlighted = true;\n        //         this.targetedTile = tile;\n        //\n        //         const tileFov = tile.getComponent(\"fov\");\n        //         if (tileFov && tileFov.isVisible()) {\n        //             const costGraph = engine.player.fov.getCostGraph();\n        //             const playerHex = engine.player.getComponent(\"hex\");\n        //             const tileHex = tile.getComponent(\"hex\");\n        //             const path = engine.player.fov.getPath(costGraph, playerHex, tileHex);\n        //             for (const pathNode of path) {\n        //                 const newRow = pathNode.row + engine.player.fov.left;\n        //                 const newCol = pathNode.col + engine.player.fov.top;\n        //\n        //                 const pathNodeTile = engine.gameMap.getTileFromArrayCoords(newRow, newCol);\n        //                 pathNodeTile.highlighted = true;\n        //                 this.pathTiles.push(pathNodeTile);\n        //             }\n        //         }\n        //\n        //         viewInfo.updatePositionDetails(tile);\n        //     }\n        // }\n\n        engine.needsRenderUpdate = true;\n    }\n}","import GameMap from \"./GameMap\";\nimport entityLoader from \"../../entity/EntityLoader\";\nimport MathUtil from \"../../util/MathUtil\";\n//import MapGeneration from \"../mapGeneration/MapGeneration\";\nimport RectangularRoom from \"./room/RectangularRoom\";\n\nexport default class Tutorial extends GameMap {\n    constructor(width, height, args = {}) {\n        const level = args.level || 1;\n        const name = \"tutorial-\" + level;\n        const displayName = \"Dungeon Entry\";\n        super(name, displayName, width, height);\n\n        this.maxRooms = args.maxRooms || 1;\n        this.roomMinSize = args.roomMinSize || 8;\n        this.roomMaxSize = args.roomMaxSize || 8;\n        this.level = level;\n\n        this.minTilesByFloor = [\n            {level: 1, amount: 3}\n        ];\n        this.maxTilesByFloor = [\n            {level: 1, amount: 3}\n        ];\n        this.minMonstersByFloor = [\n            {level: 1, amount: 2}\n        ];\n        this.maxMonstersByFloor = [\n            {level: 1, amount: 2}\n        ];\n        this.minItemsByFloor = [\n            {level: 1, amount: 2}\n        ];\n        this.maxItemsByFloor = [\n            {level: 1, amount: 2}\n        ];\n\n        this.explored = true;\n    }\n\n    getFloorAmount(weights) {\n        let amount = 0;\n        for (const weight of weights) {\n            if (weight.level > this.level) {\n                break;\n            }\n\n            amount = weight.amount;\n        }\n\n        return amount;\n    }\n\n    save() {\n        // if (engine.gameMap !== this && this.saveCache) {\n        //     return this.saveCache;\n        // }\n\n        const saveJson = super.save();\n        if (this.level !== 1) {\n            saveJson.level = this.level;\n        }\n\n        this.saveCache = saveJson;\n        return saveJson;\n    }\n\n    create(previousMapName, stairsInteractable) {\n        super.create();\n\n        const wallEntity = entityLoader.createFromTemplate(\"wall\", {components: {position: {x: 0, y: 0}}});\n        // Pre-fill with floor and walls\n        for (let j = 0; j < this.height; j++) {\n            for (let i = 0; i < this.width; i++) {\n                const floor = wallEntity.clone();\n                floor.getComponent(\"position\").moveTo(i, j);\n                this.tiles[i][j] = floor;\n            }\n        }\n\n        const rooms = [];\n        for (let i = 0; i < this.maxRooms; i++) {\n            const roomWidth = MathUtil.randomInt(this.roomMinSize, this.roomMaxSize);\n            const roomHeight = MathUtil.randomInt(this.roomMinSize, this.roomMaxSize);\n\n            const newRoom = new RectangularRoom(1, 1, roomWidth, roomHeight);\n\n            newRoom.createRoom(this);\n\n            if (rooms.length === 0) {\n                const centerX = newRoom.getCenterX();\n                const centerY = newRoom.getCenterY();\n\n                if (stairsInteractable) {\n                    stairsInteractable.setPosition(centerX, 0);\n                }\n\n                this.tiles[centerX][0] = entityLoader.createFromTemplate(\"stairs_up\", {components: {position: {x: centerX, y: 0}}});\n\n                const stairsDownX = MathUtil.randomInt(newRoom.x1 + 2, newRoom.x2 - 2);\n                const stairsDownY = MathUtil.randomInt(newRoom.y1 + 2, newRoom.y2 - 2);\n                this.tiles[stairsDownX][stairsDownY] = entityLoader.createFromTemplate(\"stairs_down\", {components: {position: {x: stairsDownX, y: stairsDownY}, stairsInteractable: {generator: \"basic-dungeon\"}}});\n\n                let trapDoorX = stairsDownX;\n                let trapDoorY = stairsDownY;\n\n                while (trapDoorX === stairsDownX && trapDoorY === stairsDownY) {\n                    trapDoorX = MathUtil.randomInt(newRoom.x1 + 2, newRoom.x2 - 2);\n                    trapDoorY = MathUtil.randomInt(newRoom.y1 + 2, newRoom.y2 - 2);\n\n                    if (trapDoorX !== stairsDownX || trapDoorY !== stairsDownY) {\n                        this.tiles[trapDoorX][trapDoorY] = entityLoader.createFromTemplate(\"trap_door\", {components: {position: {x: trapDoorX, y: trapDoorY}, trapDoorInteractable: {generator: \"shop\"}}});\n                    }\n                }\n\n                // if (engine.player) {\n                //     const playerPosition = engine.player.getComponent(\"position\");\n                //     if (playerPosition) {\n                //         this.tiles[centerX][centerY] = entityLoader.createFromTemplate(\"stairs_north\", {components: {position: {x: centerX, y: centerY}, stairsInteractable: {map: previousMapName, x: playerPosition.x, y: playerPosition.y}}});\n                //     }\n                // } else {\n                //     this.tiles[centerX][centerY] = entityLoader.createFromTemplate(\"stairs_north\", {components: {position: {x: centerX, y: centerY}, stairsInteractable: {map: \"town\", x: 31, y: 31}}});\n                // }\n\n                this.addPlayer(centerX, centerY);\n                const hero = entityLoader.createFromTemplate(\"hero\");\n                this.addActor(hero);\n            } else {\n                //const lastRoom = rooms[rooms.length - 1];\n                //MapGeneration.tunnelBetween(this, lastRoom.getCenterX(), lastRoom.getCenterY(), newRoom.getCenterX(), newRoom.getCenterY());\n            }\n\n            rooms.push(newRoom);\n        }\n\n        // const lastRoom = rooms[rooms.length - 1];\n        // const lastRoomCenterX = lastRoom.getCenterX();\n        // const lastRoomCenterY = lastRoom.getCenterY();\n        //this.tiles[lastRoomCenterX][lastRoomCenterY] = entityLoader.createFromTemplate(\"stairs_north\", {components: {position: {x: lastRoomCenterX, y: lastRoomCenterY}, stairsInteractable: {generator: \"basic-dungeon\"}}});\n\n        for (const room of rooms) {\n            room.placeTiles(this, \"tutorial\", this.level, this.getFloorAmount(this.minTilesByFloor), this.getFloorAmount(this.maxTilesByFloor));\n            room.placeEntities(this, \"tutorial\", this.level, this.getFloorAmount(this.minMonstersByFloor), this.getFloorAmount(this.maxMonstersByFloor));\n            room.placeItems(this, \"tutorial\", this.level, this.getFloorAmount(this.minItemsByFloor), this.getFloorAmount(this.maxItemsByFloor));\n        }\n    }\n}","import \"./styles/style.css\";\nimport engine from \"./js/Engine\";\nimport DefaultPlayerEventHandler from \"./js/event/DefaultPlayerEventHandler\";\nimport messageManager from \"./js/message/MessageManager\";\nimport entityLoader from \"./js/entity/EntityLoader\";\nimport sceneState from \"./js/SceneState\";\nimport viewInfo from \"./js/ui/ViewInfo\";\nimport Tutorial from \"./js/map/tile/Tutorial\";\nimport BasicDungeon from \"./js/map/tile/BasicDungeon\";\nimport Shop from \"./js/map/tile/Shop\";\n\n(function () {\n    function init() {\n        engine.clearMaps();\n        engine.initTextures();\n        sceneState.resizeCanvas();\n\n        engine.setHeroMap(new Tutorial(11, 11));\n        engine.setNextMap(new BasicDungeon(11, 11, {level: 2}));\n        engine.setFutureMap(new BasicDungeon(11, 11, {level: 3}));\n        engine.setShopMap(new Shop(11, 11));\n\n        engine.player = entityLoader.createFromTemplate(\"player\", {components: {position: {x: 0, y: 0}}});\n\n        // const playerPosition = engine.player.getComponent(\"position\");\n        // let foundPlace = false;\n        // while(!foundPlace) {\n        //     const playerRow = Math.floor(Math.random() * (engine.gameMap.height - 4)) + 2;\n        //     const playerCol = Math.floor(Math.random() * (engine.gameMap.width - 4)) + 2;\n        //     console.log(\"Row: \" + playerRow + \", Col: \" + playerCol);\n        //     const tileX = engine.gameMap.tiles[playerRow];\n        //     if (tileX) {\n        //         console.log(tileX);\n        //         const tile = tileX[playerCol];\n        //\n        //         if (!tile.isWall()) {\n        //             playerPosition.moveTo(playerRow, playerCol);\n        //             foundPlace = true;\n        //         }\n        //     }\n        // }\n\n        engine.heroMap.create();\n        engine.nextMap.create();\n        engine.futureMap.create();\n        engine.shopMap.create();\n\n        engine.playerMap = engine.heroMap;\n\n        engine.eventHandler = new DefaultPlayerEventHandler();\n\n        // const playerFighter = engine.player.getComponent(\"fighter\");\n        // playerFighter.updateUI();\n\n        viewInfo.updatePlayerDetails(engine.player, engine.playerMap);\n        messageManager.text(\"Welcome to the dungeon.\").build();\n\n        engine.needsRenderUpdate = true;\n        const playerPosition = engine.player.getComponent(\"position\");\n        engine.heroMap.revealFromPosition(playerPosition.x.get(), playerPosition.y.get(), 20, 0);\n        engine.player.fov.compute(engine.playerMap, playerPosition.x.get(), playerPosition.y.get(), 5);\n        engine.player.fov.updateMap();\n\n\n        window.requestAnimationFrame(update);\n    }\n\n    function update() {\n        engine.handleEvents();\n\n        if (engine.spriteManager.preloadSprites()) {\n            if (engine.needsRenderUpdate) {\n                render();\n\n                engine.needsRenderUpdate = false;\n            }\n        }\n\n        window.requestAnimationFrame(update);\n    }\n\n    function render() {\n        sceneState.clearAll();\n        engine.draw();\n    }\n\n\n    const preloadEntities = window.setInterval(() => {\n        if (entityLoader.isLoaded()) {\n            clearInterval(preloadEntities);\n            init();\n        }\n    }, 0);\n}());","var map = {\n\t\"./actors/_base.json\": 164,\n\t\"./actors/enemies.json\": 266,\n\t\"./actors/hero.json\": 491,\n\t\"./actors/player.json\": 145,\n\t\"./items/_base.json\": 975,\n\t\"./items/potions.json\": 353,\n\t\"./tiles/_base.json\": 860,\n\t\"./tiles/containers.json\": 362,\n\t\"./tiles/floors.json\": 727,\n\t\"./tiles/shop.json\": 819,\n\t\"./tiles/stairs.json\": 77,\n\t\"./tiles/walls.json\": 329\n};\n\n\nfunction webpackAsyncContext(req) {\n\treturn webpackAsyncContextResolve(req).then(__webpack_require__);\n}\nfunction webpackAsyncContextResolve(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\t\treturn map[req];\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.resolve = webpackAsyncContextResolve;\nwebpackAsyncContext.id = 798;\nmodule.exports = webpackAsyncContext;"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","_Action","constructor","entity","perform","console","error","NoAction","super","UnableToPerformAction","reason","SubMessage","text","color","bold","italics","isEqual","subMessage","Message","subMessages","sub1","sub2","getHtml","messageDom","classList","add","subMessageDom","innerText","getCountHtml","amountDom","_UIElement","html","dom","htmlToElement","template","trim","innerHTML","appendTo","otherDom","isOpen","contains","open","close","messagesInnerDom","getElementsByClassName","updateLastMessageCount","lastMessage","lastMessageDom","querySelectorAll","addMessage","messageHtml","clear","messageManager","messages","builder","build","stack","slice","addNewMessage","newMessage","updatePlayerDetails","player","playerMap","playerPosition","getComponent","tile","tiles","x","get","y","updatePositionDetails","getDetailsLine","isExplored","name","Texture","image","TextureManager","textures","addTexture","src","self","Image","onload","getTexture","textureName","loadJson","json","tileSize","width","row","col","Sprite","imageName","w","h","texture","loadTexture","drawImage","context","j","degrees","save","translate","rotate","Math","PI","restore","SpriteManager","sprites","spritesPreloaded","addImage","getImage","imgName","preloadSprites","numSprites","numLoaded","forEach","sprite","ArrayUtil","static","numRows","array","_Component","rawArgs","baseType","type","args","parentEntity","cachedSave","clearSaveCache","saveJson","arg","hasComponent","components","addArg","setParentComponent","load","Arg","_name","_defaultValue","_value","defaultValue","component","getParentComponent","argJson","set","value","Fov","explored","visible","setExplored","isVisible","setVisible","BaseFov","previousVisibleTiles","visibleTiles","visibleActors","visibleItems","left","right","top","bottom","teardown","compute","gameMap","radius","max","min","height","addVisibleTile","indexOf","addVisibleActor","object","addVisibleItem","exploreTile","tileArrayX","actor","actors","position","isAt","items","updateMap","fov","setComponent","FovSlope","greater","greaterOrEqual","lessOrEqual","AdamMilazzoFov","octant","computeOctant","originX","originY","rangeLimit","topY","bottomY","round","blocksLight","ax","wasOpaque","isOpaque","nx","ny","wallTiles","wallTile","blocksFov","Extend","out","arguments","key","Object","prototype","hasOwnProperty","call","Array","deep","_AI","AIDead","previousAI","statusMessageDom","healthFgDom","healthTextDom","powerDom","defenseDom","inventoryDom","updateStatus","status","updateHealth","current","percent","updatePower","power","updateDefense","defense","updateInventory","Position","moveTo","newX","newY","move","xOffset","yOffset","distanceTo","dx","abs","dy","MathUtil","floor","random","ActionWithDirection","MeleeAction","destX","destY","blockingActor","getBlockingActorAtLocation","entityFighter","blockingFighter","plural","blockingName","attackColor","description","damage","getDamage","getBlockedDamage","takeDamage","callEvent","MovementAction","isInBounds","tileAction","tryMoveTo","blocksMovement","WaitAction","WanderAction","randomInt","BinaryHeap","scoreFunction","sinkDown","pop","end","bubbleUp","node","size","rescoreElement","n","parentN","parent","elemScore","isDone","child2N","child1N","child1Score","swap","child1","child2","AStar","curr","path","unshift","f","graph","start","cleanDirty","heuristicType","heuristic","closest","openHeap","getHeap","closestNode","heuristicManhattan","heuristicDiagonal","markDirty","currentNode","pathTo","closed","neighbors","il","neighbor","isWall","gScore","g","getCost","beenVisited","visited","pos0","pos1","D2","sqrt","d1","d2","GridNode","weight","fromNeighbor","Graph","gridIn","nodes","diagonal","grid","init","dirtyNodes","cleanNode","ret","graphString","rowDebug","CleanAction","cleanableActor","getCleanableActorAtLocation","cleanable","decreasesTo","cleanablePosition","changedEntity","addActor","removeActor","InteractAtAction","interactable","interact","BumpAction","tileX","tileXY","InteractAction","AIHero","chaseLocation","movementActions","currentMovement","turnsToEnterDungeon","updateUIStatus","decreaseTurnsToEnterDungeon","setStatus","newStatus","entityPosition","closestEnemy","getClosestEnemy","closestEnemyPosition","closestStairs","getClosestStairs","closestStairsPosition","moveTowards","closestEnemies","closestDistance","entityFaction","isAlive","actorFaction","isEnemyOf","actorPosition","distance","tilePosition","fovWidth","fovHeight","cost","fill","costGraph","search","lastAction","next","shift","AIMeleeChase","_Interactable","entityInteracted","_EventHandler","mouse","mouseDown","addEventListener","isPlayerTurn","targetedTile","pathTiles","removeEventListener","handleEvent","onMouseMove","onMouseDown","onMouseUp","onLeftClick","onRightClick","onChange","onKeydown","handleInput","defaultDelay","lastShiftUp","treatShiftNumpadEqual","keysDown","keysDelayed","defaults","Map","controls","preventDefault","getModifierState","shiftKey","code","startsWith","keyCode","getKey","endsWith","localStorage","getItem","parse","resetToDefault","setItem","from","entries","setControls","controlsMap","keys","val","clone","isPressed","pressed","defaultKeys","keyToTest","isDelayed","delayed","deleteKey","delay","setTimeout","testPressed","succeeded","_AskUserEventHandler","previousHandler","exit","titleDom","leftOptionsDom","rightOptionsDom","setTitle","title","setOptions","leftOptions","rightOptions","option","li","dataset","moveActiveUp","activeElement","previousElement","previousElementSibling","lastElement","lastElementChild","moveActiveDown","nextElement","nextElementSibling","firstElement","firstElementChild","moveActiveLeftRight","getLeftActiveIndex","parseInt","getRightActiveIndex","_TradeListEventHandler","render","leftItems","rightItems","selectIndex","LootableEventHandler","callback","lootableInteractable","updateTradeOptions","playerInventory","playerInventoryWithEmpties","playerItems","capacity","lootableItemsWithEmpties","lootableItems","leftActiveIndex","rightActiveIndex","entityInventory","itemToMove","addItem","removeByIndex","equipmentDom","equipmentSlots","slot","storageWrapDom","goldCountDom","itemTooltipDom","itemDragDom","body","openStorages","itemsOnGround","populateInventory","equipment","populateSlot","storageItem","openEquipmentStorage","beltItem","openGroundItems","inventory","gold","equippable","maxStorage","maxItems","storage","inventoryStorageDom","inventoryStorageTitleDom","inventorySlots","populateItemsAtGround","itemPosition","ceil","rotation","zRot","letter","amount","getComponentDescriptions","toggle","ArgEntityLoader","entityJson","entities","newEntity","LootableInteractable","isLooted","openSprite","closedSprite","itemToAdd","success","addPartialStacks","addFullStacks","originalAmount","amountToAdd","partialMax","inventoryItem","amountCanAdd","maxStackSize","setAmount","use","fromIndex","toIndex","fromItem","drop","selectList","optionsDom","getActiveIndex","_SelectListEventHandler","StairsSelectEventHandler","StairsInteractable","generator","setPosition","setMap","setGenerator","playerLevel","nextLevel","futureLevel","mapToUpdate","createNextMap","BasicDungeon","level","nextMapName","nextMap","TrapDoorInteractable","newMap","create","ArgSingularBool","BlocksFov","BlocksMovement","onEntityDeath","Cleanable","increasesTo","ArgSimpleArray","split","Faction","factions","enemies","otherFaction","faction","Fighter","baseHp","hp","baseDefense","baseDamage","minDamage","maxDamage","setHp","newHp","maxHp","updateUI","heal","healedHp","die","ai","aiArgs","aiDead","removeComponent","getDamageDisplay","randomNumber","getMaxHp","statHp","equipmentHp","equippables","getEquippables","health","recalculateStats","newMax","calculateDamage","calculateDefense","statDamage","equipmentMinDamage","equipmentMaxDamage","statDefense","equipmentDefense","onComponentsLoaded","onEquipmentChange","ItemAction","consumable","activate","getTargetActor","getAliveActorAtLocation","_Consumable","getConsumer","getAction","action","consume","parentStorage","HealingConsumable","fighter","amountHealed","isPlayer","getDescription","types","getPosition","updatePositionOnly","setupGameHtml","gameDom","canvas","ctx","getContext","resizeCanvas","innerWidth","innerHeight","xScale","yScale","clearAll","clearRect","_Entity","componentArray","loadComponents","event","draw","xTileOffset","yTileOffset","loadArg","Actor","Tile","Item","templates","loaded","loadTemplates","parsedJson","extends","has","createFromTemplate","isLoaded","loadTemplate","numToLoad","filePath","then","GameMap","displayName","timeout","saveCache","create2dArray","clearTimeout","removeEntity","removeItem","groundPosition","mapItem","saveData","tileArray","letterArray","charCode","tileJson","String","fromCharCode","actorJson","itemJson","createdActor","createdItem","revealFromPosition","minX","maxX","minY","maxY","_revealGradually","maxRadius","xRadiusMin","xRadiusMax","yRadiusMin","yRadiusMax","xIsEdge","_revealAtPosition","aliveActor","addPlayer","updatePlayerUI","Room","placeEntities","entityGroups","itemGroups","tileGroups","generators","loadEntityGroups","loadItemGroups","loadTileGroups","loadGenerator","group","getChancesForLevel","chances","getActorForLevel","actorOrGroup","getRandomFromGroup","actorGroup","getItemForLevel","itemOrGroup","itemGroup","getTileForLevel","tileOrGroup","tileGroup","returnChance","totalWeight","chance","currentWeight","rand","RectangularRoom","x1","y1","x2","y2","getCenterX","getCenterY","intersects","otherRoom","createRoom","floorEntity","floorEntityCenter","floorEntityCracked","wallEntity","isVerticalEdge","isHorizontalEdge","wall","placeTiles","numTiles","tiledId","numMonsters","actorId","placeItems","numItems","itemId","maxRooms","roomMinSize","roomMaxSize","minTilesByFloor","maxTilesByFloor","minMonstersByFloor","maxMonstersByFloor","minItemsByFloor","maxItemsByFloor","getFloorAmount","weights","previousMapName","stairsInteractable","rooms","roomWidth","roomHeight","newRoom","intersectsOtherRoom","room","centerX","stairsDownX","stairsDownY","trapDoorX","trapDoorY","trapDoorInteractable","Shop","centerY","MapLoader","loadMap","mapType","engine","eventHandler","gameMaps","heroMap","futureMap","shopMap","needsRenderUpdate","textureManager","spriteManager","scale","mapLoader","initTextures","handleEvents","processAction","performedAction","handleEnemyTurns","clearMaps","setHeroMap","previousMap","addMap","setNextMap","setFutureMap","setShopMap","getMap","mapName","maps","values","Date","DefaultPlayerEventHandler","clientX","clientY","Tutorial","hero","requestAnimationFrame","preloadEntities","setInterval","clearInterval","webpackAsyncContext","req","webpackAsyncContextResolve","__webpack_require__","Promise","resolve","o"],"sourceRoot":""}