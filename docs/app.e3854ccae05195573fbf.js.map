{"version":3,"file":"app.e3854ccae05195573fbf.js","mappings":"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","sources":["webpack://7drl-2023/./src/styles/style.css","webpack://7drl-2023/./node_modules/css-loader/dist/runtime/api.js","webpack://7drl-2023/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://7drl-2023/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://7drl-2023/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://7drl-2023/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://7drl-2023/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://7drl-2023/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://7drl-2023/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://7drl-2023/./src/styles/style.css?ff94","webpack://7drl-2023/./src/js/actions/_Action.js","webpack://7drl-2023/./src/js/actions/NoAction.js","webpack://7drl-2023/./src/js/actions/UnableToPerformAction.js","webpack://7drl-2023/./src/js/message/SubMessage.js","webpack://7drl-2023/./src/js/message/Message.js","webpack://7drl-2023/./src/js/ui/_UIElement.js","webpack://7drl-2023/./src/js/ui/MessageConsole.js","webpack://7drl-2023/./src/js/message/MessageManager.js","webpack://7drl-2023/./src/js/ui/ViewInfo.js","webpack://7drl-2023/./src/js/sprite/Texture.js","webpack://7drl-2023/./src/js/sprite/TextureManager.js","webpack://7drl-2023/./src/js/sprite/Sprite.js","webpack://7drl-2023/./src/js/sprite/SpriteManager.js","webpack://7drl-2023/./src/js/Engine.js","webpack://7drl-2023/./src/js/event/_EventHandler.js","webpack://7drl-2023/./src/js/controls/Key.js","webpack://7drl-2023/./src/js/controls/Controls.js","webpack://7drl-2023/./src/js/actions/actionWithDirection/_ActionWithDirection.js","webpack://7drl-2023/./src/js/actions/actionWithDirection/MovementAction.js","webpack://7drl-2023/./src/js/actions/actionWithDirection/MeleeAction.js","webpack://7drl-2023/./src/js/components/_Component.js","webpack://7drl-2023/./src/js/components/Fov.js","webpack://7drl-2023/./src/js/map/fov/_BaseFov.js","webpack://7drl-2023/./src/js/map/fov/FovSlope.js","webpack://7drl-2023/./src/js/map/fov/AdamMilazzoFov.js","webpack://7drl-2023/./src/js/util/Extend.js","webpack://7drl-2023/./src/js/components/ai/_AI.js","webpack://7drl-2023/./src/js/components/ai/AIDead.js","webpack://7drl-2023/./src/js/ui/HeroInfo.js","webpack://7drl-2023/./src/js/components/Position.js","webpack://7drl-2023/./src/js/util/MathUtil.js","webpack://7drl-2023/./src/js/actions/WaitAction.js","webpack://7drl-2023/./src/js/actions/WanderAction.js","webpack://7drl-2023/./src/js/pathfinding/BinaryHeap.js","webpack://7drl-2023/./src/js/pathfinding/AStar.js","webpack://7drl-2023/./src/js/pathfinding/GridNode.js","webpack://7drl-2023/./src/js/pathfinding/Graph.js","webpack://7drl-2023/./src/js/components/ai/AIHero.js","webpack://7drl-2023/./src/js/components/ai/AIMeleeChase.js","webpack://7drl-2023/./src/js/components/BlocksFov.js","webpack://7drl-2023/./src/js/components/BlocksMovement.js","webpack://7drl-2023/./src/js/components/Cleanable.js","webpack://7drl-2023/./src/js/components/Faction.js","webpack://7drl-2023/./src/js/ui/PlayerInfo.js","webpack://7drl-2023/./src/js/components/Fighter.js","webpack://7drl-2023/./src/js/components/ComponentLoader.js","webpack://7drl-2023/./src/js/ui/Details.js","webpack://7drl-2023/./src/js/SceneState.js","webpack://7drl-2023/./src/js/entity/_Entity.js","webpack://7drl-2023/./src/js/entity/Actor.js","webpack://7drl-2023/./src/js/entity/Tile.js","webpack://7drl-2023/./src/js/entity/Item.js","webpack://7drl-2023/./src/js/entity/EntityLoader.js","webpack://7drl-2023/./src/js/actions/actionWithDirection/CleanAction.js","webpack://7drl-2023/./src/js/actions/actionWithDirection/BumpAction.js","webpack://7drl-2023/./src/js/event/DefaultPlayerEventHandler.js","webpack://7drl-2023/./src/js/util/ArrayUtil.js","webpack://7drl-2023/./src/js/map/tile/GameMap.js","webpack://7drl-2023/./src/js/map/tile/room/_Room.js","webpack://7drl-2023/./src/js/map/mapGeneration/ChanceLoader.js","webpack://7drl-2023/./src/js/map/tile/room/RectangularRoom.js","webpack://7drl-2023/./src/js/map/tile/Tutorial.js","webpack://7drl-2023/./src/js/map/tile/BasicDungeon.js","webpack://7drl-2023/./src/js/map/tile/Shop.js","webpack://7drl-2023/./src/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"* {\\n    box-sizing: border-box;\\n}\\n\\nbody {\\n    margin: 0 auto;\\n    overflow: hidden;\\n    width: 100vw;\\n    height: 100vh;\\n    font-size: 1.2vh;\\n}\\n\\n.ui {\\n    display: block;\\n    z-index: -1000 !important;\\n    opacity: 0;\\n    pointer-events: none;\\n}\\n\\n.ui.active {\\n    z-index: 0 !important;\\n    opacity: 1;\\n    pointer-events: all;\\n}\\n\\n\\n.details {\\n    padding: 10px 15px;\\n    font-size: 2vh;\\n    display: block;\\n    width: 20%;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    background-color: #ddd;\\n}\\n\\n.details__header {\\n    margin-top: 20px;\\n}\\n\\n.details__line {\\n    display: block;\\n}\\n\\n.player-info {\\n    height: calc(20vh - 10px);\\n    border-bottom: 1px solid #000;\\n}\\n\\n.view-info {\\n    height: 30vh;\\n    border-bottom: 1px solid #000;\\n}\\n\\n.message-console {\\n    position: relative;\\n    height: calc(50vh - 10px);\\n}\\n\\n.messages__wrap {\\n    position: absolute;\\n    opacity: 1;\\n    padding: 15px 5px 5px;\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n.messages {\\n    display:flex;\\n    flex-direction:column-reverse;\\n    height: 100%;\\n    overflow-y: scroll;\\n}\\n\\n\\n.messages__inn {\\n\\n}\\n\\n.message {\\n    font-size: 1.66vh;\\n}\\n\\n.message__text {\\n\\n}\\n\\n.message__bold {\\n    font-weight: bold;\\n}\\n\\n.message__italics {\\n    font-style: italic;\\n}\\n\\n.message__amount {\\n    margin-left: 1em;\\n}\\n\\n\\n.player-health,\\n.hero-health {\\n    position: relative;\\n    width: 100%;\\n    height: 2vh;\\n    background-color: #000;\\n}\\n\\n.player-health__fg,\\n.hero-health__fg {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    bottom: 0;\\n    background-color: #8B0000;\\n}\\n\\n.player-health__text,\\n.hero-health__text {\\n    display: table;\\n    position: absolute;\\n    left: 0;\\n    right: 0;\\n    font-size: 1.8vh;\\n    color: #fff;\\n    margin: 0 auto;\\n}\\n\\n.player-stat,\\n.hero-stat {\\n    display: inline-block;\\n    float: left;\\n    width: 50%;\\n}\\n\\n.hero-info {\\n    display: inline-block;\\n    position: absolute;\\n    left: 28%;\\n    width: 21.5%;\\n    padding: 15px;\\n    font-size: 2vh;\\n}\\n\\n.hero-status__message {\\n    font-size: 2.5vh;\\n}\\n\\n.inventory {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    width: 30%;\\n    height: 80%;\\n    transform: translateX(100%);\\n    transition: transform 1s ease;\\n    background: #fff;\\n    padding: 15px;\\n}\\n\\n.inventory.active {\\n    transform: translateX(0);\\n}\\n\\n.inventory__equipment {\\n    width: 100%;\\n    height: 55%;\\n    display: grid;\\n    grid-template-columns: repeat(3, minmax(0, 1fr));\\n    grid-template-rows: repeat(4, minmax(0, 1fr));\\n    background-color: #333;\\n    grid-gap: 0.2vw;\\n    padding: 1vh 7.5vh\\n}\\n\\n.inventory__storage-wrap {\\n    width: 100%;\\n    height: 40%;\\n    background-color: #333;\\n    position: relative;\\n    overflow-y: auto;\\n}\\n\\n.inventory__storage {\\n    width: 100%;\\n    display: grid;\\n    grid-template-columns: repeat(10, minmax(0, 1fr));\\n    grid-gap: 0.2vw;\\n    padding: 0.2vw;\\n}\\n\\n.inventory__storage-title {\\n    grid-column: span 10;\\n    padding: 5px;\\n    background-color: #ccc;\\n    font-size: 1.8vh;\\n}\\n\\n.slot {\\n    background-color: gray;\\n    text-align: center;\\n    border-radius: 5px;\\n    position: relative;\\n    font-family: helvetica, serif;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.inventory__equipment-slot .item {\\n    font-size: 7.5vh;\\n}\\n\\n.inventory__equipment-slot:before {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    width: 100%;\\n    height: 100%;\\n    font-size: 7.5vh;\\n    opacity: 0.15;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.inventory__equipment-slot.has-item:before {\\n    display: none;\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"0\\\"]:before {\\n    content: \\\"⌈\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"1\\\"]:before {\\n    content: \\\"∩\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"2\\\"]:before {\\n    content: \\\"ᴕ\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"3\\\"]:before {\\n    content: \\\"†\\\";\\n    transform: rotate(180deg);\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"4\\\"]:before {\\n    content: \\\"☗\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"5\\\"]:before {\\n    content: \\\"●\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"6\\\"]:before,\\n.inventory__equipment-slot[data-index=\\\"8\\\"]:before {\\n    content: \\\"○\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"7\\\"]:before {\\n    content: \\\"-\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"9\\\"]:before {\\n    content: \\\"ひ\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"10\\\"]:before {\\n    content: \\\"◫\\\";\\n}\\n.inventory__equipment-slot[data-index=\\\"11\\\"]:before {\\n    content: \\\"″\\\";\\n}\\n\\n.inventory__storage-slot {\\n    height: 5.3vh;\\n}\\n\\n.slot.has-item:hover {\\n    cursor: pointer;\\n    background-color: #999;\\n}\\n\\n.slot.disabled {\\n    background-color: #845b5b;\\n}\\n\\n.slot.dragging .item {\\n    display: none;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/style.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"* {\\n    box-sizing: border-box;\\n}\\n\\nbody {\\n    margin: 0 auto;\\n    overflow: hidden;\\n    width: 100vw;\\n    height: 100vh;\\n    font-size: 1.2vh;\\n}\\n\\n.ui {\\n    display: block;\\n    z-index: -1000 !important;\\n    opacity: 0;\\n    pointer-events: none;\\n}\\n\\n.ui.active {\\n    z-index: 0 !important;\\n    opacity: 1;\\n    pointer-events: all;\\n}\\n\\n\\n.details {\\n    padding: 10px 15px;\\n    font-size: 2vh;\\n    display: block;\\n    width: 20%;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    background-color: #ddd;\\n}\\n\\n.details__header {\\n    margin-top: 20px;\\n}\\n\\n.details__line {\\n    display: block;\\n}\\n\\n.player-info {\\n    height: calc(20vh - 10px);\\n    border-bottom: 1px solid #000;\\n}\\n\\n.view-info {\\n    height: 30vh;\\n    border-bottom: 1px solid #000;\\n}\\n\\n.message-console {\\n    position: relative;\\n    height: calc(50vh - 10px);\\n}\\n\\n.messages__wrap {\\n    position: absolute;\\n    opacity: 1;\\n    padding: 15px 5px 5px;\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n.messages {\\n    display:flex;\\n    flex-direction:column-reverse;\\n    height: 100%;\\n    overflow-y: scroll;\\n}\\n\\n\\n.messages__inn {\\n\\n}\\n\\n.message {\\n    font-size: 1.66vh;\\n}\\n\\n.message__text {\\n\\n}\\n\\n.message__bold {\\n    font-weight: bold;\\n}\\n\\n.message__italics {\\n    font-style: italic;\\n}\\n\\n.message__amount {\\n    margin-left: 1em;\\n}\\n\\n\\n.player-health,\\n.hero-health {\\n    position: relative;\\n    width: 100%;\\n    height: 2vh;\\n    background-color: #000;\\n}\\n\\n.player-health__fg,\\n.hero-health__fg {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    bottom: 0;\\n    background-color: #8B0000;\\n}\\n\\n.player-health__text,\\n.hero-health__text {\\n    display: table;\\n    position: absolute;\\n    left: 0;\\n    right: 0;\\n    font-size: 1.8vh;\\n    color: #fff;\\n    margin: 0 auto;\\n}\\n\\n.player-stat,\\n.hero-stat {\\n    display: inline-block;\\n    float: left;\\n    width: 50%;\\n}\\n\\n.hero-info {\\n    display: inline-block;\\n    position: absolute;\\n    left: 28%;\\n    width: 21.5%;\\n    padding: 15px;\\n    font-size: 2vh;\\n}\\n\\n.hero-status__message {\\n    font-size: 2.5vh;\\n}\\n\\n.inventory {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    width: 30%;\\n    height: 80%;\\n    transform: translateX(100%);\\n    transition: transform 1s ease;\\n    background: #fff;\\n    padding: 15px;\\n}\\n\\n.inventory.active {\\n    transform: translateX(0);\\n}\\n\\n.inventory__equipment {\\n    width: 100%;\\n    height: 55%;\\n    display: grid;\\n    grid-template-columns: repeat(3, minmax(0, 1fr));\\n    grid-template-rows: repeat(4, minmax(0, 1fr));\\n    background-color: #333;\\n    grid-gap: 0.2vw;\\n    padding: 1vh 7.5vh\\n}\\n\\n.inventory__storage-wrap {\\n    width: 100%;\\n    height: 40%;\\n    background-color: #333;\\n    position: relative;\\n    overflow-y: auto;\\n}\\n\\n.inventory__storage {\\n    width: 100%;\\n    display: grid;\\n    grid-template-columns: repeat(10, minmax(0, 1fr));\\n    grid-gap: 0.2vw;\\n    padding: 0.2vw;\\n}\\n\\n.inventory__storage-title {\\n    grid-column: span 10;\\n    padding: 5px;\\n    background-color: #ccc;\\n    font-size: 1.8vh;\\n}\\n\\n.slot {\\n    background-color: gray;\\n    text-align: center;\\n    border-radius: 5px;\\n    position: relative;\\n    font-family: helvetica, serif;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.inventory__equipment-slot .item {\\n    font-size: 7.5vh;\\n}\\n\\n.inventory__equipment-slot:before {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    width: 100%;\\n    height: 100%;\\n    font-size: 7.5vh;\\n    opacity: 0.15;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.inventory__equipment-slot.has-item:before {\\n    display: none;\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"0\\\"]:before {\\n    content: \\\"⌈\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"1\\\"]:before {\\n    content: \\\"∩\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"2\\\"]:before {\\n    content: \\\"ᴕ\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"3\\\"]:before {\\n    content: \\\"†\\\";\\n    transform: rotate(180deg);\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"4\\\"]:before {\\n    content: \\\"☗\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"5\\\"]:before {\\n    content: \\\"●\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"6\\\"]:before,\\n.inventory__equipment-slot[data-index=\\\"8\\\"]:before {\\n    content: \\\"○\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"7\\\"]:before {\\n    content: \\\"-\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"9\\\"]:before {\\n    content: \\\"ひ\\\";\\n}\\n\\n.inventory__equipment-slot[data-index=\\\"10\\\"]:before {\\n    content: \\\"◫\\\";\\n}\\n.inventory__equipment-slot[data-index=\\\"11\\\"]:before {\\n    content: \\\"″\\\";\\n}\\n\\n.inventory__storage-slot {\\n    height: 5.3vh;\\n}\\n\\n.slot.has-item:hover {\\n    cursor: pointer;\\n    background-color: #999;\\n}\\n\\n.slot.disabled {\\n    background-color: #845b5b;\\n}\\n\\n.slot.dragging .item {\\n    display: none;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import engine from \"../Engine\";\n\nexport default class _Action {\n    constructor(entity) {\n        this.entity = entity;\n    }\n\n    /**\n     * @returns {_Action}\n     */\n    perform(/*gameMap*/) {\n        console.error(\"Not Implemented\");\n    }\n\n    isPlayer() {\n        return this.entity === engine.player;\n    }\n}","import _Action from \"./_Action\";\n\nexport default class NoAction extends _Action {\n    constructor(entity) {\n        super(entity);\n    }\n\n    perform(/*gameMap*/) {\n        return this;\n    }\n}","import _Action from \"./_Action\";\n\nexport default class UnableToPerformAction extends _Action {\n    constructor(entity, reason) {\n        super(entity);\n\n        this.reason = reason;\n    }\n\n    perform(/*gameMap*/) {\n        return this;\n    }\n}","export default class SubMessage {\n    constructor(text, color, options) {\n        this.text = text;\n        this.color = color || \"#333\";\n\n        this.bold = false;\n        this.italics = false;\n        if (options) {\n            this.bold = options.bold || false;\n            this.italics = options.italics || false;\n        }\n    }\n\n    isEqual(subMessage) {\n        return this.text === subMessage.text && this.color === subMessage.color && this.bold === subMessage.bold && this.italics === subMessage.italics;\n    }\n}","export default class Message {\n    constructor(subMessages = []) {\n        this.subMessages = subMessages;\n        this.count = 1;\n    }\n\n    isEqual(subMessages) {\n        if (this.subMessages.length !== subMessages.length) {\n            return false;\n        }\n\n        for (let i = 0; i < this.subMessages.length; i++) {\n            const sub1 = this.subMessages[i];\n            const sub2 = subMessages[i];\n\n            if (!sub1.isEqual(sub2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    getHtml() {\n        const messageDom = document.createElement(\"div\");\n        messageDom.classList.add(\"message\");\n\n        for (const subMessage of this.subMessages) {\n            const subMessageDom = document.createElement(\"span\");\n            subMessageDom.classList.add(\"message__text\");\n\n            if (subMessage.bold) {\n                subMessageDom.classList.add(\"message__bold\");\n            }\n\n            if (subMessage.italics) {\n                subMessageDom.classList.add(\"message__italics\");\n            }\n            subMessageDom.innerText = subMessage.text;\n            subMessageDom.style.color = subMessage.color;\n            messageDom.appendChild(subMessageDom);\n        }\n\n        if (this.count > 1) {\n            messageDom.appendChild(this.getCountHtml());\n        }\n\n        return messageDom;\n    }\n\n    getCountHtml() {\n        const amountDom = document.createElement(\"span\");\n        amountDom.classList.add(\"message__amount\");\n        amountDom.innerText = \"x\" + this.count;\n\n        return amountDom;\n    }\n}","export default class _UIElement {\n    constructor(html) {\n        this.dom = this.htmlToElement(html);\n    }\n\n    /**\n     * Reference: https://stackoverflow.com/a/35385518\n     * @param {String} html HTML representing a single element\n     * @return {Element}\n     */\n    htmlToElement(html) {\n        const template = document.createElement(\"template\");\n        html = html.trim(); // Never return a text node of whitespace as the result\n        template.innerHTML = html;\n        return template.content.firstChild;\n    }\n\n    appendTo(otherDom) {\n        otherDom.appendChild(this.dom);\n    }\n\n    // /**\n    //  * Reference: https://stackoverflow.com/a/35385518\n    //  * @param {String} html HTML representing any number of sibling elements\n    //  * @return {NodeList}\n    //  */\n    // htmlToElements(html) {\n    //     const template = document.createElement('template');\n    //     template.innerHTML = html;\n    //     return template.content.childNodes;\n    // }\n\n    isOpen() {\n        return this.dom.classList.contains(\"active\");\n    }\n\n    open() {\n        if (!this.dom.classList.contains(\"active\")) {\n            this.dom.classList.add(\"active\");\n        }\n    }\n\n    close() {\n        this.dom.classList.remove(\"active\");\n    }\n}","import html from \"../../html/ui/MessageConsole.html\";\nimport _UIElement from \"./_UIElement\";\n\nclass MessageConsole extends _UIElement {\n    constructor() {\n        super(html);\n\n        this.messagesInnerDom = this.dom.getElementsByClassName(\"messages__inn\")[0];\n    }\n\n    updateLastMessageCount(lastMessage) {\n        const lastMessageDom = document.querySelectorAll(\".message:last-child\")[0];\n        const amountDom = lastMessageDom.querySelectorAll(\".message__amount\")[0];\n\n        if (amountDom) {\n            amountDom.innerText = \"x\" + lastMessage.count;\n        } else {\n            lastMessageDom.appendChild(lastMessage.getCountHtml());\n        }\n    }\n\n    addMessage(messageHtml) {\n        this.messagesInnerDom.appendChild(messageHtml);\n    }\n\n    clear() {\n        this.messagesInnerDom.innerHTML = \"\";\n    }\n}\n\nconst messageConsole = new MessageConsole();\nexport default messageConsole;","import SubMessage from \"./SubMessage\";\nimport Message from \"./Message\";\nimport MessageConsole from \"../ui/MessageConsole\";\n\nclass MessageManager {\n    constructor() {\n        this.messages = [];\n        this.builder = [];\n    }\n\n    text(text, color, options) {\n        this.builder.push(new SubMessage(text, color, options));\n        return this; // Allow chaining\n    }\n\n    build(stack = true) {\n        this.addMessage(this.builder.slice(0), stack);\n        this.builder = [];\n    }\n\n    clear() {\n        this.messages = [];\n        MessageConsole.clear();\n    }\n\n    addMessage(subMessages, stack = true) {\n        if (stack && this.messages.length > 0) {\n            const lastMessage = this.messages[this.messages.length - 1];\n            if (lastMessage.isEqual(subMessages)) {\n                lastMessage.count += 1;\n                MessageConsole.updateLastMessageCount(lastMessage);\n            } else {\n                this.addNewMessage(subMessages);\n            }\n        } else {\n            this.addNewMessage(subMessages);\n        }\n    }\n\n    addNewMessage(subMessages) {\n        const newMessage = new Message(subMessages);\n        this.messages.push(newMessage);\n        MessageConsole.addMessage(newMessage.getHtml());\n    }\n}\n\nconst messageManager = new MessageManager();\nexport default messageManager;","import html from \"../../html/ui/ViewInfo.html\";\nimport _UIElement from \"./_UIElement\";\nimport engine from \"../Engine\";\n\nclass ViewInfo extends _UIElement {\n    constructor() {\n        super(html);\n    }\n\n    updatePlayerDetails() {\n        const playerPosition = engine.player.getComponent(\"position\");\n        const tile = engine.playerMap.tiles[playerPosition.x][playerPosition.y];\n        this.updatePositionDetails(tile);\n    }\n\n    getDetailsLine(innerText) {\n        return \"<span class='details__line'>\" + innerText + \"</span>\";\n    }\n\n    updatePositionDetails(tile) {\n        let text;\n        const tileFov = tile.getComponent(\"fov\");\n        if (tileFov && tileFov.explored) {\n            text = this.getDetailsLine(tile.name);\n\n        } else {\n            text = this.getDetailsLine(\"You haven't explored here.\");\n        }\n\n        this.dom.innerHTML = text;\n    }\n}\n\nconst viewInfo = new ViewInfo();\nexport default viewInfo;","export default class Texture {\n    constructor(name, image) {\n        this.name = name;\n        this.image = image;\n    }\n}","import Texture from \"./Texture\";\nimport engine from \"../Engine\";\n\nexport default class TextureManager {\n    constructor() {\n        this.textures = [];\n    }\n\n    addTexture(name, src) {\n        const self = this;\n        const image = new Image();\n\n        image.onload = function () {\n            self.textures.push(new Texture(name, image));\n        };\n        image.src = src;\n    }\n\n    getTexture(textureName) {\n        const length = this.textures.length;\n        for (let i = 0; i < length; i++) {\n            if (this.textures[i].name === textureName) {\n                return this.textures[i].image;\n            }\n        }\n        return null;\n    }\n\n    loadJson(textureName, json) {\n        const tileSize = json.tileSize;\n        const name = json.name;\n        const width = json.width;\n        const tiles = json.tiles;\n\n        let row = 0;\n        let col = 0;\n        for (const tile of tiles) {\n            engine.spriteManager.addImage(name + \"_\" + tile, textureName, col * tileSize, row * tileSize);\n\n            col ++;\n            if (col >= width) {\n                col -= width;\n                row ++;\n            }\n        }\n    }\n}","import engine from \"../Engine\";\n\nexport default class Sprite {\n    constructor(imageName, textureName, x, y, w, h) {\n        this.imageName = imageName;\n        this.textureName = textureName;\n        this.texture = engine.textureManager.getTexture(textureName);\n        this.x = x;\n        this.y = y;\n        this.w = w || 64;\n        this.h = h || 64;\n    }\n\n    loadTexture() {\n        if (this.texture === null) {\n            this.texture = engine.textureManager.getTexture(this.textureName);\n        }\n\n        return this.texture !== null;\n    }\n\n    drawImage(context, i, j, degrees) {\n        if (degrees !== null && degrees > 0) {\n            context.save();\n            context.translate(i+this.w/2, j+this.h/2);\n            context.rotate(degrees * Math.PI / 180);\n\n            context.drawImage(this.texture, this.x, this.y, this.w, this.h, -this.w/2, -this.h/2, this.w, this.h);\n\n            context.restore();\n        } else {\n            context.drawImage(this.texture, this.x, this.y, this.w, this.h, i * engine.xScale, j * engine.yScale, this.w * engine.xScale, this.h * engine.yScale);\n        }\n    }\n}","import Sprite from \"./Sprite\";\n\nexport default class SpriteManager {\n    constructor() {\n        this.sprites = [];\n        this.spritesPreloaded = false;\n    }\n\n    addImage(imageName, textureName, x, y, w, h) {\n        this.sprites.push(new Sprite(imageName, textureName, x, y, w, h));\n    }\n\n    getImage(imgName) {\n        const length = this.sprites.length;\n        for (let i = 0; i < length; i++) {\n            if (this.sprites[i].imageName === imgName) {\n                return this.sprites[i];\n            }\n        }\n        return null;\n    }\n\n    preloadSprites() {\n        if (!this.spritesPreloaded) {\n            const numSprites = this.sprites.length;\n            let numLoaded = 0;\n\n            this.sprites.forEach(function(sprite) {\n                if (sprite.loadTexture()) {\n                    numLoaded ++;\n                }\n            });\n\n            if (numLoaded === numSprites) {\n                this.spritesPreloaded = true;\n            }\n        }\n\n        return this.spritesPreloaded;\n    }\n}","import NoAction from \"./actions/NoAction\";\nimport UnableToPerformAction from \"./actions/UnableToPerformAction\";\nimport messageManager from \"./message/MessageManager\";\nimport viewInfo from \"./ui/ViewInfo\";\nimport TextureManager from \"./sprite/TextureManager\";\nimport SpriteManager from \"./sprite/SpriteManager\";\nimport placeholderTexture from \"../img/placeholder.gif\";\nimport playerTexture from \"../img/player.gif\";\nimport scribbleTexture from \"../img/kenney/scribble.png\";\nimport scribbleJson from \"../img/kenney/scribble.json\";\nimport websTexture from \"../img/electronsandsuch/webs.png\";\nimport websJson from \"../img/electronsandsuch/webs.json\";\nimport rlTilesTexture from \"../img/rltiles/rltiles-2d-2x.png\";\nimport rltilesJson from \"../img/rltiles/rltiles-2d-2x.json\";\n//import GameMap from \"./map/tile/GameMap\";\n\nclass Engine {\n    constructor() {\n        this.eventHandler = null;\n        this.player = null;\n        //this.gameMap = null;\n\n        this.gameMaps = new Map();\n        this.playerMap = null;\n\n        this.heroMap = null;\n        this.nextMap = null;\n        this.shopMap = null;\n        this.needsRenderUpdate = false;\n\n        this.textureManager = null;\n        this.spriteManager = null;\n\n        this.xScale = 1;\n        this.yScale = 1;\n    }\n\n    initTextures() {\n        this.textureManager = new TextureManager();\n        this.textureManager.addTexture(\"sprites\", placeholderTexture);\n        this.textureManager.addTexture(\"player\", playerTexture);\n        this.textureManager.addTexture(\"scribble\", scribbleTexture);\n        this.textureManager.addTexture(\"rltiles\", rlTilesTexture);\n        this.textureManager.addTexture(\"webs\", websTexture);\n\n        this.spriteManager = new SpriteManager();\n        this.spriteManager.addImage(\"placeholder\", \"sprites\", 0, 0);\n        this.textureManager.loadJson(\"rltiles\", rltilesJson);\n        this.textureManager.loadJson(\"scribble\", scribbleJson);\n        this.textureManager.loadJson(\"webs\", websJson);\n\n    }\n\n    handleEvents() {\n        this.processAction(this.eventHandler.handleInput());\n    }\n\n    processAction(action) {\n        if (action && this.eventHandler.isPlayerTurn) {\n            const performedAction = action.perform(engine.playerMap);\n            if (performedAction instanceof NoAction) {\n                return false;\n            }\n\n            if (performedAction instanceof UnableToPerformAction) {\n                if (performedAction.reason) {\n                    messageManager.text(performedAction.reason).build();\n                }\n                return false;\n            } else {\n                engine.needsRenderUpdate = true;\n                engine.player.fov.compute(engine.playerMap, engine.player, 5);\n                engine.player.fov.updateMap();\n                viewInfo.updatePlayerDetails();\n\n                this.handleEnemyTurns();\n\n                return true;\n            }\n        }\n    }\n\n    handleEnemyTurns() {\n        this.eventHandler.isPlayerTurn = false;\n\n        for (const actor of this.heroMap.actors) {\n            if (actor !== this.player) {\n                const ai = actor.getComponent(\"ai\");\n                if (ai) {\n                    ai.perform(this.heroMap);\n                }\n            }\n        }\n\n        for (const actor of this.shopMap.actors) {\n            if (actor !== this.player) {\n                const ai = actor.getComponent(\"ai\");\n                if (ai) {\n                    ai.perform(this.shopMap);\n                }\n            }\n        }\n\n        for (const actor of this.nextMap.actors) {\n            if (actor !== this.player) {\n                const ai = actor.getComponent(\"ai\");\n                if (ai) {\n                    ai.perform(this.nextMap);\n                }\n            }\n        }\n\n        this.eventHandler.isPlayerTurn = true;\n    }\n\n    clearMaps() {\n        this.player = null;\n        this.gameMaps = new Map();\n    }\n\n    setHeroMap(map) {\n        const previousMap = this.heroMap;\n        if (previousMap === map) {\n            return;\n        }\n\n        if (previousMap) {\n            previousMap.teardown();\n            previousMap.removeActor(this.player);\n        }\n\n        this.heroMap = map;\n        this.addMap(map);\n        if (previousMap) {\n            previousMap.save();\n        }\n        map.save();\n        if (this.player && this.heroMap.actors.indexOf(this.player) === -1) {\n            this.heroMap.actors.push(this.player);\n        }\n\n        this.heroMap.updatePlayerUI();\n        this.needsRenderUpdate = true;\n    }\n\n    setNextMap(map) {\n        const previousMap = this.nextMap;\n        if (previousMap === map) {\n            return;\n        }\n\n        if (previousMap) {\n            previousMap.teardown();\n            previousMap.removeActor(this.player);\n        }\n\n        this.nextMap = map;\n        this.addMap(map);\n        if (previousMap) {\n            previousMap.save();\n        }\n        map.save();\n        if (this.player && this.nextMap.actors.indexOf(this.player) === -1) {\n            this.nextMap.actors.push(this.player);\n        }\n\n        this.nextMap.updatePlayerUI();\n        this.needsRenderUpdate = true;\n    }\n\n    setShopMap(map) {\n        const previousMap = this.shopMap;\n        if (previousMap === map) {\n            return;\n        }\n\n        if (previousMap) {\n            previousMap.teardown();\n            previousMap.removeActor(this.player);\n        }\n\n        this.shopMap = map;\n        this.addMap(map);\n        if (previousMap) {\n            previousMap.save();\n        }\n        map.save();\n        if (this.player && this.shopMap.actors.indexOf(this.player) === -1) {\n            this.shopMap.actors.push(this.player);\n        }\n\n        this.shopMap.updatePlayerUI();\n        this.needsRenderUpdate = true;\n    }\n\n    addMap(map) {\n        if (!this.gameMaps.has(map.name)) {\n            this.gameMaps.set(map.name, map);\n        }\n    }\n\n    draw() {\n        this.heroMap.draw();\n        this.nextMap.draw(0, 11);\n        this.shopMap.draw(20, 0);\n    }\n\n    save(name) {\n        const maps = [];\n        for (const map of this.gameMaps.values()) {\n            maps.push(map.save());\n        }\n\n        const saveJson = {\n            \"name\": name,\n            \"date\": new Date(),\n            \"playerMap\": this.playerMap.name,\n            \"heroMap\": this.heroMap.name,\n            \"nextMap\": this.nextMap.name,\n            \"shopMap\": this.shopMap.name,\n            \"maps\": maps\n        };\n\n        localStorage.setItem(name, JSON.stringify(saveJson));\n    }\n\n    load(/*name*/) {\n        // this.clearMaps();\n        // const loadData = localStorage.getItem(name);\n        // if (loadData) {\n        //     const json = JSON.parse(loadData);\n        //     const heroMap = json.heroMap;\n        //     const nextMap = json.nextMap;\n        //     const shopMap = json.shopMap;\n        //     for (const map of json.maps) {\n        //         const newMap = new GameMap(map.name, map.width, map.height);\n        //         newMap.load(map);\n        //         this.addMap(newMap);\n        //\n        //         for (const actor of newMap.actors) {\n        //             if (actor.name === \"Player\") {\n        //                 this.player = actor;\n        //                 break;\n        //             }\n        //         }\n        //\n        //         if (newMap.name === heroMap) {\n        //             this.setHeroMap(newMap);\n        //         } else if (newMap.name === nextMap) {\n        //             this.setNextMap(newMap);\n        //         } else if (newMap.name === shopMap) {\n        //             this.setShopMap(newMap);\n        //         }\n        //     }\n        // }\n    }\n}\n\nconst engine = new Engine();\nexport default engine;","export default class _EventHandler {\n    constructor() {\n        this.mouse = {\n            x: -1,\n            y: -1\n        };\n        this.mouseDown = false;\n\n        window.addEventListener(\"mousemove\", this);\n        window.addEventListener(\"mousedown\", this);\n        window.addEventListener(\"mouseup\", this);\n        window.addEventListener(\"click\", this);\n        window.addEventListener(\"contextmenu\", this);\n        window.addEventListener(\"change\", this);\n        window.addEventListener(\"keydown\", this);\n\n        this.isPlayerTurn = true;\n        this.targetedTile = null;\n        this.pathTiles = [];\n    }\n\n    teardown() {\n        window.removeEventListener(\"mousemove\", this);\n        window.removeEventListener(\"mousedown\", this);\n        window.removeEventListener(\"mouseup\", this);\n        window.removeEventListener(\"click\", this);\n        window.removeEventListener(\"contextmenu\", this);\n        window.removeEventListener(\"change\", this);\n        window.removeEventListener(\"keydown\", this);\n    }\n\n    handleEvent(e) {\n        switch(e.type) {\n            case \"mousemove\":\n                this.onMouseMove(e);\n                break;\n            case \"mousedown\":\n                this.onMouseDown(e);\n                break;\n            case \"mouseup\":\n                this.onMouseUp(e);\n                break;\n            case \"click\":\n                this.onLeftClick(e);\n                break;\n            case \"contextmenu\":\n                this.onRightClick(e);\n                break;\n            case \"change\":\n                this.onChange(e);\n                break;\n            case \"keydown\":\n                this.onKeydown(e);\n                break;\n        }\n    }\n\n    handleInput() {}\n\n    onMouseMove(/*e*/) {}\n\n    onMouseDown(/*e*/) {\n        this.mouseDown = true;\n    }\n\n    onMouseUp(/*e*/) {\n        this.mouseDown = false;\n    }\n\n    onLeftClick(/*e*/) {}\n\n    onRightClick(/*e*/) {}\n\n    onChange(/*e*/) {}\n\n    onKeydown(/*e*/) {}\n\n}","const Key = {\n    LEFT: \"ArrowLeft\",\n    RIGHT: \"ArrowRight\",\n    UP: \"ArrowUp\",\n    DOWN: \"ArrowDown\",\n    BACKSPACE: \"Backspace\",\n    TAB: \"Tab\",\n    ENTER: \"Enter\",\n    SHIFT_LEFT: \"Left Shift\",\n    SHIFT_RIGHT: \"Right Shift\",\n    CONTROL_LEFT: \"Left Control\",\n    CONTROL_RIGHT: \"Right Control\",\n    ALT_LEFT: \"Left Alt\",\n    ALT_RIGHT: \"Right Alt\",\n    PAUSE_BREAK: \"Pause\",\n    CAPS_LOCK: \"CapsLock\",\n    ESCAPE: \"Escape\",\n    SPACE: \" \",\n    PAGE_UP: \"PageUp\",\n    PAGE_DOWN: \"PageDown\",\n    END: \"End\",\n    HOME: \"Home\",\n    INSERT: \"Insert\",\n    DELETE: \"Delete\",\n    OS_LEFT: \"Left OS\",\n    OS_RIGHT: \"Right OS\",\n    CONTEXT_MENU: \"ContextMenu\",\n    SCROLL_LOCK: \"ScrollLock\",\n    NUM_LOCK: \"NumLock\",\n    NUMPAD_DIVIDE: \"Numpad /\",\n    NUMPAD_MULTIPLY: \"Numpad *\",\n    NUMPAD_SUBTRACT: \"Numpad -\",\n    NUMPAD_ADD: \"Numpad +\",\n    NUMPAD_ENTER: \"Numpad Enter\",\n\n    NUMPAD_PERIOD: \"Numpad .\",\n    NUMPAD_0: \"Numpad 0\",\n    NUMPAD_1: \"Numpad 1\",\n    NUMPAD_2: \"Numpad 2\",\n    NUMPAD_3: \"Numpad 3\",\n    NUMPAD_4: \"Numpad 4\",\n    NUMPAD_5: \"Numpad 5\",\n    NUMPAD_6: \"Numpad 6\",\n    NUMPAD_7: \"Numpad 7\",\n    NUMPAD_8: \"Numpad 8\",\n    NUMPAD_9: \"Numpad 9\",\n\n    NUMPAD_DELETE: \"Numpad Delete\",\n    NUMPAD_INSERT: \"Numpad Insert\",\n    NUMPAD_END: \"Numpad End\",\n    NUMPAD_ARROW_DOWN: \"Numpad ArrowDown\",\n    NUMPAD_PAGE_DOWN: \"Numpad PageDown\",\n    NUMPAD_ARROW_LEFT: \"Numpad ArrowLeft\",\n    NUMPAD_CLEAR: \"Numpad Clear\",\n    NUMPAD_ARROW_RIGHT: \"Numpad ArrowRight\",\n    NUMPAD_HOME: \"Numpad Home\",\n    NUMPAD_ARROW_UP: \"Numpad ArrowUp\",\n    NUMPAD_PAGE_UP: \"Numpad PageUp\",\n};\n\nexport default Key;","import Key from \"./Key\";\n\nclass Controls {\n    constructor() {\n        const self = this;\n\n        self.defaultDelay = 25;\n        self.lastShiftUp = null;\n        self.treatShiftNumpadEqual = true;\n        self.keysDown = [];\n        self.keysDelayed = [];\n        self.defaults = new Map();\n\n        self.controls = new Map();\n        self.defaults.set(\"up\", [Key.NUMPAD_8, Key.UP]);\n        self.defaults.set(\"down\", [Key.NUMPAD_2, Key.DOWN]);\n\n        self.defaults.set(\"left\", [Key.NUMPAD_4, Key.LEFT]);\n        self.defaults.set(\"right\", [Key.NUMPAD_6, Key.RIGHT]);\n        self.defaults.set(\"nw\", [Key.NUMPAD_7]);\n        self.defaults.set(\"ne\", [Key.NUMPAD_9]);\n        self.defaults.set(\"sw\", [Key.NUMPAD_1]);\n        self.defaults.set(\"se\", [Key.NUMPAD_3]);\n        self.defaults.set(\"wait\", [Key.NUMPAD_5]);\n\n        self.load();\n\n        addEventListener(\"keydown\", function (e) {\n            // TODO: Evaluate if this should be generalized. I don't want to prevent all keys necessarily.\n            if (e.key === \"/\") {\n                e.preventDefault();\n            }\n\n            if (self.treatShiftNumpadEqual) {\n                const numLockOn = e.getModifierState(\"NumLock\");\n                // Re-add Shift key from Numpad press\n                if (numLockOn && !e.shiftKey && e.code.startsWith(\"Numpad\") && e.keyCode < 90) {\n                    if (self.lastShiftUp) {\n                        self.keysDown[self.lastShiftUp] = true;\n                        //console.log(\"Bonus Key Down: \", self.lastShiftUp);\n                    }\n                }\n            }\n\n            const key = self.getKey(e.key, e.code);\n            //console.log(\"Key Down: \", key);\n            self.keysDown[key] = true;\n        }, false);\n\n\n        addEventListener(\"keyup\", function (e) {\n            const key = self.getKey(e.key, e.code);\n            if (key === Key.SHIFT_LEFT || key === Key.SHIFT_RIGHT) {\n                self.lastShiftUp = key;\n            }\n\n            //console.log(\"Key Up: \", key);\n            delete self.keysDown[key];\n            delete self.keysDelayed[key];\n        }, false);\n    }\n\n    getKey(key, code) {\n        if (!code.startsWith(\"Arrow\")) {\n            if (code.endsWith(\"Left\")) {\n                key = \"Left \" + key;\n            } else if (code.endsWith(\"Right\")) {\n                key = \"Right \" + key;\n            } else if (code.startsWith(\"Numpad\")) {\n                key = \"Numpad \" + key;\n            }\n        }\n\n        if (this.treatShiftNumpadEqual) {\n            switch(key) {\n                case Key.NUMPAD_DELETE: key = Key.NUMPAD_PERIOD; break;\n                case Key.NUMPAD_INSERT: key = Key.NUMPAD_0; break;\n                case Key.NUMPAD_END: key = Key.NUMPAD_1; break;\n                case Key.NUMPAD_ARROW_DOWN: key = Key.NUMPAD_2; break;\n                case Key.NUMPAD_PAGE_DOWN: key = Key.NUMPAD_3; break;\n                case Key.NUMPAD_ARROW_LEFT: key = Key.NUMPAD_4; break;\n                case Key.NUMPAD_CLEAR: key = Key.NUMPAD_5; break;\n                case Key.NUMPAD_ARROW_RIGHT: key = Key.NUMPAD_6; break;\n                case Key.NUMPAD_HOME: key = Key.NUMPAD_7; break;\n                case Key.NUMPAD_ARROW_UP: key = Key.NUMPAD_8; break;\n                case Key.NUMPAD_PAGE_UP: key = Key.NUMPAD_9; break;\n            }\n        }\n\n        return key;\n    }\n\n    load() {\n        const controls = localStorage.getItem(\"controls\");\n        if (controls) {\n            this.controls = new Map(JSON.parse(controls));\n        } else {\n            this.resetToDefault();\n        }\n    }\n\n    save() {\n        localStorage.setItem(\"controls\", JSON.stringify(Array.from(this.controls.entries())));\n    }\n\n    setControls(controlsMap) {\n        this.controls = new Map();\n        for (const [key, value] of controlsMap.entries()) {\n            const keys = [];\n            for (const val of value) {\n                keys.push(val);\n            }\n            this.controls.set(key, keys);\n        }\n        this.save();\n    }\n\n    resetToDefault() {\n        this.setControls(this.defaults);\n    }\n\n    clone() {\n        const clone = new Map();\n        for (const [key, value] of this.controls.entries()) {\n            const keys = [];\n            for (const val of value) {\n                keys.push(val);\n            }\n            clone.set(key, keys);\n        }\n        return clone;\n    }\n\n    isPressed(key) {\n        const self = this;\n        let pressed = false;\n\n        let keys = self.controls.get(key);\n        if (!keys) {\n            const defaultKeys = self.defaults.get(key);\n            if (defaultKeys) {\n                self.controls.set(key, defaultKeys);\n                self.save();\n                keys = defaultKeys;\n            } else {\n                console.error(\"Missing keybindings for: \", key, keys);\n            }\n        }\n        keys.forEach(function(keyToTest) {\n            if (keyToTest in self.keysDown) {\n                pressed = true;\n            }\n        });\n\n        return pressed;\n    }\n\n    isDelayed(key) {\n        const self = this;\n        let delayed = false;\n\n        this.controls.get(key).forEach(function(keyToTest) {\n            if (keyToTest in self.keysDelayed) {\n                delayed = true;\n            }\n        });\n\n        return delayed;\n    }\n\n    deleteKey(key, delay) {\n        const self = this;\n        self.controls.get(key).forEach(function(keyToTest) {\n            delete self.keysDown[keyToTest];\n            if (delay) {\n                self.keysDelayed[keyToTest] = true;\n            }\n        });\n\n        if (delay) {\n            setTimeout(function() {\n                self.controls.get(key).forEach(function(keyToTest) {\n                    delete self.keysDelayed[keyToTest];\n                });\n            }, delay);\n        }\n    }\n\n    /**\n     *  Returns true if press succeeds\n     *          false if press does not succeed\n     */\n    testPressed(key, delay) {\n        delay = delay || this.defaultDelay;\n\n        const self = this;\n        let succeeded = false;\n\n        if (self.isPressed(key) && !self.isDelayed(key)) {\n            self.deleteKey(key, delay);\n            succeeded = true;\n        }\n\n        return succeeded;\n    }\n}\n\nconst controls = new Controls();\nexport default controls;","import _Action from \"../_Action\";\n\nexport default class ActionWithDirection extends _Action {\n    constructor(entity, dx = 0, dy = 0) {\n        super(entity);\n\n        this.dx = dx;\n        this.dy = dy;\n    }\n\n    perform(/*gameMap*/) {\n        console.error(\"Not Implemented\");\n    }\n}","import ActionWithDirection from \"./_ActionWithDirection\";\nimport UnableToPerformAction from \"../UnableToPerformAction\";\n\nexport default class MovementAction extends ActionWithDirection {\n    constructor(entity, dx = 0, dy = 0) {\n        super(entity, dx, dy);\n    }\n\n    perform(gameMap) {\n        const position = this.entity.getComponent(\"position\");\n        if (!position) {\n            return new UnableToPerformAction(this.entity, \"Entity doesn't have a position.\");\n        }\n\n        const destX = position.x + this.dx;\n        const destY = position.y + this.dy;\n\n        if (!gameMap.isInBounds(destX, destY)) {\n            return new UnableToPerformAction(this.entity, \"Location is outside the map!\");\n        }\n\n        const tileAction = this.tryMoveTo(gameMap, destX, destY);\n        if (!(tileAction instanceof UnableToPerformAction)) {\n            position.move(this.dx, this.dy);\n        }\n\n        return tileAction;\n    }\n\n    tryMoveTo(gameMap, destX, destY) {\n        const blockingActor = gameMap.getBlockingActorAtLocation(destX, destY);\n        if (blockingActor) {\n            return new UnableToPerformAction(this.entity, \"There's something in the way!\");\n        }\n\n        const tile = gameMap.tiles[destX][destY];\n        if (tile) {\n            const blocksMovementComponent = tile.getComponent(\"blocksMovement\");\n            if (blocksMovementComponent && blocksMovementComponent.blocksMovement) {\n                return new UnableToPerformAction(this.entity, \"There's a \" + tile.name + \" in the way!\");\n            }\n        }\n\n        return this;\n    }\n}","import ActionWithDirection from \"./_ActionWithDirection\";\nimport UnableToPerformAction from \"../UnableToPerformAction\";\nimport engine from \"../../Engine\";\nimport messageManager from \"../../message/MessageManager\";\n\nexport default class MeleeAction extends ActionWithDirection {\n    constructor(entity, dx = 0, dy = 0) {\n        super(entity, dx, dy);\n    }\n\n    perform(gameMap) {\n        const position = this.entity.getComponent(\"position\");\n        if (!position) {\n            return new UnableToPerformAction(this.entity, \"Entity doesn't have a position.\");\n        }\n\n        const destX = position.x + this.dx;\n        const destY = position.y + this.dy;\n\n        const blockingActor = gameMap.getBlockingActorAtLocation(destX, destY);\n        if (blockingActor) {\n            const entityFighter = this.entity.getComponent(\"fighter\");\n            const blockingFighter = blockingActor.getComponent(\"fighter\");\n            if (entityFighter && blockingFighter) {\n                let name;\n                let plural;\n                if (this.isPlayer()) {\n                    name = \"You\";\n                    plural = \"\";\n                } else {\n                    name = this.entity.name;\n                    plural = \"s\";\n                }\n\n                let blockingName;\n                let attackColor;\n                if (blockingActor === engine.player) {\n                    blockingName = \"You\";\n                    attackColor = \"#C00\";\n                } else {\n                    blockingName = blockingActor.name;\n                    attackColor = \"#999\";\n                }\n\n                const description = name + \" attack\" + plural + \" \" + blockingName;\n\n                const damage = entityFighter.getDamage() - blockingFighter.getBlockedDamage();\n                if (damage > 0) {\n                    messageManager.text(description + \" for \" + damage + \" hit points.\", attackColor).build();\n                    blockingFighter.takeDamage(damage);\n                } else {\n                    messageManager.text(description + \", but does no damage.\", attackColor).build();\n                }\n\n                this.entity.callEvent(\"onMeleeAttack\", blockingActor);\n            }\n        } else {\n            return new UnableToPerformAction(this.entity, \"There's nothing to attack there!\");\n        }\n    }\n}","import engine from \"../Engine\";\n\nexport default class _Component {\n    constructor(args = {}, baseType, type) {\n        this.args = args;\n        this.baseType = baseType || \"component\";\n        this.type = type || this.baseType;\n        this.parentEntity = args.parentEntity;\n\n        this.cachedSave = null;\n    }\n\n    clearSaveCache() {\n        this.cachedSave = null;\n        this.parentEntity?.clearSaveCache();\n    }\n\n    save() {\n        return null;\n    }\n\n    hasComponent() {\n        return this.args.components && this.args.components[this.type] !== undefined;\n    }\n\n    isPlayer() {\n        return this.parentEntity === engine.player;\n    }\n\n    saveBoolean(arg, defaultValue) {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {};\n        if (arg !== defaultValue) {\n            saveJson[this.type] = arg;\n        }\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    loadBooleanOrObject(name) {\n        const type = typeof this.args.components[this.type];\n        if (type === \"boolean\") {\n            return this.args.components[this.type];\n        } else if (type === \"object\") {\n            return this.args.components[this.type][name];\n        }\n    }\n\n    loadArg(name, defaultValue) {\n        return this.args.components[this.type][name] || defaultValue;\n    }\n\n    loadArgArray(name) {\n        const array = [];\n        const items = this.args.components[this.type][name].split(\",\");\n        for (const item of items) {\n            array.push(item.trim());\n        }\n\n        return array;\n    }\n}","import _Component from \"./_Component\";\n\nexport default class Fov extends _Component {\n    constructor(args) {\n        super(args, \"fov\");\n\n        this.explored = false;\n        this.visible = false;\n\n        if (this.hasComponent()) {\n            this.explored = this.loadArg(\"explored\", false);\n            this.visible = this.loadArg(\"visible\", false);\n        }\n    }\n\n    save() {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {\n            fov: {}\n        };\n\n        if (this.explored !== false) {\n            saveJson.fov.explored = this.explored;\n        }\n\n        if (this.visible !== false) {\n            saveJson.fov.visible = this.visible;\n        }\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    setExplored(explored) {\n        this.explored = explored;\n        this.clearSaveCache();\n    }\n\n    setVisible(visible) {\n        this.visible = visible;\n    }\n}","import Fov from \"../../components/Fov\";\n\nexport default class BaseFov {\n    constructor() {\n        this.previousVisibleTiles = [];\n        this.visibleTiles = [];\n        this.visibleActors = [];\n        this.visibleItems = [];\n        this.left = 0;\n        this.right = 0;\n        this.top = 0;\n        this.bottom = 0;\n    }\n\n    teardown() {\n        this.previousVisibleTiles = [];\n        this.visibleTiles = [];\n        this.visibleActors = [];\n        this.visibleItems = [];\n    }\n\n    compute(gameMap, x, y, radius) {\n        this.previousVisibleTiles = this.visibleTiles;\n        this.visibleTiles = [];\n        this.visibleActors = [];\n        this.visibleItems = [];\n\n        this.left = Math.max(0, x - radius);\n        this.right = Math.min(gameMap.width, x + radius + 1);\n        this.top = Math.max(0, y - radius);\n        this.bottom = Math.min(gameMap.height, y + radius + 1);\n    }\n\n    addVisibleTile(tile) {\n        if (this.visibleTiles.indexOf(tile) === -1) {\n            this.visibleTiles.push(tile);\n        }\n    }\n\n    addVisibleActor(object) {\n        if (this.visibleActors.indexOf(object) === -1) {\n            this.visibleActors.push(object);\n        }\n    }\n\n    addVisibleItem(object) {\n        if (this.visibleItems.indexOf(object) === -1) {\n            this.visibleItems.push(object);\n        }\n    }\n    //\n    // remove(object) {\n    //     const newIndex = this.newObjects.indexOf(object);\n    //     if (newIndex > -1) {\n    //         this.newObjects.splice(newIndex, 1);\n    //     }\n    //\n    //     const oldIndex = this.oldObjects.indexOf(object);\n    //     if (oldIndex > -1) {\n    //         this.oldObjects.splice(oldIndex, 1);\n    //     }\n    //\n    //     this.removeVisible(object);\n    // }\n    //\n    // removeVisible(object) {\n    //     const visibleIndex = this.visibleObjects.indexOf(object);\n    //     if (visibleIndex > -1 ) {\n    //         this.visibleObjects.splice(visibleIndex, 1);\n    //     }\n    //\n    //     const visibleItemsIndex = this.visibleItems.indexOf(object);\n    //     if (visibleItemsIndex > -1) {\n    //         this.visibleItems.splice(visibleItemsIndex, 1);\n    //     }\n    //\n    //     const previousVisibleItemsIndex = this.previousVisibleObjects.indexOf(object);\n    //     if (previousVisibleItemsIndex > -1) {\n    //         this.previousVisibleObjects.splice(previousVisibleItemsIndex, 1);\n    //     }\n    // }\n\n    exploreTile(gameMap, x, y) {\n        const tileArrayX =  gameMap.tiles[x];\n        if (tileArrayX) {\n            const tile = tileArrayX[y];\n\n            if (tile) {\n                this.addVisibleTile(tile);\n            }\n        }\n\n        for (const actor of gameMap.actors) {\n            const positionalObject = actor.getComponent(\"position\");\n            if (positionalObject) {\n                if (positionalObject.x === x && positionalObject.y === y) {\n                    this.addVisibleActor(actor);\n                }\n            }\n        }\n\n        for (const item of gameMap.items) {\n            const positionalObject = item.getComponent(\"position\");\n            if (positionalObject) {\n                if (positionalObject.x === x && positionalObject.y === y) {\n                    this.addVisibleItem(item);\n                }\n            }\n        }\n    }\n\n    updateMap() {\n        for (const tile of this.previousVisibleTiles) {\n            const fov = tile.getComponent(\"fov\");\n            if (fov) {\n                fov.setVisible(false);\n            }\n        }\n\n        for (const tile of this.visibleTiles) {\n            const fov = tile.getComponent(\"fov\");\n            if (fov) {\n                fov.setExplored(true);\n                fov.setVisible(true);\n            } else {\n                tile.setComponent(new Fov({components: {fov: {explored: true, visible: true}}}));\n            }\n        }\n    }\n}","export default class FovSlope {\n    constructor(y, x) {\n        this.y = y;\n        this.x = x;\n    }\n\n    greater(y, x) {\n        return this.y * x > this.x * y;\n    }\n\n    greaterOrEqual(y, x) {\n        return this.y * x >= this.x * y;\n    }\n    /*\n    less(y, x) {\n        return this.y * x < this.x * y;\n    }\n    */\n    lessOrEqual(y, x) {\n        return this.y * x <= this.x * y;\n    }\n}","import BaseFov from \"./_BaseFov\";\nimport FovSlope from \"./FovSlope\";\n\n/**\n * Credit to Adam Milazzo for this fov algorithm: http://www.adammil.net/blog/v125_roguelike_vision_algorithms.html\n */\nexport default class AdamMilazzoFov extends BaseFov {\n    constructor() {\n        super();\n    }\n\n    compute(gameMap, x, y, radius) {\n        super.compute(gameMap, x, y, radius);\n\n        this.exploreTile(gameMap, x, y);\n        for (let octant = 0; octant < 8; octant ++) {\n            this.computeOctant(gameMap, octant, x, y, radius, 1, new FovSlope(1, 1), new FovSlope(0, 1));\n        }\n    }\n\n    computeOctant(gameMap, octant, originX, originY, rangeLimit, x, top, bottom) {\n        for (; x <= rangeLimit; x++) {\n            let topY;\n            if (top.x === 1) {\n                topY = x;\n            } else {\n                topY = Math.round(((x * 2 - 1) * top.y + top.x) / (top.x * 2));\n\n                if (this.blocksLight(gameMap, octant, originX, originY, x, topY)) {\n                    if (top.greaterOrEqual(topY * 2 + 1, x * 2) && !this.blocksLight(gameMap, octant, originX, originY, x, topY + 1)) {\n                        topY ++;\n                    }\n                } else {\n                    let ax = x * 2;\n                    if (this.blocksLight(gameMap, octant, originX, originY, x + 1, topY + 1)) {\n                        ax ++;\n                    }\n\n                    if (top.greater(topY * 2 + 1, ax)) {\n                        topY ++;\n                    }\n                }\n            }\n\n            let bottomY;\n            if (bottom.y === 0) {\n                bottomY = 0;\n            } else {\n                bottomY = ((x * 2 - 1) * bottom.y + bottom.x) / (bottom.x * 2);\n\n                if (bottom.greaterOrEqual(bottomY * 2 + 1, x * 2) && this.blocksLight(gameMap, octant, originX, originY, x, bottomY) && !this.blocksLight(gameMap, octant, originX, originY, x, bottomY + 1)) {\n                    bottomY ++;\n                }\n            }\n\n            let wasOpaque = -1; // 0:false, 1:true, -1:not applicable\n            for (let y = topY; y >= bottomY; y--) {\n                const isOpaque = this.blocksLight(gameMap, octant, originX, originY, x, y);\n                const isVisible = isOpaque || ((y !== topY || top.greaterOrEqual(y, x)) && (y !== bottomY || bottom.lessOrEqual(y, x)));\n\n                if (isVisible) {\n                    this.setVisible(gameMap, octant, originX, originY, x, y);\n                }\n\n                if (x !== rangeLimit) {\n                    if (isOpaque) {\n                        if (wasOpaque === 0) {\n                            const nx = x * 2;\n                            const ny = y * 2 + 1;\n\n                            if (top.greater(ny, nx)) {\n                                if (y === bottomY) {\n                                    bottom = new FovSlope(ny, nx);\n                                    break;\n                                } else {\n                                    this.computeOctant(gameMap, octant, originX, originY, rangeLimit, x + 1, top, new FovSlope(ny, nx));\n                                }\n                            } else {\n                                if (y === bottomY) {\n                                    return;\n                                }\n                            }\n                        }\n\n                        wasOpaque = 1;\n                    } else {\n                        if (wasOpaque > 0) {\n                            const nx = x * 2;\n                            const ny = y * 2 + 1;\n\n                            if (bottom.greaterOrEqual(ny, nx)) {\n                                return;\n                            }\n\n                            top = new FovSlope(ny, nx);\n                        }\n\n                        wasOpaque = 0;\n                    }\n                }\n            }\n\n            if (wasOpaque !== 0) {\n                break;\n            }\n        }\n    }\n\n    blocksLight(gameMap, octant, originX, originY, x, y) {\n        switch(octant) {\n            case 0:\n                originX += x;\n                originY -= y;\n                break;\n            case 1:\n                originX += y;\n                originY -= x;\n                break;\n            case 2:\n                originX -= y;\n                originY -= x;\n                break;\n            case 3:\n                originX -= x;\n                originY -= y;\n                break;\n            case 4:\n                originX -= x;\n                originY += y;\n                break;\n            case 5:\n                originX -= y;\n                originY += x;\n                break;\n            case 6:\n                originX += y;\n                originY += x;\n                break;\n            case 7:\n                originX += x;\n                originY += y;\n                break;\n        }\n\n        let blocksLight = false;\n\n        const wallTiles = gameMap.tiles;\n        if (wallTiles[originX]) {\n            const wallTile = wallTiles[originX][originY];\n            if (wallTile) {\n                const blocksFov = wallTile.getComponent(\"blocksFov\");\n                if (blocksFov) {\n                    blocksLight = blocksFov.blocksFov;\n                }\n            }\n        }\n\n        return blocksLight;\n    }\n\n    setVisible(gameMap, octant, originX, originY, x, y) {\n        switch(octant) {\n            case 0:\n                originX += x;\n                originY -= y;\n                break;\n            case 1:\n                originX += y;\n                originY -= x;\n                break;\n            case 2:\n                originX -= y;\n                originY -= x;\n                break;\n            case 3:\n                originX -= x;\n                originY -= y;\n                break;\n            case 4:\n                originX -= x;\n                originY += y;\n                break;\n            case 5:\n                originX -= y;\n                originY += x;\n                break;\n            case 6:\n                originX += y;\n                originY += x;\n                break;\n            case 7:\n                originX += x;\n                originY += y;\n                break;\n        }\n\n        this.exploreTile(gameMap, originX, originY);\n    }\n}","/**\n * Adapted from http://youmightnotneedjquery.com/\n */\nexport default class Extend {\n    constructor() {}\n\n    static extend(out) {\n        out = out || {};\n\n        for (let i = 1; i < arguments.length; i++) {\n            if (!arguments[i]) {\n                continue;\n            }\n\n            for (const key in arguments[i]) {\n                if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n                    out[key] = arguments[i][key];\n                }\n            }\n        }\n\n        return out;\n    }\n\n    static deep(out) {\n        out = out || {};\n\n        for (let i = 1; i < arguments.length; i++) {\n            const obj = arguments[i];\n\n            if (!obj) {\n                continue;\n            }\n\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    if (typeof obj[key] === \"object\") {\n                        if (obj[key] instanceof Array) {\n                            out[key] = obj[key].slice(0);\n                        } else {\n                            out[key] = Extend.deep(out[key], obj[key]);\n                        }\n                    } else {\n                        if (typeof out === \"boolean\" && out[key] === undefined) {\n                            out = obj[key];\n                        } else {\n                            out[key] = obj[key];\n                        }\n                    }\n                }\n            }\n        }\n\n        return out;\n    }\n}","import _Component from \"../_Component\";\n\nexport default class _AI extends _Component {\n    constructor(args = {}, type) {\n        super(args, \"ai\", type);\n    }\n\n    save() {\n        return super.save();\n    }\n\n    perform(/*gameMap*/) {\n        console.error(\"Not Implemented\");\n    }\n}","import _AI from \"./_AI\";\n\nexport default class AIDead extends _AI {\n    constructor(args = {}) {\n        super(args, \"aiDead\");\n\n        this.previousAI = \"\";\n\n        if (this.hasComponent()) {\n            this.previousAI = this.loadArg(\"previousAI\", \"\");\n        }\n    }\n\n    save() {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {\n            aiDead: {}\n        };\n\n        saveJson.aiDead.previousAI = this.previousAI;\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    perform(/*gameMap*/) {}\n}","import html from \"../../html/ui/HeroInfo.html\";\nimport _UIElement from \"./_UIElement\";\n\nclass HeroInfo extends _UIElement {\n    constructor() {\n        super(html);\n\n        this.statusMessageDom = this.dom.getElementsByClassName(\"hero-status__message\")[0];\n        this.healthFgDom = this.dom.getElementsByClassName(\"hero-health__fg\")[0];\n        this.healthTextDom = this.dom.getElementsByClassName(\"hero-health__text\")[0];\n        this.powerDom = this.dom.getElementsByClassName(\"hero-power\")[0];\n        this.defenseDom = this.dom.getElementsByClassName(\"hero-defense\")[0];\n        this.inventoryDom = this.dom.getElementsByClassName(\"hero-inventory\")[0];\n    }\n\n    updateStatus(status) {\n        this.statusMessageDom.innerText = status;\n    }\n\n    updateHealth(current, max) {\n        const percent = current / max * 100;\n        this.healthFgDom.style.width = percent + \"%\";\n        this.healthTextDom.innerText = \"HP: \" + current + \" / \" + max;\n    }\n\n    updatePower(power) {\n        this.powerDom.innerText = power;\n    }\n\n    updateDefense(defense) {\n        this.defenseDom.innerText = defense;\n    }\n\n    updateInventory() {\n\n    }\n}\n\nconst heroInfo = new HeroInfo();\nexport default heroInfo;","import _Component from \"./_Component\";\n\nexport default class Position extends _Component {\n    constructor(args = {}) {\n        super(args, \"position\");\n\n        this.x = 0;\n        this.y = 0;\n\n        if (this.hasComponent()) {\n            this.x = this.loadArg(\"x\", 0);\n            this.y = this.loadArg(\"y\", 0);\n        }\n    }\n\n    save() {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {\n            position: {}\n        };\n\n        saveJson.position.x = this.x;\n        saveJson.position.y = this.y;\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    moveTo(newX, newY) {\n        this.x = newX;\n        this.y = newY;\n\n        this.clearSaveCache();\n    }\n\n    move(xOffset, yOffset) {\n        this.x += xOffset;\n        this.y += yOffset;\n\n        this.clearSaveCache();\n    }\n\n    setX(newX) {\n        this.x = newX;\n        this.clearSaveCache();\n    }\n\n    setY(newY) {\n        this.y = newY;\n        this.clearSaveCache();\n    }\n}","export default class MathUtil {\n    constructor() {\n\n    }\n\n    static randomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    }\n\n    static randomNumber(min, max) {\n        return Math.random() * (max - min) + min;\n    }\n}","import _Action from \"./_Action\";\n\nexport default class WaitAction extends _Action {\n    constructor(entity) {\n        super(entity);\n    }\n\n    perform(/*gameMap*/) {\n        return this;\n    }\n}","import MovementAction from \"./actionWithDirection/MovementAction\";\nimport Action from \"./_Action\";\nimport WaitAction from \"./WaitAction\";\nimport MathUtil from \"../util/MathUtil\";\n\nexport default class WanderAction extends Action {\n    constructor(entity) {\n        super(entity);\n    }\n\n    perform(gameMap) {\n        const x = MathUtil.randomInt(-1, 1);\n        const y = MathUtil.randomInt(-1, 1);\n\n        if (x === 0 && y === 0) {\n            return new WaitAction(this.entity).perform(gameMap);\n        } else {\n            return new MovementAction(this.entity, x, y).perform(gameMap);\n        }\n    }\n}","export default class BinaryHeap {\n    constructor(scoreFunction) {\n        this.content = [];\n        this.scoreFunction = scoreFunction;\n    }\n\n    push(element) {\n        // Add the new element to the end of the array.\n        this.content.push(element);\n\n        // Allow it to sink down.\n        this.sinkDown(this.content.length - 1);\n    }\n\n    pop() {\n        // Store the first element so we can return it later.\n        const result = this.content[0];\n        // Get the element at the end of the array.\n        const end = this.content.pop();\n        // If there are any elements left, put the end element at the\n        // start, and let it bubble up.\n        if (this.content.length > 0) {\n            this.content[0] = end;\n            this.bubbleUp(0);\n        }\n        return result;\n    }\n\n    remove(node) {\n        const i = this.content.indexOf(node);\n\n        // When it is found, the process seen in 'pop' is repeated\n        // to fill up the hole.\n        const end = this.content.pop();\n\n        if (i !== this.content.length - 1) {\n            this.content[i] = end;\n\n            if (this.scoreFunction(end) < this.scoreFunction(node)) {\n                this.sinkDown(i);\n            } else {\n                this.bubbleUp(i);\n            }\n        }\n    }\n    size() {\n        return this.content.length;\n    }\n\n    rescoreElement(node) {\n        this.sinkDown(this.content.indexOf(node));\n    }\n\n    sinkDown(n) {\n        // Fetch the element that has to be sunk.\n        const element = this.content[n];\n\n        // When at 0, an element can not sink any further.\n        while (n > 0) {\n            // Compute the parent element's index, and fetch it.\n            const parentN = ((n + 1) >> 1) - 1;\n            const parent = this.content[parentN];\n            // Swap the elements if the parent is greater.\n            if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n                this.content[parentN] = element;\n                this.content[n] = parent;\n                // Update 'n' to continue at the new position.\n                n = parentN;\n            }\n            // Found a parent that is less, no need to sink any further.\n            else {\n                break;\n            }\n        }\n    }\n\n    bubbleUp(n) {\n        // Look up the target element and its score.\n        const length = this.content.length;\n        const element = this.content[n];\n        const elemScore = this.scoreFunction(element);\n\n        let isDone = false;\n        while (!isDone) {\n            // Compute the indices of the child elements.\n            const child2N = (n + 1) << 1;\n            const child1N = child2N - 1;\n            // This is used to store the new position of the element, if any.\n            let swap = null;\n            let child1Score;\n            // If the first child exists (is inside the array)...\n            if (child1N < length) {\n                // Look it up and compute its score.\n                const child1 = this.content[child1N];\n                child1Score = this.scoreFunction(child1);\n\n                // If the score is less than our element's, we need to swap.\n                if (child1Score < elemScore) {\n                    swap = child1N;\n                }\n            }\n\n            // Do the same checks for the other child.\n            if (child2N < length) {\n                const child2 = this.content[child2N];\n                const child2Score = this.scoreFunction(child2);\n                if (child2Score < (swap === null ? elemScore : child1Score)) {\n                    swap = child2N;\n                }\n            }\n\n            // If the element needs to be moved, swap it, and continue.\n            if (swap !== null) {\n                this.content[n] = this.content[swap];\n                this.content[swap] = element;\n                n = swap;\n            } else { // Otherwise, we are done.\n                isDone = true;\n                break;\n            }\n        }\n    }\n}","// Modified from http://github.com/bgrins/javascript-astar\nimport BinaryHeap from \"./BinaryHeap\";\n\nexport default class AStar {\n    constructor() {}\n\n    static pathTo(node) {\n        let curr = node;\n        const path = [];\n        while (curr.parent) {\n            path.unshift(curr);\n            curr = curr.parent;\n        }\n        return path;\n    }\n\n    static getHeap() {\n        return new BinaryHeap(function(node) {\n            return node.f;\n        });\n    }\n\n    /**\n     * Perform an A* Search on a graph given a start and end node.\n     * @param {Graph} graph\n     * @param {GridNode} start\n     * @param {GridNode} end\n     * @param {Object} [options]\n     * @param {boolean} [options.closest] Specifies whether to return the\n     path to the closest node if the target is unreachable.\n     * @param {string} [options.heuristic] Heuristic function (see\n     *          astar.heuristics).\n     */\n    static search(graph, start, end, options) {\n        graph.cleanDirty();\n        options = options || {};\n        this.heuristicType = options.heuristic || \"manhattan\";\n        const closest = options.closest || false;\n\n        const openHeap = this.getHeap();\n        let closestNode = start; // set the start node to be the closest if required\n\n        if (this.heuristicType === \"manhattan\") {\n            start.h = this.heuristicManhattan(start, end);\n        } else if (this.heuristicType === \"diagonal\") {\n            this.heuristicDiagonal(start, end);\n        }\n        graph.markDirty(start);\n\n        openHeap.push(start);\n\n        while (openHeap.size() > 0) {\n            // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n            const currentNode = openHeap.pop();\n\n            // End case -- result has been found, return the traced path.\n            if (currentNode === end) {\n                return this.pathTo(currentNode);\n            }\n\n            // Normal case -- move currentNode from open to closed, process each of its neighbors.\n            currentNode.closed = true;\n\n            // Find all neighbors for the current node.\n            const neighbors = graph.neighbors(currentNode);\n\n            for (let i = 0, il = neighbors.length; i < il; ++i) {\n                const neighbor = neighbors[i];\n                if (neighbor.closed || neighbor.isWall()) {\n                    // Not a valid node to process, skip to next neighbor.\n                    continue;\n                }\n\n                // The g score is the shortest distance from start to current node.\n                // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n                const gScore = currentNode.g + neighbor.getCost(currentNode);\n                const beenVisited = neighbor.visited;\n\n                if (!beenVisited || gScore < neighbor.g) {\n                    // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n                    neighbor.visited = true;\n                    neighbor.parent = currentNode;\n\n                    if (this.heuristicType === \"manhattan\") {\n                        neighbor.h = neighbor.h || this.heuristicManhattan(neighbor, end);\n                    } else if (this.heuristicType === \"diagonal\") {\n                        neighbor.h = neighbor.h || this.heuristicDiagonal(neighbor, end);\n                    }\n                    neighbor.g = gScore;\n                    neighbor.f = neighbor.g + neighbor.h;\n                    graph.markDirty(neighbor);\n                    if (closest) {\n                        // If the neighbour is closer than the current closestNode or if it's equally close but has\n                        // a cheaper path than the current closest node then it becomes the closest node\n                        if (neighbor.h < closestNode.h || (neighbor.h === closestNode.h && neighbor.g < closestNode.g)) {\n                            closestNode = neighbor;\n                        }\n                    }\n\n                    if (!beenVisited) {\n                        // Pushing to heap will put it in proper place based on the 'f' value.\n                        openHeap.push(neighbor);\n                    } else {\n                        // Already seen the node, but since it has been rescored we need to reorder it in the heap\n                        openHeap.rescoreElement(neighbor);\n                    }\n                }\n            }\n        }\n\n        if (closest) {\n            return this.pathTo(closestNode);\n        }\n\n        // No result was found - empty array signifies failure to find path.\n        return [];\n    }\n    // See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html\n    static heuristicManhattan(pos0, pos1) {\n        const d1 = Math.abs(pos1.x - pos0.x);\n        const d2 = Math.abs(pos1.y - pos0.y);\n        return d1 + d2;\n    }\n\n    static heuristicDiagonal(pos0, pos1) {\n        const D = 1;\n        const D2 = Math.sqrt(2);\n        const d1 = Math.abs(pos1.x - pos0.x);\n        const d2 = Math.abs(pos1.y - pos0.y);\n        return (D * (d1 + d2)) + ((D2 - (2 * D)) * Math.min(d1, d2));\n    }\n\n    static cleanNode(node) {\n        node.f = 0;\n        node.g = 0;\n        node.h = 0;\n        node.visited = false;\n        node.closed = false;\n        node.parent = null;\n    }\n}","export default class GridNode {\n    constructor(x, y, weight) {\n        this.x = x;\n        this.y = y;\n        this.weight = weight;\n    }\n\n    toString() {\n        return \"[\" + this.x + \" \" + this.y + \"]\";\n    }\n\n    getCost(fromNeighbor) {\n        // Take diagonal weight into consideration.\n        if (fromNeighbor && fromNeighbor.x !== this.x && fromNeighbor.y !== this.y) {\n            return this.weight * 1.41421;\n        }\n        return this.weight;\n    }\n\n    isWall() {\n        return this.weight === 0;\n    }\n}","import AStar from \"./AStar\";\nimport GridNode from \"./GridNode\";\n\nexport default class Graph {\n    /**\n     * A graph memory structure\n     * @param {Array} gridIn 2D array of input weights\n     * @param {Object} [options]\n     * @param {bool} [options.diagonal] Specifies whether diagonal moves are allowed\n     */\n    constructor(gridIn, options) {\n        options = options || {};\n        this.nodes = [];\n        this.diagonal = !!options.diagonal;\n        this.grid = [];\n        for (let x = 0; x < gridIn.length; x++) {\n            this.grid[x] = [];\n\n            for (let y = 0, row = gridIn[x]; y < row.length; y++) {\n                const node = new GridNode(x, y, row[y]);\n                this.grid[x][y] = node;\n                this.nodes.push(node);\n            }\n        }\n        this.init();\n    }\n\n    init() {\n        this.dirtyNodes = [];\n        for (let i = 0; i < this.nodes.length; i++) {\n            AStar.cleanNode(this.nodes[i]);\n        }\n    }\n\n    cleanDirty() {\n        for (let i = 0; i < this.dirtyNodes.length; i++) {\n            AStar.cleanNode(this.dirtyNodes[i]);\n        }\n        this.dirtyNodes = [];\n    }\n\n    markDirty(node) {\n        this.dirtyNodes.push(node);\n    }\n\n    neighbors(node) {\n        const ret = [];\n        const x = node.x;\n        const y = node.y;\n        const grid = this.grid;\n\n        // West\n        if (grid[x - 1] && grid[x - 1][y]) {\n            ret.push(grid[x - 1][y]);\n        }\n\n        // East\n        if (grid[x + 1] && grid[x + 1][y]) {\n            ret.push(grid[x + 1][y]);\n        }\n\n        // South\n        if (grid[x] && grid[x][y - 1]) {\n            ret.push(grid[x][y - 1]);\n        }\n\n        // North\n        if (grid[x] && grid[x][y + 1]) {\n            ret.push(grid[x][y + 1]);\n        }\n\n        if (this.diagonal) {\n            // Southwest\n            if (grid[x - 1] && grid[x - 1][y - 1]) {\n                ret.push(grid[x - 1][y - 1]);\n            }\n\n            // Southeast\n            if (grid[x + 1] && grid[x + 1][y - 1]) {\n                ret.push(grid[x + 1][y - 1]);\n            }\n\n            // Northwest\n            if (grid[x - 1] && grid[x - 1][y + 1]) {\n                ret.push(grid[x - 1][y + 1]);\n            }\n\n            // Northeast\n            if (grid[x + 1] && grid[x + 1][y + 1]) {\n                ret.push(grid[x + 1][y + 1]);\n            }\n        }\n\n        return ret;\n    }\n\n    toString() {\n        const graphString = [];\n        const nodes = this.grid;\n        for (let x = 0; x < nodes.length; x++) {\n            const rowDebug = [];\n            const row = nodes[x];\n            for (let y = 0; y < row.length; y++) {\n                rowDebug.push(row[y].weight);\n            }\n            graphString.push(rowDebug.join(\" \"));\n        }\n        return graphString.join(\"\\n\");\n    }\n}\n","import _AI from \"./_AI\";\nimport HeroInfo from \"../../ui/HeroInfo\";\nimport Position from \"../Position\";\nimport AdamMilazzoFov from \"../../map/fov/AdamMilazzoFov\";\nimport MathUtil from \"../../util/MathUtil\";\nimport MeleeAction from \"../../actions/actionWithDirection/MeleeAction\";\nimport WanderAction from \"../../actions/WanderAction\";\nimport Graph from \"../../pathfinding/Graph\";\nimport AStar from \"../../pathfinding/AStar\";\nimport BumpAction from \"../../actions/actionWithDirection/BumpAction\";\nimport WaitAction from \"../../actions/WaitAction\";\n\nexport default class AIHero extends _AI {\n    constructor(args = {}) {\n        super(args, \"aiHero\");\n\n        this.fov = new AdamMilazzoFov();\n        this.chaseLocation = null;\n        this.radius = 10;\n        this.movementActions = 1;\n        this.currentMovement = 0;\n\n        this.turnsToEnterDungeon = 30;\n        this.status = \"Hero will arrive in \" + this.turnsToEnterDungeon + \" turns.\";\n\n        if (this.hasComponent()) {\n            this.radius = this.loadArg(\"radius\", 10);\n            this.movementActions = this.loadArg(\"movementActions\", 1);\n            this.currentMovement = this.loadArg(\"currentMovement\", 0);\n            this.turnsToEnterDungeon = this.loadArg(\"turnsToEnterDungeon\", 30);\n            this.status = this.loadArg(\"status\", \"Hero will arrive in \" + this.turnsToEnterDungeon + \" turns.\");\n        }\n\n        this.updateUIStatus();\n    }\n\n    save() {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {\n            aiHero: {}\n        };\n\n        if (this.radius !== 10) {\n            saveJson.aiHero.radius = this.radius;\n        }\n\n        if (this.movementActions !== 1) {\n            saveJson.aiHero.movementActions = this.movementActions;\n        }\n\n        if (this.currentMovement !== 0) {\n            saveJson.aiHero.currentMovement = this.currentMovement;\n        }\n\n        saveJson.aiHero.turnsToEnterDungeon = this.turnsToEnterDungeon;\n        saveJson.aiHero.status = this.status;\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    decreaseTurnsToEnterDungeon() {\n        this.turnsToEnterDungeon --;\n\n        this.clearSaveCache();\n    }\n\n    setStatus(newStatus) {\n        this.status = newStatus;\n\n        this.updateUIStatus();\n        this.clearSaveCache();\n    }\n\n    updateUIStatus() {\n        HeroInfo.updateStatus(this.status);\n    }\n\n    perform(gameMap) {\n        const entity = this.parentEntity;\n\n        if (this.turnsToEnterDungeon > 0) {\n            this.decreaseTurnsToEnterDungeon();\n            this.setStatus(\"Hero will arrive in \" + this.turnsToEnterDungeon + \" turns.\");\n        } else if (this.turnsToEnterDungeon === 0) {\n            entity.setComponent(new Position({components: {position: {x: 5, y: 0}}}));\n            this.decreaseTurnsToEnterDungeon();\n\n            this.setStatus(\"Hero has entered the dungeon!\");\n        } else {\n            // TODO: Loot, Escape Room\n\n            const entityPosition = entity.getComponent(\"position\");\n            if (entityPosition) {\n                this.fov.compute(gameMap, entityPosition.x, entityPosition.y, this.radius);\n\n                let closestEnemies = [];\n                let closestDistance = null;\n                const entityFaction = entity.getComponent(\"faction\");\n                if (entityFaction) {\n                    for (const actor of this.fov.visibleActors) {\n                        if (actor.isAlive()) {\n                            const actorFaction = actor.getComponent(\"faction\");\n                            if (entityFaction.isEnemyOf(actorFaction)) {\n                                const actorPosition = actor.getComponent(\"position\");\n\n                                if (actorPosition) {\n                                    const dx = Math.abs(actorPosition.x - entityPosition.x);\n                                    const dy = Math.abs(actorPosition.y - entityPosition.y);\n                                    const distance = Math.max(dx, dy);\n\n                                    if (closestDistance === null || distance < closestDistance) {\n                                        closestEnemies = [];\n                                        closestEnemies.push(actor);\n                                        closestDistance = distance;\n                                    } else if (distance === closestDistance) {\n                                        closestEnemies.push(actor);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n                let closestEnemy;\n                if (closestEnemies.length === 1) {\n                    closestEnemy = closestEnemies[0];\n                } else if (closestEnemies.length > 1) {\n                    const index = MathUtil.randomInt(0, closestEnemies.length - 1);\n                    closestEnemy = closestEnemies[index];\n                }\n\n                if (closestEnemy) {\n                    const closestEnemyPosition = closestEnemy.getComponent(\"position\");\n                    this.chaseLocation = {\n                        x: closestEnemyPosition.x,\n                        y: closestEnemyPosition.y\n                    };\n\n                    if (closestDistance <= 1) {\n                        this.setStatus(\"Hero is fighting \" + closestEnemy.name + \"!\");\n                        return new MeleeAction(entity, closestEnemyPosition.x - entityPosition.x, closestEnemyPosition.y - entityPosition.y).perform(gameMap);\n                    } else {\n                        this.setStatus(\"Hero is moving to attack \" + closestEnemy.name + \".\");\n                    }\n                } else {\n                    if (this.chaseLocation !== null && this.chaseLocation.x === entityPosition.x && this.chaseLocation.y === entityPosition.y) {\n                        this.chaseLocation = null;\n                    }\n\n                    if (this.chaseLocation === null) {\n                        return new WanderAction(entity).perform(gameMap);\n                    }\n                }\n\n                this.currentMovement += this.movementActions;\n\n                if (this.currentMovement >= 1) {\n                    // Move towards enemy\n                    const fovWidth = this.fov.right - this.fov.left;\n                    const fovHeight = this.fov.bottom - this.fov.top;\n                    const cost = Array(fovWidth).fill().map(() => Array(fovHeight).fill(0));\n\n                    for (let i = this.fov.left; i < this.fov.right; i++) {\n                        for (let j = this.fov.top; j < this.fov.bottom; j++) {\n                            const tile = gameMap.tiles[i][j];\n                            if (tile) {\n                                const blocksMovementComponent = tile.getComponent(\"blocksMovement\");\n                                if (blocksMovementComponent && blocksMovementComponent.blocksMovement) {\n                                    continue;\n                                }\n\n                                cost[i - this.fov.left][j - this.fov.top] += 10;\n                            }\n                        }\n                    }\n\n                    for (const actor of this.fov.visibleActors) {\n                        if (actor.isAlive()) {\n                            const actorPosition = actor.getComponent(\"position\");\n                            if (actorPosition) {\n                                cost[actorPosition.x - this.fov.left][actorPosition.y - this.fov.top] += 100;\n                            }\n                        }\n                    }\n\n                    const costGraph = new Graph(cost, {diagonal: true});\n\n                    const start = costGraph.grid[entityPosition.x - this.fov.left][entityPosition.y - this.fov.top];\n                    const end = costGraph.grid[this.chaseLocation.x - this.fov.left][this.chaseLocation.y - this.fov.top];\n                    const path = AStar.search(costGraph, start, end);\n                    let lastAction;\n                    while (this.currentMovement >= 1) {\n                        if (path && path.length > 0) {\n                            const next = path.shift();\n                            if (next) {\n                                lastAction = new BumpAction(entity, next.x + this.fov.left - entityPosition.x, next.y + this.fov.top - entityPosition.y).perform(gameMap);\n                            }\n                        } else {\n                            lastAction = new WaitAction(entity).perform(gameMap);\n                        }\n\n                        this.currentMovement -= 1;\n                    }\n\n                    return lastAction;\n                }\n            }\n        }\n    }\n}","import AI from \"./_AI\";\nimport AdamMilazzoFov from \"../../map/fov/AdamMilazzoFov\";\nimport WanderAction from \"../../actions/WanderAction\";\nimport MeleeAction from \"../../actions/actionWithDirection/MeleeAction\";\nimport AStar from \"../../pathfinding/AStar\";\nimport Graph from \"../../pathfinding/Graph\";\nimport WaitAction from \"../../actions/WaitAction\";\nimport BumpAction from \"../../actions/actionWithDirection/BumpAction\";\nimport MathUtil from \"../../util/MathUtil\";\n\nexport default class AIMeleeChase extends AI {\n    constructor(args = {}) {\n        super(args, \"aiMeleeChase\");\n\n        this.fov = new AdamMilazzoFov();\n        this.chaseLocation = null;\n        this.radius = 5;\n        this.movementActions = 1;\n        this.currentMovement = 0;\n\n        if (this.hasComponent()) {\n            this.radius = this.loadArg(\"radius\", 5);\n            this.movementActions = this.loadArg(\"movementActions\", 1);\n            this.currentMovement = this.loadArg(\"currentMovement\", 0);\n        }\n    }\n\n    save() {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {\n            \"aiMeleeChase\": {}\n        };\n\n        if (this.radius !== 5) {\n            saveJson.aiMeleeChase.radius = this.radius;\n        }\n\n        if (this.movementActions !== 1) {\n            saveJson.aiMeleeChase.movementActions = this.movementActions;\n        }\n\n        if (this.currentMovement !== 0) {\n            saveJson.aiMeleeChase.currentMovement = this.currentMovement;\n        }\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    perform(gameMap) {\n        const entity = this.parentEntity;\n        const entityPosition = entity.getComponent(\"position\");\n        if (entityPosition) {\n            this.fov.compute(gameMap, entityPosition.x, entityPosition.y, this.radius);\n\n            let closestEnemies = [];\n            let closestDistance = null;\n            const entityFaction = entity.getComponent(\"faction\");\n            if (entityFaction) {\n                for (const actor of this.fov.visibleActors) {\n                    if (actor.isAlive()) {\n                        const actorFaction = actor.getComponent(\"faction\");\n                        if (entityFaction.isEnemyOf(actorFaction)) {\n                            const actorPosition = actor.getComponent(\"position\");\n\n                            if (actorPosition) {\n                                const dx = Math.abs(actorPosition.x - entityPosition.x);\n                                const dy = Math.abs(actorPosition.y - entityPosition.y);\n                                const distance = Math.max(dx, dy);\n\n                                if (closestDistance === null || distance < closestDistance) {\n                                    closestEnemies = [];\n                                    closestEnemies.push(actor);\n                                    closestDistance = distance;\n                                } else if (distance === closestDistance) {\n                                    closestEnemies.push(actor);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            let closestEnemy;\n            if (closestEnemies.length === 1) {\n                closestEnemy = closestEnemies[0];\n            } else if (closestEnemies.length > 1) {\n                const index = MathUtil.randomInt(0, closestEnemies.length - 1);\n                closestEnemy = closestEnemies[index];\n            }\n\n            if (closestEnemy) {\n                const closestEnemyPosition = closestEnemy.getComponent(\"position\");\n                this.chaseLocation = {\n                    x: closestEnemyPosition.x,\n                    y: closestEnemyPosition.y\n                };\n\n                if (closestDistance <= 1) {\n                    return new MeleeAction(entity, closestEnemyPosition.x - entityPosition.x, closestEnemyPosition.y - entityPosition.y).perform(gameMap);\n                }\n            } else {\n                if (this.chaseLocation !== null && this.chaseLocation.x === entityPosition.x && this.chaseLocation.y === entityPosition.y) {\n                    this.chaseLocation = null;\n                }\n\n                if (this.chaseLocation === null) {\n                    return new WanderAction(entity).perform(gameMap);\n                }\n            }\n\n            this.currentMovement += this.movementActions;\n\n            if (this.currentMovement >= 1) {\n                // Move towards enemy\n                const fovWidth = this.fov.right - this.fov.left;\n                const fovHeight = this.fov.bottom - this.fov.top;\n                const cost = Array(fovWidth).fill().map(() => Array(fovHeight).fill(0));\n\n                for (let i = this.fov.left; i < this.fov.right; i++) {\n                    for (let j = this.fov.top; j < this.fov.bottom; j++) {\n                        const tile = gameMap.tiles[i][j];\n                        if (tile) {\n                            const blocksMovementComponent = tile.getComponent(\"blocksMovement\");\n                            if (blocksMovementComponent && blocksMovementComponent.blocksMovement) {\n                                continue;\n                            }\n\n                            cost[i - this.fov.left][j - this.fov.top] += 10;\n                        }\n                    }\n                }\n\n                for (const actor of this.fov.visibleActors) {\n                    if (actor.isAlive()) {\n                        const actorPosition = actor.getComponent(\"position\");\n                        if (actorPosition) {\n                            cost[actorPosition.x - this.fov.left][actorPosition.y - this.fov.top] += 100;\n                        }\n                    }\n                }\n\n                const costGraph = new Graph(cost, {diagonal: true});\n\n                const start = costGraph.grid[entityPosition.x - this.fov.left][entityPosition.y - this.fov.top];\n                const end = costGraph.grid[this.chaseLocation.x - this.fov.left][this.chaseLocation.y - this.fov.top];\n                const path = AStar.search(costGraph, start, end);\n                let lastAction;\n                while (this.currentMovement >= 1) {\n                    if (path && path.length > 0) {\n                        const next = path.shift();\n                        if (next) {\n                            lastAction = new BumpAction(entity, next.x + this.fov.left - entityPosition.x, next.y + this.fov.top - entityPosition.y).perform(gameMap);\n                        }\n                    } else {\n                        lastAction = new WaitAction(entity).perform(gameMap);\n                    }\n\n                    this.currentMovement -= 1;\n                }\n\n                return lastAction;\n            }\n        }\n    }\n}","import _Component from \"./_Component\";\n\nexport default class BlocksFov extends _Component {\n    constructor(args = {}) {\n        super(args, \"blocksFov\");\n\n        this.blocksFov = false;\n\n        if (this.hasComponent()) {\n            this.blocksFov = this.loadBooleanOrObject(\"blocksFov\");\n        }\n    }\n\n    save() {\n        return this.saveBoolean(this.blocksFov, false);\n    }\n\n}","import _Component from \"./_Component\";\n\nexport default class BlocksMovement extends _Component {\n    constructor(args = {}) {\n        super(args, \"blocksMovement\");\n\n        // Whether the entity prevents movement\n        this.blocksMovement = false;\n\n        if (this.hasComponent()) {\n            this.blocksMovement = this.loadBooleanOrObject(\"blocksMovement\");\n        }\n    }\n\n    save() {\n        return this.saveBoolean(this.blocksMovement, false);\n    }\n\n    onEntityDeath() {\n        this.blocksMovement = false;\n\n        this.clearSaveCache();\n    }\n}","import _Component from \"./_Component\";\n\nexport default class Cleanable extends _Component {\n    constructor(args = {}) {\n        super(args, \"cleanable\");\n\n        this.decreasesTo = \"\";\n        this.increasesTo = \"\";\n\n        if (this.hasComponent()) {\n            this.decreasesTo = this.loadArg(\"decreasesTo\", \"\");\n            this.increasesTo = this.loadArg(\"increasesTo\", \"\");\n        }\n    }\n\n    save() {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {\n            cleanable: {}\n        };\n\n        saveJson.cleanable.decreasesTo = this.decreasesTo;\n        saveJson.cleanable.increasesTo = this.increasesTo;\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    perform() {}\n}","import _Component from \"./_Component\";\n\nexport default class Faction extends _Component {\n    constructor(args = {}) {\n        super(args, \"faction\");\n\n        this.factions = [];\n        this.enemies = [];\n\n        if (this.hasComponent()) {\n            this.factions = this.loadArgArray(\"factions\");\n            this.enemies = this.loadArgArray(\"enemies\");\n        }\n    }\n\n    save() {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {\n            faction: {}\n        };\n\n        saveJson.faction.factions = this.factions.toString();\n        saveJson.faction.enemies = this.enemies.toString();\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    /**\n     *\n     * @param {Faction} otherFaction\n     */\n    isEnemyOf(otherFaction) {\n        if (!otherFaction) {\n            return false;\n        }\n\n        for (const faction of this.factions) {\n            if (otherFaction.enemies.indexOf(faction) > -1) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}","import html from \"../../html/ui/PlayerInfo.html\";\nimport _UIElement from \"./_UIElement\";\n\nclass PlayerInfo extends _UIElement {\n    constructor() {\n        super(html);\n\n        this.healthFgDom = this.dom.getElementsByClassName(\"player-health__fg\")[0];\n        this.healthTextDom = this.dom.getElementsByClassName(\"player-health__text\")[0];\n        this.powerDom = this.dom.getElementsByClassName(\"player-power\")[0];\n        this.defenseDom = this.dom.getElementsByClassName(\"player-defense\")[0];\n    }\n\n    updateHealth(current, max) {\n        const percent = current / max * 100;\n        this.healthFgDom.style.width = percent + \"%\";\n        this.healthTextDom.innerText = \"HP: \" + current + \" / \" + max;\n    }\n\n    updatePower(power) {\n        this.powerDom.innerText = power;\n    }\n\n    updateDefense(defense) {\n        this.defenseDom.innerText = defense;\n    }\n}\n\nconst playerInfo = new PlayerInfo();\nexport default playerInfo;","import _Component from \"./_Component\";\nimport AIDead from \"./ai/AIDead\";\nimport messageManager from \"../message/MessageManager\";\nimport playerInfo from \"../ui/PlayerInfo\";\nimport MathUtil from \"../util/MathUtil\";\nimport heroInfo from \"../ui/HeroInfo\";\n\nexport default class Fighter extends _Component {\n    constructor(args) {\n        super(args, \"fighter\");\n\n        this.baseHp = 0;\n        this.hp = null;\n        this.baseDefense = 0;\n        this.baseDamage = 0;\n\n        if (this.hasComponent()) {\n            this.baseHp = this.loadArg(\"baseHp\", 0);\n            this.hp = this.loadArg(\"hp\", null);\n            this.baseDefense = this.loadArg(\"baseDefense\", 0);\n            this.baseDamage = this.loadArg(\"baseDamage\", 0);\n        }\n\n        this.minDamage = 0;\n        this.maxDamage = 0;\n        this.defense = 0;\n    }\n\n    save() {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {\n            fighter: {}\n        };\n\n        saveJson.fighter.baseHp = this.baseHp;\n        saveJson.fighter.hp = this.hp;\n        saveJson.fighter.maxHp = this.maxHp;\n        saveJson.fighter.baseDefense = this.baseDefense;\n        saveJson.fighter.baseDamage = this.baseDamage;\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    setHp(newHp) {\n        this.hp = Math.max(0, Math.min(newHp, this.maxHp));\n        this.updateUI();\n        this.clearSaveCache();\n    }\n\n    heal(amount) {\n        if (this.hp === this.maxHp) {\n            return 0;\n        }\n\n        const newHp = Math.min(this.maxHp, this.hp + amount);\n        const healedHp = newHp - this.hp;\n        this.setHp(newHp);\n\n        return healedHp;\n    }\n\n    takeDamage(damage) {\n        this.setHp(this.hp - damage);\n\n        if (this.hp <= 0) {\n            this.die();\n        }\n    }\n\n    die() {\n        const entity = this.parentEntity;\n        if (this.isPlayer()) {\n            messageManager.text(\"You died!\", \"#f00\").build();\n        } else {\n            messageManager.text(entity.name + \" dies!\", \"#ffa030\").build();\n        }\n\n        entity.callEvent(\"onEntityDeath\");\n\n        const ai = entity.getComponent(\"ai\");\n        if (ai) {\n            const aiArgs = {\n                components: {\n                    aiDead: {\n                        previousAI: ai.type\n                    }\n                }\n            };\n\n            entity.removeComponent(\"ai\");\n            entity.setComponent(new AIDead(aiArgs));\n        }\n\n        entity.sprite = \"rltiles_corpse\";\n        entity.name = \"Corpse of \" + this.name;\n\n        this.clearSaveCache();\n    }\n\n    getDamage() {\n        if (this.minDamage === this.maxDamage) {\n            return this.minDamage;\n        } else {\n            return MathUtil.randomInt(this.minDamage, this.maxDamage);\n        }\n    }\n\n    getDamageDisplay() {\n        if (this.minDamage === this.maxDamage) {\n            return this.minDamage;\n        } else {\n            return this.minDamage + \" - \" + this.maxDamage;\n        }\n    }\n\n    getBlockedDamage() {\n        return Math.floor(MathUtil.randomNumber(this.defense / 10, this.defense) / 10);\n    }\n\n    getMaxHp() {\n        const statHp = this.baseHp;\n\n        let equipmentHp = 0;\n        const equipment = this.parentEntity.getComponent(\"equipment\");\n        if (equipment) {\n            const equippables = equipment.getEquippables();\n            for (const equippable of equippables) {\n                equipmentHp += equippable.health;\n            }\n        }\n\n        return statHp + equipmentHp;\n    }\n\n    recalculateStats(clear = true) {\n        const newMax = this.getMaxHp();\n        if (this.hp === null || this.hp >= this.maxHp) {\n            this.hp = newMax;\n        }\n        this.maxHp = newMax;\n\n        this.calculateDamage();\n        this.calculateDefense();\n\n        this.updateUI();\n\n        if (clear) {\n            this.clearSaveCache();\n        }\n    }\n\n    calculateDamage() {\n        const statDamage = this.baseDamage;\n\n        let equipmentMinDamage = 0;\n        let equipmentMaxDamage = 0;\n        const equipment = this.parentEntity.getComponent(\"equipment\");\n        if (equipment) {\n            const equippables = equipment.getEquippables();\n            for (const equippable of equippables) {\n                equipmentMinDamage += equippable.minDamage;\n                equipmentMaxDamage += equippable.maxDamage;\n            }\n        }\n\n        this.minDamage = statDamage + equipmentMinDamage;\n        this.maxDamage = Math.floor(statDamage * 1.5) + equipmentMaxDamage;\n    }\n\n    calculateDefense() {\n        const statDefense = this.baseDefense;\n\n        let equipmentDefense = 0;\n        const equipment = this.parentEntity.getComponent(\"equipment\");\n        if (equipment) {\n            const equippables = equipment.getEquippables();\n            for (const equippable of equippables) {\n                equipmentDefense += equippable.defense;\n            }\n        }\n\n        this.defense = statDefense + equipmentDefense;\n    }\n\n\n    updateUI() {\n        console.log(\"Update: \", this);\n        if (this.isPlayer()) {\n            playerInfo.updateHealth(this.hp, this.maxHp);\n            playerInfo.updatePower(this.getDamageDisplay());\n            playerInfo.updateDefense(this.defense);\n        } else if (this.parentEntity.id === \"hero\") {\n            heroInfo.updateHealth(this.hp, this.maxHp);\n            heroInfo.updatePower(this.getDamageDisplay());\n            heroInfo.updateDefense(this.defense);\n        }\n    }\n\n    onComponentsLoaded() {\n        this.recalculateStats(false);\n    }\n\n    onEquipmentChange() {\n        this.recalculateStats();\n    }\n}","import AIDead from \"./ai/AIDead\";\nimport AIHero from \"./ai/AIHero\";\nimport AIMeleeChase from \"./ai/AIMeleeChase\";\nimport BlocksFov from \"./BlocksFov\";\nimport BlocksMovement from \"./BlocksMovement\";\nimport Cleanable from \"./Cleanable\";\nimport Faction from \"./Faction\";\nimport Fighter from \"./Fighter\";\nimport Fov from \"./Fov\";\nimport Position from \"./Position\";\n// import HealingConsumable from \"./consumable/HealingConsumable\";\n\nclass ComponentLoader {\n    constructor() {\n        this.types = new Map();\n\n        this.init();\n    }\n\n    init() {\n        this.load(new AIDead());\n        this.load(new AIHero());\n        this.load(new AIMeleeChase());\n        //\n        // this.load(new HealingConsumable());\n        //\n        this.load(new BlocksFov());\n        this.load(new BlocksMovement());\n        this.load(new Cleanable());\n        this.load(new Faction());\n        this.load(new Fighter());\n        this.load(new Fov());\n        this.load(new Position());\n    }\n\n    load(component) {\n        this.types.set(component.type, component);\n    }\n\n    create(entity, type, args) {\n        const component = this.types.get(type);\n        const constructor = component.constructor;\n        return new constructor(args);\n    }\n}\n\nconst componentLoader = new ComponentLoader();\nexport default componentLoader;","import html from \"../../html/ui/Details.html\";\nimport _UIElement from \"./_UIElement\";\n// import engine from \"../Engine\";\n\nclass Details extends _UIElement {\n    constructor() {\n        super(html);\n    }\n\n    updatePlayerDetails() {\n        //this.updatePositionDetails(engine.player, true);\n    }\n\n    getPosition(entity) {\n        const position = entity.getComponent(\"position\");\n        const x = position.x;\n        const y = position.y;\n        return \"<span class='details__line'>Looking at: X:\" + x + \" - Y:\" + y + \"</span>\";\n    }\n\n    updatePositionOnly(entity) {\n        this.dom.innerHTML = this.getPosition(entity);\n    }\n\n    updatePositionDetails(/*entity, skipPlayer = false*/) {\n        // if (!entity) {\n        //     return;\n        // }\n        // const position = entity.getComponent(\"position\");\n        // const x = position.x;\n        // const y = position.y;\n        // const z = position.z;\n        // let zStart = z - 1;\n        // if (entity !== engine.player) {\n        //     zStart = z;\n        // }\n        // let text = this.getPosition(entity);\n        // const tiles = engine.gameMap.tiles;\n        // for (let i = zStart; i <= z; i++) {\n        //     if (tiles.get(i) && tiles.get(i)[x]) {\n        //         const tile = tiles.get(i)[x][y];\n        //         if (tile) {\n        //             text += \"<span class='details__line'>\" + tile.name + \"</span>\";\n        //         }\n        //     }\n        // }\n        //\n        // for (const actor of engine.gameMap.actors) {\n        //     if (skipPlayer && actor === engine.player) {\n        //         continue;\n        //     }\n        //\n        //     const position = actor.getComponent(\"position\");\n        //     if (position && x === position.x && y === position.y) {\n        //         text += \"<span class='details__line'><span style='color:\" + position.color + \"'>\" + position.letter + \"</span>: \" + actor.name;\n        //\n        //         // const fighter = actor.getComponent(\"fighter\");\n        //         // if (fighter) {\n        //         //     text += \" \" + fighter.getHealthDescription();\n        //         // }\n        //         text += \"</span>\";\n        //     }\n        // }\n        //\n        //\n        // const itemLines = [];\n        // for (const item of engine.gameMap.items) {\n        //     const position = item.getComponent(\"position\");\n        //     if (position && x === position.x && y === position.y) {\n        //         itemLines.push(\"<span class='details__line'><span style='color:\" + position.color + \"'>\" + position.letter + \"</span>: \" + item.name + \"</span>\");\n        //     }\n        // }\n        //\n        // if (itemLines.length > 0) {\n        //     text += \"<span class='details__line details__header'>Items:</span>\";\n        // }\n        //\n        // for (const line of itemLines) {\n        //     text += line;\n        // }\n\n\n        // const nearby = [];\n        // for (const actor of engine.fov.visibleActors) {\n        //     if (actor === engine.player || !actor.isAlive()) {\n        //         continue;\n        //     }\n        //\n        //     const position = actor.getComponent(\"positionalobject\");\n        //     if (position) {\n        //         nearby.push(actor);\n        //     }\n        // }\n\n        // if (nearby.length > 0) {\n        //     text += \"<span class='details__line details__header'>Nearby:</span>\";\n        //\n        //     for (const actor of nearby) {\n        //         const position = actor.getComponent(\"positionalobject\");\n        //         if (position) {\n        //             text += \"<span class='details__line'>\";\n        //             text += \"<span style='color:\" + position.color + \"'>\" + position.letter + \"</span>: \" + actor.name;\n        //\n        //             const fighter = actor.getComponent(\"fighter\");\n        //             if (fighter) {\n        //                 text += \" \" + fighter.getHealthDescription();\n        //             }\n        //\n        //             text += \"</span>\";\n        //         }\n        //     }\n        // }\n\n        // this.dom.innerHTML = text;\n    }\n}\n\nconst details = new Details();\nexport default details;","import engine from \"./Engine\";\nimport heroInfo from \"./ui/HeroInfo\";\nimport playerInfo from \"./ui/PlayerInfo\";\nimport viewInfo from \"./ui/ViewInfo\";\nimport messageConsole from \"./ui/MessageConsole\";\nimport details from \"./ui/Details\";\n\nclass SceneState {\n    constructor() {\n        this.setupGameHtml();\n\n        this.resizeCanvas();\n        window.addEventListener( \"resize\", this);\n    }\n\n    setupGameHtml() {\n        const gameDom = document.createElement(\"div\");\n        gameDom.classList.add(\"game\");\n\n        this.canvas = document.createElement(\"canvas\");\n        this.canvas.classList.add(\"view\");\n\n        gameDom.appendChild(this.canvas);\n\n        heroInfo.open();\n        heroInfo.appendTo(gameDom);\n\n        playerInfo.open();\n        viewInfo.open();\n        messageConsole.open();\n        details.open();\n\n        playerInfo.appendTo(details.dom);\n        viewInfo.appendTo(details.dom);\n        messageConsole.appendTo(details.dom);\n        details.appendTo(gameDom);\n\n        document.body.appendChild(gameDom);\n\n        this.ctx = this.canvas.getContext(\"2d\");\n    }\n\n    handleEvent(e) {\n        switch(e.type) {\n            case \"resize\":\n                this.resizeCanvas();\n\n                break;\n        }\n    }\n\n    resizeCanvas() {\n        this.canvas.width = window.innerWidth;\n        this.canvas.height = window.innerHeight;\n\n        engine.xScale = this.canvas.width / 2560;\n        engine.yScale = this.canvas.height / 1440;\n\n        engine.needsRenderUpdate = true;\n    }\n\n    clearAll() {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n}\n\nconst sceneState = new SceneState();\nexport default sceneState;\n","import Extend from \"../util/Extend\";\nimport componentLoader from \"../components/ComponentLoader\";\nimport engine from \"../Engine\";\nimport sceneState from \"../SceneState\";\n\nexport default class _Entity {\n    constructor(args) {\n        this.args = args;\n        this.type = args.type || \"entity\";\n        this.id = args.id;\n        this.name = args.name || \"\";\n        this.description = args.description || \"\";\n        this.sprite = args.sprite || \"\";\n        this.letter = args.letter || \"?\";\n        this.color = args.color || \"#fff\";\n\n        this.componentArray = [];\n        this.components = {};\n        if (args.components) {\n            this.loadComponents(args, args.components);\n            this.callEvent(\"onComponentsLoaded\");\n        }\n\n        this.cachedSave = null;\n    }\n\n    /**\n     * @returns {_Entity}\n     */\n    clone() {\n        console.error(\"Not implemented\");\n    }\n\n    callEvent(event, args) {\n        for (const component of this.componentArray) {\n            component[event]?.(args);\n        }\n\n        this[event]?.(args);\n    }\n\n    draw(xTileOffset, yTileOffset) {\n        const position = this.getComponent(\"position\");\n        if (position) {\n            engine.spriteManager.getImage(this.sprite).drawImage(sceneState.ctx, (position.x + xTileOffset) * 64, (position.y + yTileOffset) * 64);\n        }\n    }\n\n    loadComponents(args, components) {\n        const self = this;\n        Object.keys(components).forEach(function(key) {\n            const type = componentLoader.types.get(key);\n            if (type) {\n                const baseType = type.baseType;\n                const existingComponent = self.getComponent(baseType);\n                if (!existingComponent) {\n                    self.setComponent(componentLoader.create(this, key, args), false);\n                }\n            }\n        });\n    }\n\n    setComponent(component) {\n        component.parentEntity = this;\n        this.components[component.baseType] = component;\n        this.componentArray.push(component);\n\n    }\n\n    getComponent(baseType) {\n        return this.components[baseType];\n    }\n\n    removeComponent(baseType) {\n        if (!this.components[baseType]) {\n            return;\n        }\n\n        this.components[baseType] = undefined;\n        for (const component of this.componentArray) {\n            if (component.baseType === baseType) {\n                const index = this.componentArray.indexOf(component);\n                this.componentArray.splice(index, 1);\n                break;\n            }\n        }\n    }\n\n    clearSaveCache() {\n        this.cachedSave = null;\n    }\n\n    save() {\n        if (this.cachedSave !== null) {\n            return this.cachedSave;\n        }\n\n        const json = {\n            id: this.id,\n            type: this.type,\n            name: this.name,\n            description: this.description,\n            sprite: this.sprite,\n            letter: this.letter,\n            color: this.color\n        };\n\n        json.components = {};\n        for (const component of this.componentArray) {\n            const save = component.save();\n            if (save !== null && save !== {}) {\n                Extend.deep(json.components, save);\n            }\n        }\n\n        this.cachedSave = json;\n        return json;\n    }\n\n    loadArg(name, defaultValue) {\n        return this.args[name] || defaultValue;\n    }\n\n\n}","import AdamMilazzoFov from \"../map/fov/AdamMilazzoFov\";\nimport _Entity from \"./_Entity\";\n\nexport default class Actor extends _Entity {\n    constructor(args = {}) {\n        args.type = \"actor\";\n        super(args);\n\n        this.fov = new AdamMilazzoFov();\n    }\n\n\n    clone() {\n        return new Actor(this.save());\n    }\n\n    isAlive() {\n        const fighter = this.getComponent(\"fighter\");\n        return fighter && fighter.hp > 0;\n    }\n}","import _Entity from \"./_Entity\";\n\nexport default class Tile extends _Entity {\n    constructor(args = {}) {\n        args.type = \"tile\";\n        super(args);\n    }\n\n    clone() {\n        return new Tile(this.save());\n    }\n\n    save() {\n        return super.save();\n    }\n\n    isWall() {\n        return this.getComponent(\"blocksMovement\")?.blocksMovement;\n    }\n}","import _Entity from \"./_Entity\";\n\nexport default class Item extends _Entity {\n    constructor(args = {}) {\n        args.type = \"item\";\n        super(args);\n\n        this.amount = this.loadArg(\"amount\", 1);\n        this.maxStackSize = this.loadArg(\"maxStackSize\", 1);\n    }\n\n    save() {\n        const saveJson = super.save();\n\n        if (this.amount !== 1) {\n            saveJson.amount = this.amount;\n        }\n\n        if (this.maxStackSize !== 1) {\n            saveJson.maxStackSize = this.maxStackSize;\n        }\n\n        return saveJson;\n    }\n\n    clone() {\n        return new Item(this.save());\n    }\n\n\n    setAmount(amount) {\n        this.amount = amount;\n        this.clearSaveCache();\n    }\n}","import Actor from \"./Actor\";\nimport Tile from \"./Tile\";\nimport Extend from \"../util/Extend\";\nimport actorsBaseList from \"../../json/actors/_base.json\";\nimport enemiesList from \"../../json/actors/enemies.json\";\nimport heroList from \"../../json/actors/hero.json\";\nimport playerList from \"../../json/actors/player.json\";\nimport tilesBaseList from \"../../json/tiles/_base.json\";\nimport floorsList from \"../../json/tiles/floors.json\";\nimport shopList from \"../../json/tiles/shop.json\";\nimport stairsList from \"../../json/tiles/stairs.json\";\nimport wallsList from \"../../json/tiles/walls.json\";\nimport itemsBaseList from \"../../json/items/_base.json\";\nimport potionsList from \"../../json/items/potions.json\";\nimport Item from \"./Item\";\n\nclass EntityLoader {\n    constructor() {\n        this.types = new Map();\n        this.templates = new Map();\n\n        this.init();\n    }\n\n    init() {\n        this.load(new Actor());\n        this.load(new Tile());\n        this.load(new Item());\n\n        this.loadTemplates();\n    }\n\n    load(entity) {\n        this.types.set(entity.type, entity);\n    }\n\n    create(json, args = {}) {\n        let parsedJson;\n        if (typeof json === \"object\") {\n            parsedJson = json;\n        } else {\n            parsedJson = JSON.parse(json);\n        }\n\n        if (parsedJson.extends !== undefined) {\n            if (this.templates.has(parsedJson.extends)) {\n                const template = JSON.parse(this.templates.get(parsedJson.extends));\n\n                delete parsedJson[\"extends\"];\n                return this.create(Extend.deep(template, parsedJson), args);\n            } else {\n                console.error(\"Json template for id '\" + parsedJson.extends + \"' is missing. Cannot extend from it.\");\n            }\n        }\n\n        const entity = this.types.get(parsedJson.type);\n        return new entity.constructor(Extend.deep(parsedJson, args));\n    }\n\n    createFromTemplate(id, args = {}) {\n        if (this.templates.has(id)) {\n            return this.create(this.templates.get(id), args);\n        } else {\n            console.error(\"Json template for id '\" + id + \"' is missing.\");\n            return null;\n        }\n    }\n\n    loadTemplate(entities) {\n        for (const entity of entities) {\n            const id = entity.id;\n            if (this.templates.has(id)) {\n                console.error(\"Template for entity id '\" + id + \"' already exists.\");\n            } else {\n                this.templates.set(id, JSON.stringify(entity));\n            }\n        }\n    }\n\n    loadTemplates() {\n        this.loadTemplate(actorsBaseList);\n        this.loadTemplate(enemiesList);\n        this.loadTemplate(heroList);\n        this.loadTemplate(playerList);\n\n        this.loadTemplate(tilesBaseList);\n        this.loadTemplate(floorsList);\n        this.loadTemplate(shopList);\n        this.loadTemplate(stairsList);\n        this.loadTemplate(wallsList);\n\n        this.loadTemplate(itemsBaseList);\n        this.loadTemplate(potionsList);\n    }\n}\n\nconst entityLoader = new EntityLoader();\nexport default entityLoader;","import ActionWithDirection from \"./_ActionWithDirection\";\nimport UnableToPerformAction from \"../UnableToPerformAction\";\nimport entityLoader from \"../../entity/EntityLoader\";\n\nexport default class CleanAction extends ActionWithDirection {\n    constructor(entity, dx = 0, dy = 0) {\n        super(entity, dx, dy);\n    }\n\n    perform(gameMap) {\n        const position = this.entity.getComponent(\"position\");\n        if (!position) {\n            return new UnableToPerformAction(this.entity, \"Entity doesn't have a position.\");\n        }\n\n        const destX = position.x + this.dx;\n        const destY = position.y + this.dy;\n\n        const cleanableActor = gameMap.getCleanableActorAtLocation(destX, destY);\n        if (cleanableActor) {\n            const cleanable = cleanableActor.getComponent(\"cleanable\");\n            if (cleanable) {\n                const decreasesTo = cleanable.decreasesTo;\n                if (decreasesTo) {\n                    const cleanablePosition = cleanableActor.getComponent(\"position\");\n\n                    const changedEntity = entityLoader.createFromTemplate(decreasesTo, {components: {position: {x: cleanablePosition.x, y: cleanablePosition.y}}});\n                    gameMap.addActor(changedEntity);\n                }\n\n                gameMap.removeActor(cleanableActor);\n            }\n        } else {\n            return new UnableToPerformAction(this.entity, \"There's nothing to clean there!\");\n        }\n    }\n}","import ActionWithDirection from \"./_ActionWithDirection\";\nimport UnableToPerformAction from \"../UnableToPerformAction\";\nimport MovementAction from \"./MovementAction\";\nimport MeleeAction from \"./MeleeAction\";\nimport CleanAction from \"./CleanAction\";\n\nexport default class BumpAction extends ActionWithDirection {\n    constructor(entity, dx = 0, dy = 0) {\n        super(entity, dx, dy);\n    }\n\n    perform(gameMap) {\n        const position = this.entity.getComponent(\"position\");\n        if (!position) {\n            return new UnableToPerformAction(this.entity, \"Entity doesn't have a position.\");\n        }\n\n        const destX = position.x + this.dx;\n        const destY = position.y + this.dy;\n\n        const blockingActor = gameMap.getBlockingActorAtLocation(destX, destY);\n        if (blockingActor) {\n            return new MeleeAction(this.entity, this.dx, this.dy).perform(gameMap);\n        }\n\n        const cleanableActor = gameMap.getCleanableActorAtLocation(destX, destY);\n        if (cleanableActor) {\n            return new CleanAction(this.entity, this.dx, this.dy).perform(gameMap);\n        }\n\n        const tileX = gameMap.tiles[destX];\n        if (tileX) {\n            // const tileXY = tileX[destY];\n            // if (tileXY) {\n            //     // TODO: Open or other actions\n            // }\n            return new MovementAction(this.entity, this.dx, this.dy).perform(gameMap);\n        } else {\n            return new UnableToPerformAction(this.entity, \"Nowhere to move.\");\n        }\n    }\n}","import _EventHandler from \"./_EventHandler\";\nimport controls from \"../controls/Controls\";\nimport BumpAction from \"../actions/actionWithDirection/BumpAction\";\nimport engine from \"../Engine\";\nimport WaitAction from \"../actions/WaitAction\";\n// import HexUtil from \"../util/HexUtil\";\n// import viewInfo from \"../ui/ViewInfo\";\n\nexport default class DefaultPlayerEventHandler extends _EventHandler {\n    constructor() {\n        super();\n    }\n\n    teardown() {\n        super.teardown();\n    }\n\n    handleInput() {\n        let action = null;\n\n        if (this.isPlayerTurn && engine.player.isAlive()) {\n            if (controls.testPressed(\"up\")) {\n                action = new BumpAction(engine.player, 0, -1);\n            } else if (controls.testPressed(\"down\")) {\n                action = new BumpAction(engine.player, 0, 1);\n            } else if (controls.testPressed(\"left\")) {\n                action = new BumpAction(engine.player, -1, 0);\n            } else if (controls.testPressed(\"right\")) {\n                action = new BumpAction(engine.player, 1, 0);\n            } else if (controls.testPressed(\"nw\")) {\n                action = new BumpAction(engine.player, -1, -1);\n            } else if (controls.testPressed(\"ne\")) {\n                action = new BumpAction(engine.player, 1, -1);\n            } else if (controls.testPressed(\"sw\")) {\n                action = new BumpAction(engine.player, -1, 1);\n            } else if (controls.testPressed(\"se\")) {\n                action = new BumpAction(engine.player, 1, 1);\n            } else if (controls.testPressed(\"wait\")) {\n                action = new WaitAction(engine.player);\n            }\n        }\n\n        return action;\n    }\n\n    onMouseMove(e) {\n        this.mouse.x = e.clientX;\n        this.mouse.y = e.clientY;\n\n        // const hex = HexUtil.pixelToHex(this.mouse);\n        // const tile = engine.gameMap.getTileFromHexCoords(hex.q, hex.r);\n        // if (tile) {\n        //     if (this.targetedTile !== tile) {\n        //         for (const pathTile of this.pathTiles) {\n        //             pathTile.highlighted = false;\n        //         }\n        //         if (this.targetedTile) {\n        //             this.targetedTile.highlighted = false;\n        //         }\n        //\n        //         tile.highlighted = true;\n        //         this.targetedTile = tile;\n        //\n        //         const tileFov = tile.getComponent(\"fov\");\n        //         if (tileFov && tileFov.visible) {\n        //             const costGraph = engine.player.fov.getCostGraph();\n        //             const playerHex = engine.player.getComponent(\"hex\");\n        //             const tileHex = tile.getComponent(\"hex\");\n        //             const path = engine.player.fov.getPath(costGraph, playerHex, tileHex);\n        //             for (const pathNode of path) {\n        //                 const newRow = pathNode.row + engine.player.fov.left;\n        //                 const newCol = pathNode.col + engine.player.fov.top;\n        //\n        //                 const pathNodeTile = engine.gameMap.getTileFromArrayCoords(newRow, newCol);\n        //                 pathNodeTile.highlighted = true;\n        //                 this.pathTiles.push(pathNodeTile);\n        //             }\n        //         }\n        //\n        //         viewInfo.updatePositionDetails(tile);\n        //     }\n        // }\n\n        engine.needsRenderUpdate = true;\n    }\n}","export default class ArrayUtil {\n    constructor() {\n\n    }\n\n    static create2dArray(numRows) {\n        const array = [];\n\n        for (let i = 0; i < numRows; i++) {\n            array[i] = [];\n        }\n        return array;\n    }\n}","import ArrayUtil from \"../../util/ArrayUtil\";\nimport entityLoader from \"../../entity/EntityLoader\";\nimport engine from \"../../Engine\";\nimport Fov from \"../../components/Fov\";\n// import details from \"../../ui/Details\";\nimport Actor from \"../../entity/Actor\";\nimport Item from \"../../entity/Item\";\nimport details from \"../../ui/Details\";\n\nexport default class GameMap {\n    constructor(name, width, height) {\n        this.name = name;\n        this.width = width;\n        this.height = height;\n\n        this.timeout = null;\n        this.saveCache = null;\n\n        this.init();\n    }\n\n    init() {\n        this.tiles = ArrayUtil.create2dArray(this.width);\n        this.actors = [];\n        this.items = [];\n    }\n\n    create() {}\n\n    teardown() {\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n        }\n\n        engine.player.fov.teardown();\n\n        for (let i = 0; i < this.width; i++) {\n            for (let j = 0; j < this.height; j++) {\n                const tile = this.tiles[i][j];\n                if (tile) {\n                    tile.callEvent(\"onMapTeardown\");\n                }\n            }\n        }\n\n        for (const actor of this.actors) {\n            actor.callEvent(\"onMapTeardown\");\n        }\n\n        for (const item of this.items) {\n            item.callEvent(\"onMapTeardown\");\n        }\n    }\n\n    removeEntity(entity) {\n        if (entity instanceof Actor) {\n            this.removeActor(entity);\n        } else if (entity instanceof Item) {\n            this.removeItem(entity);\n        }\n    }\n\n    removeItem(item) {\n        const index = this.items.indexOf(item);\n        if (index > -1) {\n            this.items.splice(index, 1);\n        }\n    }\n\n    /**\n     *\n     * @param item\n     * @param groundPosition\n     * @returns {boolean} true if item added <br/>\n     *                    false if item merged and item is deleted\n     */\n    addItem(item, groundPosition) {\n        const itemPosition = item.getComponent(\"position\");\n        if (!groundPosition) {\n            groundPosition = itemPosition;\n        }\n\n        let amountToAdd = item.amount;\n        for (const mapItem of this.items) {\n            if (mapItem.id === item.id) {\n                const position = mapItem.getComponent(\"position\");\n                if (position && groundPosition.isSamePosition(position)) {\n                    if (mapItem.maxStackSize === -1) {\n                        mapItem.setAmount(mapItem.amount + item.amount);\n                        itemPosition.teardown();\n                        return false;\n                    }\n\n                    const amountCanAdd = mapItem.maxStackSize - mapItem.amount;\n                    if (amountCanAdd >= amountToAdd) {\n                        mapItem.setAmount(mapItem.amount + amountToAdd);\n                        itemPosition.teardown();\n                        return false;\n                    } else {\n                        mapItem.setAmount(mapItem.amount + amountCanAdd);\n                        item.setAmount(item.amount - amountCanAdd);\n\n                        amountToAdd -= amountCanAdd;\n                    }\n                }\n            }\n        }\n\n        if (amountToAdd > 0) {\n            item.setAmount(amountToAdd);\n\n            itemPosition.moveTo(groundPosition.x, groundPosition.y);\n            item.parent = null;\n            this.items.push(item);\n            itemPosition.setVisible();\n            return true;\n        } else {\n            itemPosition.teardown();\n            return false;\n        }\n    }\n\n    removeActor(actor) {\n        const index = this.actors.indexOf(actor);\n        if (index > -1) {\n            this.actors.splice(index, 1);\n        }\n    }\n\n    addActor(actor) {\n        this.actors.push(actor);\n    }\n\n    save() {\n        // if (engine.gameMap !== this && this.saveCache) {\n        //     return this.saveCache;\n        // }\n\n        const saveData = {\n            name: this.name,\n            width: this.width,\n            height: this.height\n        };\n\n        saveData[\"tiles\"] = {};\n        const tileArray = [];\n        const letterArray = [];\n        let key = \"\";\n        let charCode = 65;\n\n        for (let i = 0; i < this.width; i++) {\n            for (let j = 0; j < this.height; j++) {\n                const tile = this.tiles[i][j];\n                if (tile) {\n                    const tileJson = JSON.stringify(tile.save());\n                    const index = tileArray.indexOf(tileJson);\n                    if (index > -1) {\n                        key += letterArray[index];\n                    } else {\n                        tileArray.push(tileJson);\n                        letterArray.push(String.fromCharCode(charCode));\n                        key += String.fromCharCode(charCode);\n\n                        charCode++;\n                    }\n                } else {\n                    key += \" \";\n                }\n            }\n        }\n\n        saveData[\"tiles\"] = {};\n        saveData[\"tiles\"][\"key\"] = key;\n        saveData[\"tiles\"][\"map\"] = {};\n\n        for (let i = 0; i < tileArray.length; i++) {\n            saveData[\"tiles\"][\"map\"][letterArray[i]] = tileArray[i];\n        }\n\n        const actorJson = [];\n        for (const actor of this.actors) {\n            actorJson.push(JSON.stringify(actor.save()));\n        }\n        saveData[\"actors\"] = actorJson;\n\n        const itemJson = [];\n        for (const item of this.items) {\n            itemJson.push(JSON.stringify(item.save()));\n        }\n        saveData[\"items\"] = itemJson;\n\n        this.saveCache = saveData;\n        return saveData;\n    }\n\n    load(json) {\n        const tiles = json.tiles;\n\n        for (let i = 0; i < this.width; i++) {\n            for (let j = 0; j < this.height; j++) {\n                const index = i*this.height + j;\n                const tile = tiles[index];\n\n                if (tile) {\n                    tiles[i][j] = entityLoader.create(tile, {components: {position: {x: i, y: j}}});\n                }\n            }\n        }\n\n        const actors = json.actors;\n        for (const actor of actors) {\n            const createdActor = entityLoader.create(actor);\n            this.addActor(createdActor);\n        }\n\n        const items = json.items;\n        for (const item of items) {\n            const createdItem = entityLoader.create(item);\n            this.items.push(createdItem);\n        }\n    }\n\n    isInBounds(x, y) {\n        return 0 <= x && x < this.width && 0 <= y && y < this.height;\n    }\n\n    revealFromPosition(x, y, radius, delay = 25) {\n        const self = this;\n        const minX = Math.max(0, x - radius);\n        const maxX = Math.min(this.width, x + radius);\n        const minY = Math.max(0, y - radius);\n        const maxY = Math.min(this.height, y + radius);\n\n        if (delay === 0) {\n            self._revealGradually(minX, maxX, minY, maxY, x, y, 1, radius, delay);\n        } else {\n            self.timeout = setTimeout(function () {\n                self._revealGradually(minX, maxX, minY, maxY, x, y, 1, radius, delay);\n            }, delay);\n        }\n    }\n\n    _revealGradually(minX, maxX, minY, maxY, x, y, radius, maxRadius, delay) {\n        const self = this;\n        self.timeout = null;\n\n        if (radius <= maxRadius) {\n            self.timeout = setTimeout(function () {\n                self._revealGradually(minX, maxX, minY, maxY, x, y, radius + 1, maxRadius, delay);\n            }, delay);\n        }\n\n        const xRadiusMin = x - radius;\n        const xRadiusMax = x + radius;\n        const yRadiusMin = y - radius;\n        const yRadiusMax = y + radius;\n        for (let i = xRadiusMin; i <= xRadiusMax; i++) {\n            const xIsEdge = i === xRadiusMin || i === xRadiusMax;\n            for (let j = yRadiusMin; j <= yRadiusMax; j++) {\n                if (xIsEdge || j === yRadiusMin || j === yRadiusMax) {\n                    this._revealAtPosition(i, j);\n                    engine.needsMapUpdate = true;\n                }\n            }\n        }\n\n        if (xRadiusMin <= minX && xRadiusMax >= maxX && yRadiusMin <= minY && yRadiusMax >= maxY) {\n            return true;\n        }\n\n        return true;\n    }\n\n    _revealAtPosition(x, y) {\n        const tileX = this.tiles[1][x];\n        if (tileX) {\n            const tile = this.tiles[1][x][y];\n            if (tile) {\n                const position = tile.getComponent(\"position\");\n                if (position) {\n                    const fov = tile.getComponent(\"fov\");\n                    if (!fov) {\n                        tile.setComponent(new Fov({components: {fov: {explored: true, visible: false}}}));\n                    }\n                }\n            }\n        }\n    }\n\n    getAliveActorAtLocation(x, y) {\n        let aliveActor = null;\n        for (const actor of this.actors) {\n            if (actor.isAlive()) {\n                const position = actor.getComponent(\"position\");\n                if (position && x === position.x && y === position.y) {\n                    aliveActor = actor;\n                    break;\n                }\n            }\n        }\n\n        return aliveActor;\n    }\n\n    getBlockingActorAtLocation(x, y) {\n        let blockingActor = null;\n        for (const actor of this.actors) {\n            const position = actor.getComponent(\"position\");\n            if (position && x === position.x && y === position.y) {\n                const component = actor.getComponent(\"blocksMovement\");\n                if (component && component.blocksMovement) {\n                    blockingActor = actor;\n                    break;\n                }\n            }\n        }\n\n        return blockingActor;\n    }\n\n    getCleanableActorAtLocation(x, y) {\n        let cleanableActor = null;\n        for (const actor of this.actors) {\n            const position = actor.getComponent(\"position\");\n            if (position && x === position.x && y === position.y) {\n                const component = actor.getComponent(\"cleanable\");\n                if (component) {\n                    cleanableActor = actor;\n                    break;\n                }\n            }\n        }\n\n        return cleanableActor;\n    }\n\n    addPlayer(x, y) {\n        if (!engine.player) {\n            engine.player = entityLoader.createFromTemplate(\"player\");\n        }\n\n        this.addActor(engine.player);\n\n        const playerPosition = engine.player.getComponent(\"position\");\n        playerPosition.moveTo(x, y);\n\n        this.updatePlayerUI();\n    }\n\n    updatePlayerUI() {\n        details.updatePlayerDetails();\n    }\n\n    draw(xTileOffset = 0, yTileOffset = 0) {\n        const tiles = this.tiles;\n\n        for (let i = 0; i < tiles.length; i++) {\n            const tileX = tiles[i];\n            for (let j = 0; j < tileX.length; j++) {\n                const tile = tileX[j];\n                if (tile) {\n                    tile.draw(xTileOffset, yTileOffset);\n                }\n            }\n        }\n\n        for (const item of this.items) {\n            item.draw(xTileOffset, yTileOffset);\n        }\n\n        for (const actor of this.actors) {\n            actor.draw(xTileOffset, yTileOffset);\n        }\n\n        // const fov = engine.player.fov;\n        // // for (const tile of fov.visibleTiles) {\n        // //     tile.draw();\n        // // }\n        //\n        // for (const actor of fov.visibleActors) {\n        //     if (actor) {\n        //         actor.draw();\n        //     }\n        // }\n        //\n        // for (const item of fov.visibleItems) {\n        //     if (item) {\n        //         item.draw();\n        //     }\n        // }\n    }\n}","export default class Room {\n    constructor() {}\n\n    placeEntities() { }\n}","import entityGroups from \"../../../json/generation/_entityGroups.json\";\nimport itemGroups from \"../../../json/generation/_itemGroups.json\";\nimport basicDungeon from \"../../../json/generation/basic-dungeon.json\";\nimport tutorial from \"../../../json/generation/tutorial.json\";\nimport MathUtil from \"../../util/MathUtil\";\n\nclass ChanceLoader {\n    constructor() {\n        this.entityGroups = new Map();\n        this.itemGroups = new Map();\n        this.generators = new Map();\n\n        this.loadEntityGroups(entityGroups);\n        this.loadItemGroups(itemGroups);\n\n        this.loadGenerator(\"basic-dungeon\", basicDungeon);\n        this.loadGenerator(\"tutorial\", tutorial);\n    }\n\n    loadEntityGroups(entityGroups) {\n        for (const group of entityGroups) {\n            this.entityGroups.set(group.id, group.entities);\n        }\n    }\n\n    loadItemGroups(itemGroups) {\n        for (const group of itemGroups) {\n            this.itemGroups.set(group.id, group.items);\n        }\n    }\n\n    loadGenerator(name, generator) {\n        this.generators.set(name, generator);\n    }\n\n    getChancesForLevel(name, level) {\n        let chances;\n        const generator = this.generators.get(name);\n        for (const group of generator) {\n            if (group.level > level) {\n                break;\n            }\n\n            chances = group;\n        }\n\n        return chances;\n    }\n\n    getActorForLevel(name, level) {\n        const chances = this.getChancesForLevel(name, level);\n        const actors = chances.actors;\n\n        let actorOrGroup = this.getRandomFromGroup(actors);\n        while (actorOrGroup.group !== undefined) {\n            const actorGroup = this.entityGroups.get(actorOrGroup.group);\n            actorOrGroup = this.getRandomFromGroup(actorGroup);\n        }\n\n        return actorOrGroup.id;\n    }\n\n    getItemForLevel(name, level) {\n        const chances = this.getChancesForLevel(name, level);\n        const items = chances.items;\n\n        let itemOrGroup = this.getRandomFromGroup(items);\n        while (itemOrGroup.group !== undefined) {\n            const itemGroup = this.itemGroups.get(itemOrGroup.group);\n            itemOrGroup = this.getRandomFromGroup(itemGroup);\n        }\n\n        return itemOrGroup.id;\n    }\n\n    getRandomFromGroup(group) {\n        let totalWeight = 0;\n        for (const chance of group) {\n            totalWeight += chance.weight;\n        }\n\n        let returnChance;\n        let currentWeight = 0;\n        const rand = MathUtil.randomNumber(0, totalWeight);\n        for (const chance of group) {\n            currentWeight += chance.weight;\n\n            if (rand < currentWeight) {\n                returnChance = chance;\n                break;\n            }\n        }\n\n        return returnChance;\n    }\n}\n\nconst chanceLoader = new ChanceLoader();\nexport default chanceLoader;","import Room from \"./_Room\";\nimport MathUtil from \"../../../util/MathUtil\";\nimport entityLoader from \"../../../entity/EntityLoader\";\nimport chanceLoader from \"../../mapGeneration/ChanceLoader\";\n\nexport default class RectangularRoom extends Room {\n    constructor(x, y, width, height) {\n        super();\n        this.x1 = x;\n        this.y1 = y;\n        this.x2 = x + width;\n        this.y2 = y + height;\n        this.width = width;\n        this.height = height;\n    }\n\n    getCenterX() {\n        return Math.round((this.x1 + this.x2) / 2);\n    }\n\n    getCenterY() {\n        return Math.round((this.y1 + this.y2) / 2);\n    }\n\n    intersects(otherRoom) {\n        return this.x1 <= otherRoom.x2\n            && this.x2 >= otherRoom.x1\n            && this.y1 <= otherRoom.y2\n            && this.y2 >= otherRoom.y1;\n    }\n\n    createRoom(gameMap) {\n        const left = Math.max(0, this.x1);\n        const right = Math.min(gameMap.width, this.x2 + 1);\n        const top = Math.max(0, this.y1);\n        const bottom = Math.min(gameMap.height, this.y2 + 1);\n\n        const floorEntity = entityLoader.createFromTemplate(\"floor\", {components: {position: {x: 0, y: 0}}});\n        const floorEntityCenter = entityLoader.createFromTemplate(\"floor_center\", {components: {position: {x: 0, y: 0}}});\n        const floorEntityCracked = entityLoader.createFromTemplate(\"floor_cracked\", {components: {position: {x: 0, y: 0}}});\n        const wallEntity = entityLoader.createFromTemplate(\"wall\", {components: {position: {x: 0, y: 0}}});\n        for (let i = left; i < right; i++) {\n            for (let j = top; j < bottom; j++) {\n                let floor;\n                const rand = Math.random();\n                if (rand < .06) {\n                    floor = floorEntityCracked.clone();\n                } else if (rand < .1) {\n                    floor = floorEntityCenter.clone();\n                } else {\n                    floor = floorEntity.clone();\n                }\n                floor.getComponent(\"position\").moveTo(i, j);\n                gameMap.tiles[i][j] = floor;\n\n                const isVerticalEdge = (i === this.x1 || i === this.x2) && j >= this.y1 && j <= this.y2;\n                const isHorizontalEdge = (j === this.y1 || j === this.y2) && i >= this.x1 && i <= this.x2;\n                const wallTile = gameMap.tiles[i][j];\n                if (isHorizontalEdge || isVerticalEdge) {\n                    if (!wallTile) {\n                        const wall = wallEntity.clone();\n                        wall.getComponent(\"position\").moveTo(i, j);\n                        gameMap.tiles[i][j] = wall;\n                    }\n                }\n            }\n        }\n    }\n\n    placeEntities(gameMap, name, level, min, max) {\n        const numMonsters = MathUtil.randomInt(min, max);\n        for (let i = 0; i < numMonsters; i++) {\n            const x = MathUtil.randomInt(this.x1 + 1, this.x2 - 1);\n            const y = MathUtil.randomInt(this.y1 + 1, this.y2 - 1);\n\n            const blockingActor = gameMap.getBlockingActorAtLocation(x, y);\n            if (!blockingActor) {\n                const position = {components: {position: {x: x, y: y}}};\n\n                const actorId = chanceLoader.getActorForLevel(name, level);\n                const actor = entityLoader.createFromTemplate(actorId, position);\n\n                gameMap.addActor(actor);\n            }\n        }\n    }\n\n    placeItems(gameMap, name, level, maxItems) {\n        const numItems = MathUtil.randomInt(0, maxItems);\n        for (let i = 0; i < numItems; i++) {\n            const x = MathUtil.randomInt(this.x1 + 1, this.x2 - 1);\n            const y = MathUtil.randomInt(this.y1 + 1, this.y2 - 1);\n\n            const position = {components: {position: {x: x, y: y}}};\n            const itemId = chanceLoader.getItemForLevel(name, level);\n            const item = entityLoader.createFromTemplate(itemId, position);\n\n            gameMap.items.push(item);\n        }\n        //\n        // const numGoldItems = MathUtil.randomInt(0, maxItems);\n        // for (let i = 0; i < numGoldItems; i++) {\n        //     const x = MathUtil.randomInt(this.x1 + 1, this.x2 -1);\n        //     const y = MathUtil.randomInt(this.y1 + 1, this.y2 -1);\n        //     const amount = MathUtil.randomInt(1, 25);\n        //\n        //     const position = {amount: amount, components: {position: {x: x, y: y}}};\n        //     const item = entityLoader.createFromTemplate(\"gold\", position);\n        //\n        //     engine.gameMap.items.push(item);\n        // }\n    }\n}","import GameMap from \"./GameMap\";\nimport entityLoader from \"../../entity/EntityLoader\";\nimport MathUtil from \"../../util/MathUtil\";\n//import MapGeneration from \"../mapGeneration/MapGeneration\";\nimport RectangularRoom from \"./room/RectangularRoom\";\n\nexport default class Tutorial extends GameMap {\n    constructor(width, height, args = {}) {\n        const level = args.level || 1;\n        const name = \"tutorial-\" + level;\n        super(name, width, height);\n\n        this.maxRooms = args.maxRooms || 1;\n        this.roomMinSize = args.roomMinSize || 8;\n        this.roomMaxSize = args.roomMaxSize || 8;\n        this.level = level;\n\n        this.minMonstersByFloor = [\n            {level: 1, amount: 2}\n        ];\n        this.maxMonstersByFloor = [\n            {level: 1, amount: 2}\n        ];\n        this.minItemsByFloor = [\n            {level: 1, amount: 2}\n        ];\n        this.maxItemsByFloor = [\n            {level: 1, amount: 2}\n        ];\n    }\n\n    getFloorAmount(weights) {\n        let amount = 0;\n        for (const weight of weights) {\n            if (weight.level > this.level) {\n                break;\n            }\n\n            amount = weight.amount;\n        }\n\n        return amount;\n    }\n\n    save() {\n        // if (engine.gameMap !== this && this.saveCache) {\n        //     return this.saveCache;\n        // }\n\n        const saveJson = super.save();\n        if (this.level !== 1) {\n            saveJson.level = this.level;\n        }\n\n        this.saveCache = saveJson;\n        return saveJson;\n    }\n\n    create(previousMapName, stairsInteractable) {\n        super.create();\n\n        const wallEntity = entityLoader.createFromTemplate(\"wall\", {components: {position: {x: 0, y: 0}}});\n        // Pre-fill with floor and walls\n        for (let j = 0; j < this.height; j++) {\n            for (let i = 0; i < this.width; i++) {\n                const floor = wallEntity.clone();\n                floor.getComponent(\"position\").moveTo(i, j);\n                this.tiles[i][j] = floor;\n            }\n        }\n\n        const rooms = [];\n        for (let i = 0; i < this.maxRooms; i++) {\n            const roomWidth = MathUtil.randomInt(this.roomMinSize, this.roomMaxSize);\n            const roomHeight = MathUtil.randomInt(this.roomMinSize, this.roomMaxSize);\n\n            const newRoom = new RectangularRoom(1, 1, roomWidth, roomHeight);\n\n            newRoom.createRoom(this);\n\n            if (rooms.length === 0) {\n                const centerX = newRoom.getCenterX();\n                const centerY = newRoom.getCenterY();\n\n                if (stairsInteractable) {\n                    stairsInteractable.setPosition(centerX, centerY, 1);\n                }\n\n                this.tiles[centerX][0] = entityLoader.createFromTemplate(\"stairs_up\", {components: {position: {x: centerX, y: 0}}});\n\n                const stairsDownX = MathUtil.randomInt(newRoom.x1 + 2, newRoom.x2 - 2);\n                const stairsDownY = MathUtil.randomInt(newRoom.y1 + 2, newRoom.y2 - 2);\n                this.tiles[stairsDownX][stairsDownY] = entityLoader.createFromTemplate(\"stairs_down\", {components: {position: {x: stairsDownX, y: stairsDownY}}});\n\n                let trapDoorX = stairsDownX;\n                let trapDoorY = stairsDownY;\n\n                while (trapDoorX === stairsDownX && trapDoorY === stairsDownY) {\n                    trapDoorX = MathUtil.randomInt(newRoom.x1 + 2, newRoom.x2 - 2);\n                    trapDoorY = MathUtil.randomInt(newRoom.y1 + 2, newRoom.y2 - 2);\n\n                    if (trapDoorX !== stairsDownX || trapDoorY !== stairsDownY) {\n                        this.tiles[trapDoorX][trapDoorY] = entityLoader.createFromTemplate(\"trap_door\", {components: {position: {x: trapDoorX, y: trapDoorY}}});\n                    }\n                }\n\n                // if (engine.player) {\n                //     const playerPosition = engine.player.getComponent(\"position\");\n                //     if (playerPosition) {\n                //         this.tiles[centerX][centerY] = entityLoader.createFromTemplate(\"stairs_north\", {components: {position: {x: centerX, y: centerY}, stairsInteractable: {map: previousMapName, x: playerPosition.x, y: playerPosition.y}}});\n                //     }\n                // } else {\n                //     this.tiles[centerX][centerY] = entityLoader.createFromTemplate(\"stairs_north\", {components: {position: {x: centerX, y: centerY}, stairsInteractable: {map: \"town\", x: 31, y: 31}}});\n                // }\n\n                this.addPlayer(centerX, centerY);\n                const hero = entityLoader.createFromTemplate(\"hero\");\n                this.addActor(hero);\n            } else {\n                //const lastRoom = rooms[rooms.length - 1];\n                //MapGeneration.tunnelBetween(this, lastRoom.getCenterX(), lastRoom.getCenterY(), newRoom.getCenterX(), newRoom.getCenterY());\n            }\n\n            rooms.push(newRoom);\n        }\n\n        // const lastRoom = rooms[rooms.length - 1];\n        // const lastRoomCenterX = lastRoom.getCenterX();\n        // const lastRoomCenterY = lastRoom.getCenterY();\n        //this.tiles[lastRoomCenterX][lastRoomCenterY] = entityLoader.createFromTemplate(\"stairs_north\", {components: {position: {x: lastRoomCenterX, y: lastRoomCenterY}, stairsInteractable: {generator: \"basic-dungeon\"}}});\n\n        for (const room of rooms) {\n            room.placeEntities(this, \"tutorial\", this.level, this.getFloorAmount(this.minMonstersByFloor), this.getFloorAmount(this.maxMonstersByFloor));\n            room.placeItems(this, \"tutorial\", this.level, this.getFloorAmount(this.minItemsByFloor), this.getFloorAmount(this.maxItemsByFloor));\n        }\n    }\n}","import GameMap from \"./GameMap\";\nimport entityLoader from \"../../entity/EntityLoader\";\nimport MathUtil from \"../../util/MathUtil\";\n//import MapGeneration from \"../mapGeneration/MapGeneration\";\nimport RectangularRoom from \"./room/RectangularRoom\";\n\nexport default class BasicDungeon extends GameMap {\n    constructor(width, height, args = {}) {\n        const level = args.level || 1;\n        const name = \"basic-dungeon-\" + level;\n        super(name, width, height);\n\n        this.maxRooms = args.maxRooms || 1;\n        this.roomMinSize = args.roomMinSize || 8;\n        this.roomMaxSize = args.roomMaxSize || 8;\n        this.level = level;\n\n        this.minMonstersByFloor = [\n            {level: 1, amount: 0},\n            {level: 4, amount: 1},\n            {level: 7, amount: 2}\n        ];\n        this.maxMonstersByFloor = [\n            {level: 1, amount: 2},\n            {level: 4, amount: 3},\n            {level: 7, amount: 4}\n        ];\n        this.minItemsByFloor = [\n            {level: 1, amount: 0},\n            {level: 4, amount: 1},\n            {level: 6, amount: 2}\n        ];\n        this.maxItemsByFloor = [\n            {level: 1, amount: 2},\n            {level: 4, amount: 3},\n            {level: 6, amount: 5}\n        ];\n    }\n\n    getFloorAmount(weights) {\n        let amount = 0;\n        for (const weight of weights) {\n            if (weight.level > this.level) {\n                break;\n            }\n\n            amount = weight.amount;\n        }\n\n        return amount;\n    }\n\n    save() {\n        // if (engine.gameMap !== this && this.saveCache) {\n        //     return this.saveCache;\n        // }\n\n        const saveJson = super.save();\n        if (this.level !== 1) {\n            saveJson.level = this.level;\n        }\n\n        this.saveCache = saveJson;\n        return saveJson;\n    }\n\n    create(previousMapName, stairsInteractable) {\n        super.create();\n\n        //const floorEntity = entityLoader.createFromTemplate(\"floor\", {components: {position: {x: 0, y: 0}}});\n        const wallEntity = entityLoader.createFromTemplate(\"wall\", {components: {position: {x: 0, y: 0}}});\n        // Pre-fill with floor and walls\n        for (let j = 0; j < this.height; j++) {\n            for (let i = 0; i < this.width; i++) {\n                const floor = wallEntity.clone();\n                floor.getComponent(\"position\").moveTo(i, j);\n                this.tiles[i][j] = floor;\n            }\n        }\n\n        const rooms = [];\n        for (let i = 0; i < this.maxRooms; i++) {\n            const roomWidth = MathUtil.randomInt(this.roomMinSize, this.roomMaxSize);\n            const roomHeight = MathUtil.randomInt(this.roomMinSize, this.roomMaxSize);\n\n            let x = 10 * i + 1;\n            let y = 1;\n\n            if (i >= (this.maxRooms / 2)) {\n                y = 11;\n                x -= 30;\n            }\n\n            const newRoom = new RectangularRoom(x, y, roomWidth, roomHeight);\n            let intersectsOtherRoom = false;\n            for (const room of rooms) {\n                if (newRoom.intersects(room)) {\n                    intersectsOtherRoom = true;\n                    break;\n                }\n            }\n\n            if (intersectsOtherRoom) {\n                continue;\n            }\n\n            newRoom.createRoom(this);\n\n            if (rooms.length === 0) {\n                const centerX = newRoom.getCenterX();\n                const centerY = newRoom.getCenterY();\n\n                if (stairsInteractable) {\n                    stairsInteractable.setPosition(centerX, centerY, 1);\n                }\n\n                this.tiles[centerX][0] = entityLoader.createFromTemplate(\"stairs_up\", {components: {position: {x: centerX, y: 0}}});\n\n                const stairsDownX = MathUtil.randomInt(newRoom.x1 + 2, newRoom.x2 - 2);\n                const stairsDownY = MathUtil.randomInt(newRoom.y1 + 2, newRoom.y2 - 2);\n                this.tiles[stairsDownX][stairsDownY] = entityLoader.createFromTemplate(\"stairs_down\", {components: {position: {x: stairsDownX, y: stairsDownY}}});\n\n                // if (engine.player) {\n                //     const playerPosition = engine.player.getComponent(\"position\");\n                //     if (playerPosition) {\n                //         this.tiles[centerX][centerY] = entityLoader.createFromTemplate(\"stairs_north\", {components: {position: {x: centerX, y: centerY}, stairsInteractable: {map: previousMapName, x: playerPosition.x, y: playerPosition.y}}});\n                //     }\n                // } else {\n                //     this.tiles[centerX][centerY] = entityLoader.createFromTemplate(\"stairs_north\", {components: {position: {x: centerX, y: centerY}, stairsInteractable: {map: \"town\", x: 31, y: 31}}});\n                // }\n            } else {\n                //const lastRoom = rooms[rooms.length - 1];\n                //MapGeneration.tunnelBetween(this, lastRoom.getCenterX(), lastRoom.getCenterY(), newRoom.getCenterX(), newRoom.getCenterY());\n            }\n\n            rooms.push(newRoom);\n        }\n\n        // const lastRoom = rooms[rooms.length - 1];\n        // const lastRoomCenterX = lastRoom.getCenterX();\n        // const lastRoomCenterY = lastRoom.getCenterY();\n        //this.tiles[lastRoomCenterX][lastRoomCenterY] = entityLoader.createFromTemplate(\"stairs_north\", {components: {position: {x: lastRoomCenterX, y: lastRoomCenterY}, stairsInteractable: {generator: \"basic-dungeon\"}}});\n\n        for (const room of rooms) {\n            room.placeEntities(this, \"basic-dungeon\", this.level, this.getFloorAmount(this.minMonstersByFloor), this.getFloorAmount(this.maxMonstersByFloor));\n            room.placeItems(this, \"basic-dungeon\", this.level, this.getFloorAmount(this.minItemsByFloor), this.getFloorAmount(this.maxItemsByFloor));\n        }\n    }\n}","import GameMap from \"./GameMap\";\nimport entityLoader from \"../../entity/EntityLoader\";\nimport MathUtil from \"../../util/MathUtil\";\n//import MapGeneration from \"../mapGeneration/MapGeneration\";\nimport RectangularRoom from \"./room/RectangularRoom\";\n\nexport default class Shop extends GameMap {\n    constructor(width, height, args = {}) {\n        const level = args.level || 1;\n        const name = \"tutorial-\" + level;\n        super(name, width, height);\n\n        this.maxRooms = args.maxRooms || 1;\n        this.roomMinSize = args.roomMinSize || 8;\n        this.roomMaxSize = args.roomMaxSize || 8;\n        this.level = level;\n\n        this.minMonstersByFloor = [\n            {level: 1, amount: 2}\n        ];\n        this.maxMonstersByFloor = [\n            {level: 1, amount: 2}\n        ];\n        this.minItemsByFloor = [\n            {level: 1, amount: 2}\n        ];\n        this.maxItemsByFloor = [\n            {level: 1, amount: 2}\n        ];\n    }\n\n    getFloorAmount(weights) {\n        let amount = 0;\n        for (const weight of weights) {\n            if (weight.level > this.level) {\n                break;\n            }\n\n            amount = weight.amount;\n        }\n\n        return amount;\n    }\n\n    save() {\n        // if (engine.gameMap !== this && this.saveCache) {\n        //     return this.saveCache;\n        // }\n\n        const saveJson = super.save();\n        if (this.level !== 1) {\n            saveJson.level = this.level;\n        }\n\n        this.saveCache = saveJson;\n        return saveJson;\n    }\n\n    create(previousMapName, stairsInteractable) {\n        super.create();\n\n        const wallEntity = entityLoader.createFromTemplate(\"wall\", {components: {position: {x: 0, y: 0}}});\n        // Pre-fill with floor and walls\n        for (let j = 0; j < this.height; j++) {\n            for (let i = 0; i < this.width; i++) {\n                const floor = wallEntity.clone();\n                floor.getComponent(\"position\").moveTo(i, j);\n                this.tiles[i][j] = floor;\n            }\n        }\n\n        const rooms = [];\n        for (let i = 0; i < this.maxRooms; i++) {\n            const roomWidth = MathUtil.randomInt(this.roomMinSize, this.roomMaxSize);\n            const roomHeight = MathUtil.randomInt(this.roomMinSize, this.roomMaxSize);\n\n            const newRoom = new RectangularRoom(1, 1, roomWidth, roomHeight);\n\n            newRoom.createRoom(this);\n\n            if (rooms.length === 0) {\n                const centerX = newRoom.getCenterX();\n                const centerY = newRoom.getCenterY();\n\n                if (stairsInteractable) {\n                    stairsInteractable.setPosition(centerX, centerY, 1);\n                }\n\n                this.tiles[centerX][centerY] = entityLoader.createFromTemplate(\"trap_door\", {components: {position: {x: centerX, y: centerY}}});\n\n\n                for (let i = newRoom.x1 + 2; i < newRoom.x2 - 1; i++) {\n                    this.tiles[i][3] = entityLoader.createFromTemplate(\"table\", {components: {position: {x: i, y: 3}}});\n                    this.tiles[i][7] = entityLoader.createFromTemplate(\"table\", {components: {position: {x: i, y: 7}}});\n                }\n\n                // if (engine.player) {\n                //     const playerPosition = engine.player.getComponent(\"position\");\n                //     if (playerPosition) {\n                //         this.tiles[centerX][centerY] = entityLoader.createFromTemplate(\"stairs_north\", {components: {position: {x: centerX, y: centerY}, stairsInteractable: {map: previousMapName, x: playerPosition.x, y: playerPosition.y}}});\n                //     }\n                // } else {\n                //     this.tiles[centerX][centerY] = entityLoader.createFromTemplate(\"stairs_north\", {components: {position: {x: centerX, y: centerY}, stairsInteractable: {map: \"town\", x: 31, y: 31}}});\n                // }\n                //\n                // this.addPlayer(centerX, centerY);\n                // const hero = entityLoader.createFromTemplate(\"hero\");\n                // this.addActor(hero);\n            } else {\n                //const lastRoom = rooms[rooms.length - 1];\n                //MapGeneration.tunnelBetween(this, lastRoom.getCenterX(), lastRoom.getCenterY(), newRoom.getCenterX(), newRoom.getCenterY());\n            }\n\n            rooms.push(newRoom);\n        }\n\n        // const lastRoom = rooms[rooms.length - 1];\n        // const lastRoomCenterX = lastRoom.getCenterX();\n        // const lastRoomCenterY = lastRoom.getCenterY();\n        //this.tiles[lastRoomCenterX][lastRoomCenterY] = entityLoader.createFromTemplate(\"stairs_north\", {components: {position: {x: lastRoomCenterX, y: lastRoomCenterY}, stairsInteractable: {generator: \"basic-dungeon\"}}});\n\n        // for (const room of rooms) {\n        //     room.placeEntities(this, \"tutorial\", this.level, this.getFloorAmount(this.minMonstersByFloor), this.getFloorAmount(this.maxMonstersByFloor));\n        //     room.placeItems(this, \"tutorial\", this.level, this.getFloorAmount(this.minItemsByFloor), this.getFloorAmount(this.maxItemsByFloor));\n        // }\n    }\n}","import \"./styles/style.css\";\nimport engine from \"./js/Engine\";\nimport DefaultPlayerEventHandler from \"./js/event/DefaultPlayerEventHandler\";\nimport messageManager from \"./js/message/MessageManager\";\nimport entityLoader from \"./js/entity/EntityLoader\";\nimport sceneState from \"./js/SceneState\";\nimport viewInfo from \"./js/ui/ViewInfo\";\nimport Tutorial from \"./js/map/tile/Tutorial\";\nimport BasicDungeon from \"./js/map/tile/BasicDungeon\";\nimport Shop from \"./js/map/tile/Shop\";\n\n(function () {\n    function init() {\n        engine.initTextures();\n\n        engine.setHeroMap(new Tutorial(11, 11));\n        engine.setNextMap(new BasicDungeon(11, 11));\n        engine.setShopMap(new Shop(11, 11));\n\n        engine.player = entityLoader.createFromTemplate(\"player\", {components: {position: {x: 0, y: 0}}});\n\n        // const playerPosition = engine.player.getComponent(\"position\");\n        // let foundPlace = false;\n        // while(!foundPlace) {\n        //     const playerRow = Math.floor(Math.random() * (engine.gameMap.height - 4)) + 2;\n        //     const playerCol = Math.floor(Math.random() * (engine.gameMap.width - 4)) + 2;\n        //     console.log(\"Row: \" + playerRow + \", Col: \" + playerCol);\n        //     const tileX = engine.gameMap.tiles[playerRow];\n        //     if (tileX) {\n        //         console.log(tileX);\n        //         const tile = tileX[playerCol];\n        //\n        //         if (!tile.isWall()) {\n        //             playerPosition.moveTo(playerRow, playerCol);\n        //             foundPlace = true;\n        //         }\n        //     }\n        // }\n\n        engine.heroMap.create();\n        engine.nextMap.create();\n        engine.shopMap.create();\n\n        engine.playerMap = engine.heroMap;\n        engine.heroMap.actors.push(engine.player);\n\n        engine.eventHandler = new DefaultPlayerEventHandler();\n\n        // const playerFighter = engine.player.getComponent(\"fighter\");\n        // playerFighter.updateUI();\n\n        viewInfo.updatePlayerDetails();\n        messageManager.text(\"Welcome to the dungeon.\").build();\n\n        engine.needsRenderUpdate = true;\n        const playerPosition = engine.player.getComponent(\"position\");\n        engine.heroMap.revealFromPosition(playerPosition.x, playerPosition.y, 20, 0);\n        engine.player.fov.compute(engine.playerMap, playerPosition.x, playerPosition.y, 5);\n        engine.player.fov.updateMap();\n\n\n        window.requestAnimationFrame(update);\n    }\n\n    function update() {\n        engine.handleEvents();\n\n        if (engine.spriteManager.preloadSprites()) {\n            if (engine.needsRenderUpdate) {\n                render();\n\n                engine.needsRenderUpdate = false;\n            }\n        }\n\n        window.requestAnimationFrame(update);\n    }\n\n    function render() {\n        sceneState.clearAll();\n        engine.draw();\n    }\n\n    init();\n}());"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","_Action","constructor","entity","perform","console","error","isPlayer","NoAction","super","UnableToPerformAction","reason","SubMessage","text","color","bold","italics","isEqual","subMessage","Message","subMessages","sub1","sub2","getHtml","messageDom","classList","add","subMessageDom","innerText","getCountHtml","amountDom","_UIElement","html","dom","htmlToElement","template","trim","innerHTML","appendTo","otherDom","isOpen","contains","open","close","messagesInnerDom","getElementsByClassName","updateLastMessageCount","lastMessage","lastMessageDom","querySelectorAll","addMessage","messageHtml","clear","messageManager","messages","builder","build","stack","slice","addNewMessage","newMessage","updatePlayerDetails","playerPosition","tile","x","y","updatePositionDetails","getDetailsLine","tileFov","getComponent","explored","name","Texture","image","TextureManager","textures","addTexture","src","self","Image","onload","getTexture","textureName","loadJson","json","tileSize","width","tiles","row","col","Sprite","imageName","w","h","texture","loadTexture","drawImage","context","j","degrees","save","translate","rotate","Math","PI","restore","SpriteManager","sprites","spritesPreloaded","addImage","getImage","imgName","preloadSprites","numSprites","numLoaded","forEach","sprite","engine","eventHandler","player","gameMaps","Map","playerMap","heroMap","nextMap","shopMap","needsRenderUpdate","textureManager","spriteManager","xScale","yScale","initTextures","handleEvents","processAction","handleInput","action","isPlayerTurn","performedAction","fov","compute","updateMap","handleEnemyTurns","actor","actors","ai","clearMaps","setHeroMap","previousMap","teardown","removeActor","addMap","indexOf","updatePlayerUI","setNextMap","setShopMap","has","set","draw","maps","values","saveJson","Date","localStorage","setItem","load","_EventHandler","mouse","mouseDown","addEventListener","targetedTile","pathTiles","removeEventListener","handleEvent","type","onMouseMove","onMouseDown","onMouseUp","onLeftClick","onRightClick","onChange","onKeydown","defaultDelay","lastShiftUp","treatShiftNumpadEqual","keysDown","keysDelayed","defaults","controls","key","preventDefault","getModifierState","shiftKey","code","startsWith","keyCode","getKey","endsWith","getItem","parse","resetToDefault","Array","from","entries","setControls","controlsMap","value","keys","val","clone","isPressed","pressed","get","defaultKeys","keyToTest","isDelayed","delayed","deleteKey","delay","setTimeout","testPressed","succeeded","ActionWithDirection","dx","dy","MovementAction","gameMap","position","destX","destY","isInBounds","tileAction","tryMoveTo","move","getBlockingActorAtLocation","blocksMovementComponent","blocksMovement","MeleeAction","blockingActor","entityFighter","blockingFighter","plural","blockingName","attackColor","description","damage","getDamage","getBlockedDamage","takeDamage","callEvent","_Component","args","baseType","parentEntity","cachedSave","clearSaveCache","hasComponent","components","saveBoolean","arg","defaultValue","loadBooleanOrObject","loadArg","loadArgArray","array","items","split","Fov","visible","setExplored","setVisible","BaseFov","previousVisibleTiles","visibleTiles","visibleActors","visibleItems","left","right","top","bottom","radius","max","min","height","addVisibleTile","addVisibleActor","object","addVisibleItem","exploreTile","tileArrayX","positionalObject","setComponent","FovSlope","greater","greaterOrEqual","lessOrEqual","AdamMilazzoFov","octant","computeOctant","originX","originY","rangeLimit","topY","bottomY","round","blocksLight","ax","wasOpaque","isOpaque","nx","ny","wallTiles","wallTile","blocksFov","Extend","static","out","arguments","Object","prototype","hasOwnProperty","call","deep","_AI","AIDead","previousAI","aiDead","statusMessageDom","healthFgDom","healthTextDom","powerDom","defenseDom","inventoryDom","updateStatus","status","updateHealth","current","percent","updatePower","power","updateDefense","defense","updateInventory","Position","moveTo","newX","newY","xOffset","yOffset","setX","setY","MathUtil","floor","random","WaitAction","WanderAction","randomInt","BinaryHeap","scoreFunction","sinkDown","pop","end","bubbleUp","node","size","rescoreElement","n","parentN","parent","elemScore","isDone","child2N","child1N","child1Score","swap","child1","child2","AStar","curr","path","unshift","f","graph","start","cleanDirty","heuristicType","heuristic","closest","openHeap","getHeap","closestNode","heuristicManhattan","heuristicDiagonal","markDirty","currentNode","pathTo","closed","neighbors","il","neighbor","isWall","gScore","g","getCost","beenVisited","visited","pos0","pos1","abs","D2","sqrt","d1","d2","GridNode","weight","fromNeighbor","Graph","gridIn","nodes","diagonal","grid","init","dirtyNodes","cleanNode","ret","graphString","rowDebug","AIHero","chaseLocation","movementActions","currentMovement","turnsToEnterDungeon","updateUIStatus","aiHero","decreaseTurnsToEnterDungeon","setStatus","newStatus","entityPosition","closestEnemies","closestDistance","entityFaction","isAlive","actorFaction","isEnemyOf","actorPosition","distance","closestEnemy","closestEnemyPosition","fovWidth","fovHeight","cost","fill","costGraph","search","lastAction","next","shift","BumpAction","AIMeleeChase","aiMeleeChase","BlocksFov","BlocksMovement","onEntityDeath","Cleanable","decreasesTo","increasesTo","cleanable","Faction","factions","enemies","faction","otherFaction","Fighter","baseHp","hp","baseDefense","baseDamage","minDamage","maxDamage","fighter","maxHp","setHp","newHp","updateUI","heal","amount","healedHp","die","aiArgs","removeComponent","getDamageDisplay","randomNumber","getMaxHp","statHp","equipmentHp","equipment","equippables","getEquippables","equippable","health","recalculateStats","newMax","calculateDamage","calculateDefense","statDamage","equipmentMinDamage","equipmentMaxDamage","statDefense","equipmentDefense","log","onComponentsLoaded","onEquipmentChange","types","component","create","getPosition","updatePositionOnly","setupGameHtml","resizeCanvas","gameDom","canvas","body","ctx","getContext","innerWidth","innerHeight","clearAll","clearRect","_Entity","letter","componentArray","loadComponents","event","xTileOffset","yTileOffset","Actor","Tile","Item","maxStackSize","setAmount","templates","loadTemplates","parsedJson","extends","createFromTemplate","loadTemplate","entities","CleanAction","cleanableActor","getCleanableActorAtLocation","cleanablePosition","changedEntity","addActor","DefaultPlayerEventHandler","clientX","clientY","ArrayUtil","numRows","GameMap","timeout","saveCache","create2dArray","clearTimeout","removeEntity","removeItem","addItem","groundPosition","itemPosition","amountToAdd","mapItem","isSamePosition","amountCanAdd","saveData","tileArray","letterArray","charCode","tileJson","String","fromCharCode","actorJson","itemJson","createdActor","createdItem","revealFromPosition","minX","maxX","minY","maxY","_revealGradually","maxRadius","xRadiusMin","xRadiusMax","yRadiusMin","yRadiusMax","xIsEdge","_revealAtPosition","getAliveActorAtLocation","aliveActor","addPlayer","tileX","Room","placeEntities","entityGroups","itemGroups","generators","loadEntityGroups","loadItemGroups","loadGenerator","group","generator","getChancesForLevel","level","chances","getActorForLevel","actorOrGroup","getRandomFromGroup","actorGroup","getItemForLevel","itemOrGroup","itemGroup","returnChance","totalWeight","chance","currentWeight","rand","RectangularRoom","x1","y1","x2","y2","getCenterX","getCenterY","intersects","otherRoom","createRoom","floorEntity","floorEntityCenter","floorEntityCracked","wallEntity","isVerticalEdge","isHorizontalEdge","wall","numMonsters","actorId","placeItems","maxItems","numItems","itemId","Tutorial","maxRooms","roomMinSize","roomMaxSize","minMonstersByFloor","maxMonstersByFloor","minItemsByFloor","maxItemsByFloor","getFloorAmount","weights","previousMapName","stairsInteractable","rooms","roomWidth","roomHeight","newRoom","centerX","centerY","setPosition","stairsDownX","stairsDownY","trapDoorX","trapDoorY","hero","room","BasicDungeon","intersectsOtherRoom","Shop","requestAnimationFrame"],"sourceRoot":""}